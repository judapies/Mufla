ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 2


  31:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSHL.c ****     100u, 100u, 100u, 100u, 
  50:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 20u, 20u, 20u, 
  54:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSHL.c ****     10u, 10u, 10u, 10u, 
  58:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 
  62:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  71:Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  72:Generated_Source\PSoC5/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  73:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  74:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  75:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  76:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  77:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  78:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  79:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button2__BTN */
  80:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button3__BTN */
  81:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  83:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  84:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  86:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  87:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 3


  88:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
  89:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  90:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  91:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
  92:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
  93:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
  94:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
  95:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
  96:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
  97:Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
  98:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
  99:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 100:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 101:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 102:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 103:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 104:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 105:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 106:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 107:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 108:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 109:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 110:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 111:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 112:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 113:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 114:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 115:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 116:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 117:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 118:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 119:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 120:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 121:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 122:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 123:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 124:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 125:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 126:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 127:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 128:Generated_Source\PSoC5/CapSense_CSHL.c **** {
  28              		.loc 1 128 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
 129:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 130:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 131:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  37              		.loc 1 131 0
  38 0002 0C4B     		ldr	r3, .L3
  39 0004 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
  40              	.LVL1:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 4


 132:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 133:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 134:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 135:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 136:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 137:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 138:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 139:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 140:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 141:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 142:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 143:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 144:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 145:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  41              		.loc 1 145 0
  42 0006 0C4B     		ldr	r3, .L3+4
  43 0008 33F81030 		ldrh	r3, [r3, r0, lsl #1]
  44 000c 0B49     		ldr	r1, .L3+8
  45 000e 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
 146:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  46              		.loc 1 146 0
  47 0012 0021     		movs	r1, #0
  48 0014 0A4C     		ldr	r4, .L3+12
  49 0016 2154     		strb	r1, [r4, r0]
 147:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  50              		.loc 1 147 0
  51 0018 0A4C     		ldr	r4, .L3+16
  52 001a 2154     		strb	r1, [r4, r0]
 148:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 149:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  53              		.loc 1 149 0
  54 001c 0A49     		ldr	r1, .L3+20
  55 001e 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
  56 0020 0A49     		ldr	r1, .L3+24
  57 0022 8C54     		strb	r4, [r1, r2]
 150:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 151:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 152:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 153:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 154:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 155:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  58              		.loc 1 155 0
  59 0024 0A4A     		ldr	r2, .L3+28
  60              	.LVL2:
  61 0026 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 156:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
  62              		.loc 1 156 0
  63 002a 0A4A     		ldr	r2, .L3+32
  64 002c 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 157:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 158:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 159:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 160:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 161:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 162:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 163:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 164:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 5


 165:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 166:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 167:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 168:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 169:Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 170:Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 171:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 172:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 173:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 174:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 175:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 176:Generated_Source\PSoC5/CapSense_CSHL.c **** }
  65              		.loc 1 176 0
  66 0030 10BC     		pop	{r4}
  67              		.cfi_restore 4
  68              		.cfi_def_cfa_offset 0
  69 0032 7047     		bx	lr
  70              	.L4:
  71              		.align	2
  72              	.L3:
  73 0034 00000000 		.word	CapSense_widgetNumber
  74 0038 00000000 		.word	CapSense_sensorRaw
  75 003c 00000000 		.word	CapSense_sensorBaseline
  76 0040 00000000 		.word	CapSense_sensorBaselineLow
  77 0044 00000000 		.word	CapSense_sensorSignal
  78 0048 00000000 		.word	.LANCHOR0
  79 004c 00000000 		.word	.LANCHOR1
  80 0050 00000000 		.word	CapSense_rawFilterData1
  81 0054 00000000 		.word	CapSense_rawFilterData2
  82              		.cfi_endproc
  83              	.LFE0:
  84              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  85              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  86              		.align	2
  87              		.global	CapSense_InitializeSensorBaseline
  88              		.thumb
  89              		.thumb_func
  90              		.type	CapSense_InitializeSensorBaseline, %function
  91              	CapSense_InitializeSensorBaseline:
  92              	.LFB1:
 177:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 178:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 179:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 180:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 181:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 182:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 183:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 184:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 185:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 186:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 187:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 188:Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 189:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 190:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 191:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 192:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 193:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 6


 194:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 195:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 196:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 197:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 198:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 199:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 200:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 201:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 202:Generated_Source\PSoC5/CapSense_CSHL.c **** {
  93              		.loc 1 202 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              	.LVL3:
  98 0000 10B5     		push	{r4, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 102 0002 0446     		mov	r4, r0
 203:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 204:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 103              		.loc 1 204 0
 104 0004 FFF7FEFF 		bl	CapSense_ScanSensor
 105              	.LVL4:
 106              	.L6:
 205:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 107              		.loc 1 205 0 discriminator 1
 108 0008 FFF7FEFF 		bl	CapSense_IsBusy
 109              	.LVL5:
 110 000c 0028     		cmp	r0, #0
 111 000e FBD1     		bne	.L6
 206:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 207:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 208:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 209:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 210:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 211:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 212:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 112              		.loc 1 212 0
 113 0010 2046     		mov	r0, r4
 114 0012 FFF7FEFF 		bl	CapSense_BaseInit
 115              	.LVL6:
 116 0016 10BD     		pop	{r4, pc}
 117              		.cfi_endproc
 118              	.LFE1:
 119              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 120              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 121              		.align	2
 122              		.global	CapSense_InitializeAllBaselines
 123              		.thumb
 124              		.thumb_func
 125              		.type	CapSense_InitializeAllBaselines, %function
 126              	CapSense_InitializeAllBaselines:
 127              	.LFB2:
 213:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 214:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 215:Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 7


 216:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 217:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 218:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 219:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 220:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 221:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 222:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 223:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 224:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 225:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 226:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 227:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 228:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 229:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 230:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 231:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 232:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 233:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 234:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 235:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 236:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 237:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 238:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 239:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 240:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 241:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 242:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 243:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 244:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 245:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 246:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 247:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 248:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 249:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 250:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 251:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 253:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 254:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 128              		.loc 1 254 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 136              	.LVL7:
 255:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 256:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 257:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 258:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 137              		.loc 1 258 0
 138 0002 0024     		movs	r4, #0
 139 0004 04E0     		b	.L9
 140              	.LVL8:
 141              	.L10:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 8


 259:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 260:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 142              		.loc 1 260 0 discriminator 3
 143 0006 2046     		mov	r0, r4
 144 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 145              	.LVL9:
 258:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 146              		.loc 1 258 0 discriminator 3
 147 000c 0134     		adds	r4, r4, #1
 148              	.LVL10:
 149 000e E4B2     		uxtb	r4, r4
 150              	.LVL11:
 151              	.L9:
 258:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 152              		.loc 1 258 0 is_stmt 0 discriminator 1
 153 0010 032C     		cmp	r4, #3
 154 0012 F8D9     		bls	.L10
 261:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 262:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 155              		.loc 1 262 0 is_stmt 1
 156 0014 10BD     		pop	{r4, pc}
 157              		.cfi_endproc
 158              	.LFE2:
 159              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 160 0016 00BF     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 161              		.align	2
 162              		.global	CapSense_InitializeEnabledBaselines
 163              		.thumb
 164              		.thumb_func
 165              		.type	CapSense_InitializeEnabledBaselines, %function
 166              	CapSense_InitializeEnabledBaselines:
 167              	.LFB3:
 263:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 264:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 265:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 269:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 270:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 271:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 272:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 273:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 275:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 277:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 279:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 280:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 282:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 283:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 284:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 285:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 286:Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 287:Generated_Source\PSoC5/CapSense_CSHL.c **** {
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 9


 168              		.loc 1 287 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 10B5     		push	{r4, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 288:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 289:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 290:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 291:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 292:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 176              		.loc 1 292 0
 177 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 178              	.LVL12:
 179              	.L13:
 293:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 180              		.loc 1 293 0 discriminator 1
 181 0006 FFF7FEFF 		bl	CapSense_IsBusy
 182              	.LVL13:
 183 000a 0028     		cmp	r0, #0
 184 000c FBD1     		bne	.L13
 185 000e 0024     		movs	r4, #0
 186 0010 11E0     		b	.L14
 187              	.LVL14:
 188              	.L16:
 294:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 295:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 296:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 297:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 298:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 299:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 300:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 189              		.loc 1 300 0
 190 0012 E208     		lsrs	r2, r4, #3
 301:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 191              		.loc 1 301 0
 192 0014 04F00701 		and	r1, r4, #7
 193 0018 0123     		movs	r3, #1
 194 001a 8B40     		lsls	r3, r3, r1
 195              	.LVL15:
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 304:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 196              		.loc 1 304 0
 197 001c 0749     		ldr	r1, .L18
 198 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 199 0020 1342     		tst	r3, r2
 200 0022 03D1     		bne	.L15
 305:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 306:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 201              		.loc 1 306 0
 202 0024 0022     		movs	r2, #0
 203 0026 064B     		ldr	r3, .L18+4
 204              	.LVL16:
 205 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 10


 206              	.L15:
 307:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 308:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 309:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 310:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 207              		.loc 1 310 0 discriminator 2
 208 002c 2046     		mov	r0, r4
 209 002e FFF7FEFF 		bl	CapSense_BaseInit
 210              	.LVL17:
 298:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 211              		.loc 1 298 0 discriminator 2
 212 0032 0134     		adds	r4, r4, #1
 213              	.LVL18:
 214 0034 E4B2     		uxtb	r4, r4
 215              	.LVL19:
 216              	.L14:
 298:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 217              		.loc 1 298 0 is_stmt 0 discriminator 1
 218 0036 032C     		cmp	r4, #3
 219 0038 EBD9     		bls	.L16
 311:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 312:Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 220              		.loc 1 312 0 is_stmt 1
 221 003a 10BD     		pop	{r4, pc}
 222              	.LVL20:
 223              	.L19:
 224              		.align	2
 225              	.L18:
 226 003c 00000000 		.word	CapSense_sensorEnableMask
 227 0040 00000000 		.word	CapSense_sensorRaw
 228              		.cfi_endproc
 229              	.LFE3:
 230              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 231              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 232              		.align	2
 233              		.global	CapSense_CheckIsSensorActive
 234              		.thumb
 235              		.thumb_func
 236              		.type	CapSense_CheckIsSensorActive, %function
 237              	CapSense_CheckIsSensorActive:
 238              	.LFB6:
 313:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 314:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 315:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 316:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 317:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 318:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 319:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 320:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 321:Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 322:Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 323:Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 324:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 325:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 326:Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 327:Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 328:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 11


 329:Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 330:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 331:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 332:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 333:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 334:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 335:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 336:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 337:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 338:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 339:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 340:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 341:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 342:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 343:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 344:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 345:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 346:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 347:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 348:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 349:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 350:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 351:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 353:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 354:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 355:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 356:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 357:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 358:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 359:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 360:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 361:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 362:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 363:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 364:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 365:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 366:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 367:Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 368:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 369:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 370:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 371:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 372:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 373:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 374:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 375:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 376:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 377:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 378:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 379:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 380:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 381:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 382:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 383:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 384:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 385:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 12


 386:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 387:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 388:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 389:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 390:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 391:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 392:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 393:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 394:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 395:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 396:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 398:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 399:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 400:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 401:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 402:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 403:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 404:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 405:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 406:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 407:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 408:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 409:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 410:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 411:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 412:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 413:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 414:Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 415:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 416:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 417:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 418:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 419:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 420:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 422:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 423:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 424:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 426:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 427:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 428:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 429:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 430:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 431:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 432:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 433:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 434:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 436:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 437:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 438:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 440:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 441:Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 442:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 13


 443:Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 444:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 445:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 446:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 447:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 448:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 449:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 450:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 451:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 452:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 453:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 454:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 455:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 456:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 457:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 458:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 459:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 460:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 461:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 462:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 463:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 464:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 465:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 466:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 467:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 468:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 470:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 471:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 472:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 473:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 474:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 475:Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 476:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 477:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 478:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 479:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 480:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 481:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 482:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 483:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 484:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 486:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 487:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 488:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 489:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 490:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 491:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 492:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 493:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 494:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 495:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 496:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 498:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 499:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 14


 500:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 501:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 502:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 503:Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 504:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 506:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 507:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 508:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 509:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 510:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 511:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 512:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 513:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 514:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 515:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 516:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 517:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 518:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 519:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 520:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 521:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 522:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 523:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 524:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 525:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 526:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 527:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 528:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 529:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 530:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 531:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 532:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 533:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 534:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 535:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 536:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 537:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 538:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 539:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 540:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 541:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 542:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 543:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 544:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 545:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 546:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 547:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 548:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 549:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 550:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 551:Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 552:Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 553:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 554:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 555:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 556:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 15


 557:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 558:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 559:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 560:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 561:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 562:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 563:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 564:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 565:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 566:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 567:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 568:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 569:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 570:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 571:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 572:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 573:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 574:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 575:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 576:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 577:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 578:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 579:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 580:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 581:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 582:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 583:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 584:Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 585:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 239              		.loc 1 585 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL21:
 244 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 245              		.cfi_def_cfa_offset 20
 246              		.cfi_offset 4, -20
 247              		.cfi_offset 5, -16
 248              		.cfi_offset 6, -12
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 586:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 587:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 588:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 251              		.loc 1 588 0
 252 0002 C408     		lsrs	r4, r0, #3
 253              	.LVL22:
 589:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 254              		.loc 1 589 0
 255 0004 00F00702 		and	r2, r0, #7
 256 0008 0123     		movs	r3, #1
 257 000a 9340     		lsls	r3, r3, r2
 258 000c DBB2     		uxtb	r3, r3
 259              	.LVL23:
 590:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 591:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 260              		.loc 1 591 0
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 16


 261 000e 194A     		ldr	r2, .L27
 262 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 592:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 263              		.loc 1 592 0
 264 0012 194D     		ldr	r5, .L27+4
 265 0014 AE18     		adds	r6, r5, r2
 266 0016 3779     		ldrb	r7, [r6, #4]	@ zero_extendqisi2
 267              	.LVL24:
 593:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 268              		.loc 1 593 0
 269 0018 317A     		ldrb	r1, [r6, #8]	@ zero_extendqisi2
 270              	.LVL25:
 594:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 271              		.loc 1 594 0
 272 001a AE5C     		ldrb	r6, [r5, r2]	@ zero_extendqisi2
 273              	.LVL26:
 595:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 596:Generated_Source\PSoC5/CapSense_CSHL.c ****     debounceIndex = widget;
 597:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 598:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 599:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 600:Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 274              		.loc 1 600 0
 275 001c 174D     		ldr	r5, .L27+8
 276 001e 2D5D     		ldrb	r5, [r5, r4]	@ zero_extendqisi2
 277 0020 2B42     		tst	r3, r5
 278 0022 0DD0     		beq	.L21
 601:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 602:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 603:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 279              		.loc 1 603 0
 280 0024 DFF85CE0 		ldr	lr, .L27+16
 281 0028 1EF80000 		ldrb	r0, [lr, r0]	@ zero_extendqisi2
 282              	.LVL27:
 283 002c 791A     		subs	r1, r7, r1
 284              	.LVL28:
 285 002e 8842     		cmp	r0, r1
 286 0030 1ADA     		bge	.L22
 604:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 605:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 287              		.loc 1 605 0
 288 0032 25EA0305 		bic	r5, r5, r3
 289 0036 1149     		ldr	r1, .L27+8
 290 0038 0D55     		strb	r5, [r1, r4]
 606:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 291              		.loc 1 606 0
 292 003a 1149     		ldr	r1, .L27+12
 293 003c 8E54     		strb	r6, [r1, r2]
 294 003e 13E0     		b	.L22
 295              	.LVL29:
 296              	.L21:
 607:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 608:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 609:Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 610:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 611:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 612:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 17


 297              		.loc 1 612 0
 298 0040 DFF840E0 		ldr	lr, .L27+16
 299 0044 1EF80000 		ldrb	r0, [lr, r0]	@ zero_extendqisi2
 300              	.LVL30:
 301 0048 3944     		add	r1, r1, r7
 302              	.LVL31:
 303 004a 8842     		cmp	r0, r1
 304 004c 0ADD     		ble	.L23
 613:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 614:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 615:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 305              		.loc 1 615 0
 306 004e 0C49     		ldr	r1, .L27+12
 307 0050 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 308 0052 0129     		cmp	r1, #1
 309 0054 02D8     		bhi	.L24
 616:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 617:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 310              		.loc 1 617 0
 311 0056 1D43     		orrs	r5, r5, r3
 312 0058 0848     		ldr	r0, .L27+8
 313 005a 0555     		strb	r5, [r0, r4]
 314              	.L24:
 618:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 619:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 315              		.loc 1 619 0
 316 005c 0139     		subs	r1, r1, #1
 317 005e 0848     		ldr	r0, .L27+12
 318 0060 8154     		strb	r1, [r0, r2]
 319 0062 01E0     		b	.L22
 320              	.L23:
 620:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 621:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 622:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 623:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 624:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 321              		.loc 1 624 0
 322 0064 0649     		ldr	r1, .L27+12
 323 0066 8E54     		strb	r6, [r1, r2]
 324              	.L22:
 625:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 626:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 627:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 628:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 325              		.loc 1 628 0
 326 0068 044A     		ldr	r2, .L27+8
 327              	.LVL32:
 328 006a 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 329 006c 1840     		ands	r0, r3, r0
 330 006e 00D0     		beq	.L25
 331 0070 0120     		movs	r0, #1
 332              	.L25:
 629:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 333              		.loc 1 629 0 discriminator 4
 334 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 335              	.LVL33:
 336              	.L28:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 18


 337              		.align	2
 338              	.L27:
 339 0074 00000000 		.word	CapSense_widgetNumber
 340 0078 00000000 		.word	.LANCHOR0
 341 007c 00000000 		.word	CapSense_sensorOnMask
 342 0080 00000000 		.word	.LANCHOR1
 343 0084 00000000 		.word	CapSense_sensorSignal
 344              		.cfi_endproc
 345              	.LFE6:
 346              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 347              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 348              		.align	2
 349              		.global	CapSense_CheckIsWidgetActive
 350              		.thumb
 351              		.thumb_func
 352              		.type	CapSense_CheckIsWidgetActive, %function
 353              	CapSense_CheckIsWidgetActive:
 354              	.LFB7:
 630:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 631:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 632:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 633:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 634:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 635:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 636:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 637:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 638:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 639:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 640:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 641:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 642:Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 643:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 644:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 645:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 646:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 647:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 648:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 649:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 650:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 651:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 652:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 653:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 654:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 655:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 656:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 657:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 355              		.loc 1 657 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL34:
 360 0000 70B5     		push	{r4, r5, r6, lr}
 361              		.cfi_def_cfa_offset 16
 362              		.cfi_offset 4, -16
 363              		.cfi_offset 5, -12
 364              		.cfi_offset 6, -8
 365              		.cfi_offset 14, -4
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 19


 658:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 366              		.loc 1 658 0
 367 0002 094B     		ldr	r3, .L34
 368 0004 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 369              	.LVL35:
 659:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 370              		.loc 1 659 0
 371 0006 1844     		add	r0, r0, r3
 372              	.LVL36:
 373 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 374 000a 2544     		add	r5, r5, r4
 375 000c EDB2     		uxtb	r5, r5
 376              	.LVL37:
 660:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 377              		.loc 1 660 0
 378 000e 0026     		movs	r6, #0
 379              	.LVL38:
 380              	.L31:
 661:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 662:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 663:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 664:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 665:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 381              		.loc 1 665 0
 382 0010 2046     		mov	r0, r4
 383 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 384              	.LVL39:
 385 0016 00B1     		cbz	r0, .L30
 666:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 667:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 386              		.loc 1 667 0
 387 0018 0126     		movs	r6, #1
 388              	.LVL40:
 389              	.L30:
 668:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 669:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 390              		.loc 1 669 0
 391 001a 0134     		adds	r4, r4, #1
 392              	.LVL41:
 393 001c E4B2     		uxtb	r4, r4
 394              	.LVL42:
 670:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 671:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 395              		.loc 1 671 0
 396 001e A542     		cmp	r5, r4
 397 0020 F6D8     		bhi	.L31
 672:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 673:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 674:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 675:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 676:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 398              		.loc 1 676 0
 399 0022 3046     		mov	r0, r6
 400 0024 70BD     		pop	{r4, r5, r6, pc}
 401              	.LVL43:
 402              	.L35:
 403 0026 00BF     		.align	2
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 20


 404              	.L34:
 405 0028 00000000 		.word	.LANCHOR2
 406              		.cfi_endproc
 407              	.LFE7:
 408              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 409              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 410              		.align	2
 411              		.global	CapSense_CheckIsAnyWidgetActive
 412              		.thumb
 413              		.thumb_func
 414              		.type	CapSense_CheckIsAnyWidgetActive, %function
 415              	CapSense_CheckIsAnyWidgetActive:
 416              	.LFB8:
 677:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 678:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 679:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 680:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 681:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 682:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 683:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 684:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 685:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 686:Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 687:Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 688:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 689:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 690:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 691:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 692:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 693:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 694:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 695:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 696:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 697:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 698:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 699:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 700:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 701:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 417              		.loc 1 701 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 38B5     		push	{r3, r4, r5, lr}
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 3, -16
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427              	.LVL44:
 702:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 703:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 428              		.loc 1 703 0
 429 0002 0025     		movs	r5, #0
 704:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 705:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 430              		.loc 1 705 0
 431 0004 2C46     		mov	r4, r5
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 21


 432 0006 06E0     		b	.L37
 433              	.LVL45:
 434              	.L39:
 706:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 707:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 435              		.loc 1 707 0
 436 0008 2046     		mov	r0, r4
 437 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 438              	.LVL46:
 439 000e 00B1     		cbz	r0, .L38
 708:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 709:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 440              		.loc 1 709 0
 441 0010 0125     		movs	r5, #1
 442              	.LVL47:
 443              	.L38:
 705:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 444              		.loc 1 705 0 discriminator 2
 445 0012 0134     		adds	r4, r4, #1
 446              	.LVL48:
 447 0014 E4B2     		uxtb	r4, r4
 448              	.LVL49:
 449              	.L37:
 705:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 450              		.loc 1 705 0 is_stmt 0 discriminator 1
 451 0016 032C     		cmp	r4, #3
 452 0018 F6D9     		bls	.L39
 710:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 711:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 712:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 713:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 714:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 715:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 453              		.loc 1 715 0 is_stmt 1
 454 001a 2846     		mov	r0, r5
 455 001c 38BD     		pop	{r3, r4, r5, pc}
 456              		.cfi_endproc
 457              	.LFE8:
 458              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 459 001e 00BF     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 460              		.align	2
 461              		.global	CapSense_EnableWidget
 462              		.thumb
 463              		.thumb_func
 464              		.type	CapSense_EnableWidget, %function
 465              	CapSense_EnableWidget:
 466              	.LFB9:
 716:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 717:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 718:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 719:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 720:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 721:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 722:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 723:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 724:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 725:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 22


 726:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 727:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 728:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 729:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 730:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 731:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 732:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 733:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 734:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 735:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 736:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 737:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 738:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 739:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 740:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 742:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 743:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 746:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 747:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 467              		.loc 1 747 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472              	.LVL50:
 473 0000 30B4     		push	{r4, r5}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 5, -4
 748:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 749:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 750:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 477              		.loc 1 750 0
 478 0002 0B4A     		ldr	r2, .L45
 479 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 480              	.LVL51:
 751:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 481              		.loc 1 751 0
 482 0006 1044     		add	r0, r0, r2
 483              	.LVL52:
 484 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 485 000a 1D44     		add	r5, r5, r3
 486 000c EDB2     		uxtb	r5, r5
 487              	.LVL53:
 488              	.L43:
 752:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 753:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 754:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 755:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 756:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 489              		.loc 1 756 0 discriminator 1
 490 000e D808     		lsrs	r0, r3, #3
 491              	.LVL54:
 757:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 23


 492              		.loc 1 757 0 discriminator 1
 493 0010 03F00701 		and	r1, r3, #7
 494 0014 0122     		movs	r2, #1
 495 0016 8A40     		lsls	r2, r2, r1
 496 0018 D2B2     		uxtb	r2, r2
 497              	.LVL55:
 758:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 759:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 498              		.loc 1 759 0 discriminator 1
 499 001a 064C     		ldr	r4, .L45+4
 500 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 501 001e 0A43     		orrs	r2, r2, r1
 502              	.LVL56:
 503 0020 2254     		strb	r2, [r4, r0]
 760:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 504              		.loc 1 760 0 discriminator 1
 505 0022 0133     		adds	r3, r3, #1
 506              	.LVL57:
 507 0024 DBB2     		uxtb	r3, r3
 508              	.LVL58:
 761:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 762:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 509              		.loc 1 762 0 discriminator 1
 510 0026 9D42     		cmp	r5, r3
 511 0028 F1D8     		bhi	.L43
 763:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 764:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 765:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 512              		.loc 1 765 0
 513 002a 30BC     		pop	{r4, r5}
 514              		.cfi_restore 5
 515              		.cfi_restore 4
 516              		.cfi_def_cfa_offset 0
 517              	.LVL59:
 518 002c 7047     		bx	lr
 519              	.L46:
 520 002e 00BF     		.align	2
 521              	.L45:
 522 0030 00000000 		.word	.LANCHOR2
 523 0034 00000000 		.word	CapSense_sensorEnableMask
 524              		.cfi_endproc
 525              	.LFE9:
 526              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 527              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 528              		.align	2
 529              		.global	CapSense_DisableWidget
 530              		.thumb
 531              		.thumb_func
 532              		.type	CapSense_DisableWidget, %function
 533              	CapSense_DisableWidget:
 534              	.LFB10:
 766:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 767:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 768:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 769:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 770:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 771:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 24


 772:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 773:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 774:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 775:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 776:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 777:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 778:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 779:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 780:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 781:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 782:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 783:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 784:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 785:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 786:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 787:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 788:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 789:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 790:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 792:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 793:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 795:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 796:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 797:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 535              		.loc 1 797 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540              	.LVL60:
 541 0000 30B4     		push	{r4, r5}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 4, -8
 544              		.cfi_offset 5, -4
 798:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 799:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 800:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 545              		.loc 1 800 0
 546 0002 0B4A     		ldr	r2, .L50
 547 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 548              	.LVL61:
 801:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 549              		.loc 1 801 0
 550 0006 1044     		add	r0, r0, r2
 551              	.LVL62:
 552 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 553 000a 1D44     		add	r5, r5, r3
 554 000c EDB2     		uxtb	r5, r5
 555              	.LVL63:
 556              	.L48:
 802:Generated_Source\PSoC5/CapSense_CSHL.c ****    
 803:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 804:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 805:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 806:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 25


 557              		.loc 1 806 0 discriminator 1
 558 000e D808     		lsrs	r0, r3, #3
 559              	.LVL64:
 807:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 560              		.loc 1 807 0 discriminator 1
 561 0010 03F00701 		and	r1, r3, #7
 562 0014 0122     		movs	r2, #1
 563 0016 8A40     		lsls	r2, r2, r1
 564 0018 D2B2     		uxtb	r2, r2
 565              	.LVL65:
 808:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 809:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 566              		.loc 1 809 0 discriminator 1
 567 001a 064C     		ldr	r4, .L50+4
 568 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 569 001e 21EA0202 		bic	r2, r1, r2
 570              	.LVL66:
 571 0022 2254     		strb	r2, [r4, r0]
 810:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 572              		.loc 1 810 0 discriminator 1
 573 0024 0133     		adds	r3, r3, #1
 574              	.LVL67:
 575 0026 DBB2     		uxtb	r3, r3
 576              	.LVL68:
 811:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 812:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 577              		.loc 1 812 0 discriminator 1
 578 0028 9D42     		cmp	r5, r3
 579 002a F0D8     		bhi	.L48
 813:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 814:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 815:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 580              		.loc 1 815 0
 581 002c 30BC     		pop	{r4, r5}
 582              		.cfi_restore 5
 583              		.cfi_restore 4
 584              		.cfi_def_cfa_offset 0
 585              	.LVL69:
 586 002e 7047     		bx	lr
 587              	.L51:
 588              		.align	2
 589              	.L50:
 590 0030 00000000 		.word	.LANCHOR2
 591 0034 00000000 		.word	CapSense_sensorEnableMask
 592              		.cfi_endproc
 593              	.LFE10:
 594              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 595              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 596              		.align	2
 597              		.global	CapSense_MedianFilter
 598              		.thumb
 599              		.thumb_func
 600              		.type	CapSense_MedianFilter, %function
 601              	CapSense_MedianFilter:
 602              	.LFB11:
 816:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 817:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 26


 818:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 819:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 820:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 821:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 822:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 823:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 824:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 825:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 826:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 827:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 828:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 829:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 830:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 831:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 832:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 833:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 834:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 835:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 836:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 837:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 838:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 839:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 840:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 841:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 842:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 843:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 844:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 845:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 846:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 847:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 848:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 849:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 850:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 851:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 852:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 853:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 854:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 855:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 856:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 857:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 858:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 859:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 860:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 861:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset]; 
 862:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 863:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 864:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 865:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 866:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 867:Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 868:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 869:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 870:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 871:Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 872:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 873:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 874:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 27


 875:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 876:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 877:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 878:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 879:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 880:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 881:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 882:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 883:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 884:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 885:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 886:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 887:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 888:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 889:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 890:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 891:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 892:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 893:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 894:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 895:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 896:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 897:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 898:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 899:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 900:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 901:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 902:Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 903:Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 904:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 905:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 906:Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 907:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 908:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 909:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 910:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 911:Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 912:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 913:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 914:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 915:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 916:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 917:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 918:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 919:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 920:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 921:Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 922:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 923:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 924:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 925:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 926:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 927:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 928:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 929:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 930:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 931:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 28


 932:Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 933:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 934:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 935:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 936:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 937:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 938:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 939:Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 940:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 941:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 942:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 943:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 944:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 945:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 946:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 947:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 948:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 949:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 950:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 951:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 952:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 953:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 954:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 955:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 956:Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
 957:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 958:Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 959:Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 960:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
 961:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 962:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 963:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 964:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 965:Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 966:Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 967:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 968:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 969:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 970:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 971:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 972:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 973:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 974:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 975:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 976:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
 977:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 978:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 979:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 980:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 981:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
 982:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 983:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 984:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
 985:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
 986:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 987:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
 988:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 29


 989:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 990:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
 991:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 992:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 993:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 994:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
 995:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 996:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 997:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
 998:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
 999:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1000:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1001:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1002:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1003:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1004:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1005:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1006:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
1007:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
1008:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1009:Generated_Source\PSoC5/CapSense_CSHL.c ****                
1010:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1011:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1012:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1013:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1014:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
1015:Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint8 CapSense_centroid[3u];
1016:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1017:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1018:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
1019:Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1020:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1021:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1022:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1023:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1024:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1025:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1026:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1027:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1028:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1029:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1030:Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1031:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1032:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1033:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1034:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1035:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1036:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1037:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1038:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1039:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1040:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1041:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1042:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1043:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1044:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1045:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 30


1046:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1047:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1048:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1049:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1050:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1051:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1052:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1053:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1054:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1055:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1056:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1057:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1058:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1059:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1060:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1061:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1062:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1063:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1064:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1065:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1066:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1067:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1068:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1069:Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1070:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1071:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1072:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1073:Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1074:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1075:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1076:Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1077:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1078:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1079:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
1080:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1081:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1082:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1083:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
1084:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1085:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1086:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1087:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1088:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1089:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1090:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1091:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1092:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1093:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1094:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1095:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1096:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1097:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1098:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1099:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1100:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1101:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1102:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 31


1103:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1104:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1105:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1106:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1107:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1108:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1109:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1110:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1112:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1113:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1114:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1115:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1116:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1117:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1118:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1119:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1120:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1121:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1122:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1123:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1124:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1125:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1126:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1127:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1128:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1129:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1130:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1131:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1132:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1133:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1134:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1135:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1136:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1137:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1138:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1139:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1140:Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1141:Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1142:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1143:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1144:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1145:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1146:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1147:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1148:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1149:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1150:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1151:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1152:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1153:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1154:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1155:Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1156:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1157:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1158:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1159:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 32


1160:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1161:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1162:Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1163:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1164:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1165:Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
1166:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1167:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1168:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1169:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1170:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1171:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1172:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1173:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1174:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1175:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1176:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1177:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1178:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1179:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1180:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1181:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1182:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1183:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1184:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1185:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1186:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1187:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1188:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1189:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1190:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1191:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1192:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1193:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1194:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1195:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1196:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1197:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1198:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1199:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1200:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1201:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1202:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1203:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1204:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1205:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1206:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1207:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1208:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1209:Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1210:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1211:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1212:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1213:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1214:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1215:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1216:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 33


1217:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1218:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1219:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1220:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1221:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1222:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1223:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1224:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1225:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1226:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1227:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1228:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1229:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1230:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1231:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1232:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1233:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1234:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1235:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1236:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1237:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1238:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1239:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1240:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1241:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1242:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1243:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1244:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1245:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1246:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1247:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1248:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1249:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1250:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1251:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1252:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1253:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1254:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1255:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1256:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1257:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1258:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1259:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1260:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1261:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1262:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1263:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1264:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1265:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1266:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1267:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1268:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1269:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1270:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1271:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1272:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1273:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 34


1274:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1275:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1276:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1277:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1278:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1279:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1280:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1281:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1282:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1283:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1284:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1285:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1286:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1287:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1288:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1289:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1290:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1291:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1292:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1293:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1294:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1295:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1296:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1297:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1298:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1299:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1300:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1301:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1302:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1303:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1304:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1305:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1306:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1307:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1308:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1309:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1310:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1311:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1312:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1313:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1314:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1315:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1316:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1317:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1318:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1319:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1320:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1321:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1322:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1323:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1324:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1325:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1326:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1327:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1328:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1329:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1330:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 35


1331:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1332:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1333:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1334:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1335:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1336:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1337:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1338:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1339:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1340:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1341:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1342:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1343:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1344:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1345:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1346:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1347:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1348:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1349:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1350:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1351:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1352:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1353:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1354:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1355:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1356:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1357:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1358:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1359:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1360:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1361:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1362:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1363:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1364:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1365:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1366:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1367:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1368:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1369:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1370:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1371:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1372:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1373:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1374:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1375:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1376:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1377:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1378:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1379:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1380:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1381:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1382:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1383:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1384:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1385:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1386:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1387:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 36


1388:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1389:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1390:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1391:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1392:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1393:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1394:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1395:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1396:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1397:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1398:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1399:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1400:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1401:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1402:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1403:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1404:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1405:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1406:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1407:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1408:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1409:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1410:Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1411:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1412:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1413:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1414:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1415:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1416:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1417:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1418:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1419:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1420:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1421:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1422:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1423:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1424:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1425:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1426:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1427:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1428:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1429:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1430:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1431:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1432:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1433:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1434:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1435:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1436:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1437:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1438:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1439:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1440:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1441:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1442:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1443:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1444:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 37


1445:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1446:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1447:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1448:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1449:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1450:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1451:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1452:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1453:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1454:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1455:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1456:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1457:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1458:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1459:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1460:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1461:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1462:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1463:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1464:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1465:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1466:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1467:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1468:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1469:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1470:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1471:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1472:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1473:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1474:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1475:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1476:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1477:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1478:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1479:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1480:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1481:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1482:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1483:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1484:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1485:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1486:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1487:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1488:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1489:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1490:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1491:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1492:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1493:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1494:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1495:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1496:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1497:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1498:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1499:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
1500:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1501:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 38


1502:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1503:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1504:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1505:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1506:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1507:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1508:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1509:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1510:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1511:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1512:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1513:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1514:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1515:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1516:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1517:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1518:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1519:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1520:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1521:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1522:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1523:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1524:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1525:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1526:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1527:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1528:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1529:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1530:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1531:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1532:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1533:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1534:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1535:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1536:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1537:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1538:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1539:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1540:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1541:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1542:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1543:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1544:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1545:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1546:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1547:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1548:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1549:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1550:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1551:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1552:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1553:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1554:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1555:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1556:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1557:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1558:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 39


1559:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1560:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1561:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1562:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1563:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1564:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1565:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1566:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1567:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1568:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1569:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1570:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1571:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1572:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1573:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1574:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1575:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1576:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1577:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1578:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1579:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1580:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1581:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1582:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1583:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1584:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1585:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1586:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1587:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1588:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1589:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1590:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1591:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1592:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1593:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1594:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1595:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1596:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1597:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1598:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1599:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1600:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1601:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1602:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1603:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1604:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1605:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1606:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1607:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1608:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1609:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1610:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1611:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1612:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1613:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1614:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1615:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxX;
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 40


1616:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxY;
1617:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1618:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1619:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1620:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1621:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1622:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1623:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1624:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1625:Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1626:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1627:Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1628:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1629:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1630:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maxX != 0xFFu)
1631:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1632:Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1633:Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1634:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1635:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1636:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1637:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1638:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1639:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1640:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1641:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1642:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (maxY != 0xFFu)
1643:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1644:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1645:Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1646:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1647:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1648:Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(maxY, offset, count, 
1649:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1650:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1651:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1652:Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1653:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1654:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1655:Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(maxX, offset, count, 
1656:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1657:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1658:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1659:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1660:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1661:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1662:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1663:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1664:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1665:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1666:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1667:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1668:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1669:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1670:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1671:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1672:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 41


1673:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
1674:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1675:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1676:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1677:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1678:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1679:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1680:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1681:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1682:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1683:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1684:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1685:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1686:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1687:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1688:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1689:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1690:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1691:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1692:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1693:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1694:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1695:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1696:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1697:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1698:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
1699:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1700:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1701:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1702:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1703:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1704:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1705:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1706:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1707:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1708:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1709:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1710:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1711:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1712:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1713:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1714:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
1715:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1716:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1717:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1718:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1719:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1720:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1721:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1722:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1723:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1724:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1725:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1726:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1727:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1728:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1729:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 42


1730:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
1731:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1732:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1733:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1734:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1735:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1736:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1737:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1738:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1739:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1740:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1741:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1742:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1743:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1744:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1745:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1746:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
1747:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1748:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1749:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1750:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1751:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1752:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1753:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1754:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1755:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1756:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1757:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1758:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1759:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1760:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1761:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
1762:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1763:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1764:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1765:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
1766:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1767:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1768:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1769:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1770:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1771:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1772:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1773:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1774:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1775:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1776:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1777:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1778:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1779:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1780:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1781:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1782:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1783:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1784:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1785:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1786:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 43


1787:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1788:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1789:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1790:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1791:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1792:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1793:Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1794:Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1795:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1796:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1797:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1798:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1799:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1800:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1801:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1802:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1803:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1804:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1805:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1806:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1807:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1808:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1809:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1810:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1811:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1812:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1813:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1814:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1815:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1816:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1817:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1818:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1819:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1820:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1821:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1822:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1823:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1824:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1825:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1826:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1827:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1828:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1829:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1830:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1831:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1832:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1833:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1834:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1835:Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1836:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 603              		.loc 1 1836 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL70:
1837:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 44


1838:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1839:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
 609              		.loc 1 1839 0
 610 0000 8842     		cmp	r0, r1
 611 0002 02D9     		bls	.L53
 612 0004 0346     		mov	r3, r0
1840:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1841:Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
1842:Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1843:Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
 613              		.loc 1 1843 0
 614 0006 0846     		mov	r0, r1
 615              	.LVL71:
1842:Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
 616              		.loc 1 1842 0
 617 0008 1946     		mov	r1, r3
 618              	.LVL72:
 619              	.L53:
1844:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1845:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1846:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
 620              		.loc 1 1846 0
 621 000a 9142     		cmp	r1, r2
 622 000c 00D9     		bls	.L54
1847:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1848:Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
 623              		.loc 1 1848 0
 624 000e 1146     		mov	r1, r2
 625              	.LVL73:
 626              	.L54:
1849:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1850:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1851:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1852:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 627              		.loc 1 1852 0
 628 0010 8842     		cmp	r0, r1
 629 0012 38BF     		it	cc
 630 0014 0846     		movcc	r0, r1
 631              	.LVL74:
 632 0016 7047     		bx	lr
 633              		.cfi_endproc
 634              	.LFE11:
 635              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 636              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 637              		.align	2
 638              		.global	CapSense_UpdateSensorBaseline
 639              		.thumb
 640              		.thumb_func
 641              		.type	CapSense_UpdateSensorBaseline, %function
 642              	CapSense_UpdateSensorBaseline:
 643              	.LFB4:
 354:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 644              		.loc 1 354 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              	.LVL75:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 45


 649 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 650              		.cfi_def_cfa_offset 32
 651              		.cfi_offset 4, -32
 652              		.cfi_offset 5, -28
 653              		.cfi_offset 6, -24
 654              		.cfi_offset 7, -20
 655              		.cfi_offset 8, -16
 656              		.cfi_offset 9, -12
 657              		.cfi_offset 10, -8
 658              		.cfi_offset 14, -4
 659 0004 0446     		mov	r4, r0
 358:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 660              		.loc 1 358 0
 661 0006 324B     		ldr	r3, .L68
 662 0008 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 663              	.LVL76:
 359:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 664              		.loc 1 359 0
 665 000a 324A     		ldr	r2, .L68+4
 666 000c 1344     		add	r3, r3, r2
 667              	.LVL77:
 668 000e 1E7B     		ldrb	r6, [r3, #12]	@ zero_extendqisi2
 669              	.LVL78:
 367:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 670              		.loc 1 367 0
 671 0010 314B     		ldr	r3, .L68+8
 672              	.LVL79:
 673 0012 33F81070 		ldrh	r7, [r3, r0, lsl #1]
 674              	.LVL80:
 371:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 675              		.loc 1 371 0
 676 0016 314D     		ldr	r5, .L68+12
 677 0018 35F810A0 		ldrh	r10, [r5, r0, lsl #1]
 678 001c DFF8D090 		ldr	r9, .L68+32
 679 0020 39F81020 		ldrh	r2, [r9, r0, lsl #1]
 680 0024 5146     		mov	r1, r10
 681 0026 3846     		mov	r0, r7
 682              	.LVL81:
 683 0028 FFF7FEFF 		bl	CapSense_MedianFilter
 684              	.LVL82:
 685 002c 8046     		mov	r8, r0
 686              	.LVL83:
 373:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 687              		.loc 1 373 0
 688 002e 29F814A0 		strh	r10, [r9, r4, lsl #1]	@ movhi
 374:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 689              		.loc 1 374 0
 690 0032 25F81470 		strh	r7, [r5, r4, lsl #1]	@ movhi
 408:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 691              		.loc 1 408 0
 692 0036 2046     		mov	r0, r4
 693 0038 FFF7FEFF 		bl	CapSense_CalculateThresholds
 694              	.LVL84:
 414:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 695              		.loc 1 414 0
 696 003c 284B     		ldr	r3, .L68+16
 697 003e 33F81430 		ldrh	r3, [r3, r4, lsl #1]
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 46


 698 0042 9845     		cmp	r8, r3
 699 0044 04D3     		bcc	.L58
 416:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 700              		.loc 1 416 0
 701 0046 C3EB0805 		rsb	r5, r3, r8
 702 004a ADB2     		uxth	r5, r5
 703              	.LVL85:
 417:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 704              		.loc 1 417 0
 705 004c 0127     		movs	r7, #1
 706 004e 03E0     		b	.L59
 707              	.LVL86:
 708              	.L58:
 421:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 709              		.loc 1 421 0
 710 0050 C8EB0305 		rsb	r5, r8, r3
 711 0054 ADB2     		uxth	r5, r5
 712              	.LVL87:
 422:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 713              		.loc 1 422 0
 714 0056 0027     		movs	r7, #0
 715              	.LVL88:
 716              	.L59:
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 717              		.loc 1 425 0
 718 0058 87B9     		cbnz	r7, .L60
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 719              		.loc 1 425 0 is_stmt 0 discriminator 1
 720 005a 142D     		cmp	r5, #20
 721 005c 0ED9     		bls	.L60
 427:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 722              		.loc 1 427 0 is_stmt 1
 723 005e 214B     		ldr	r3, .L68+20
 724 0060 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 725 0062 042B     		cmp	r3, #4
 726 0064 06D9     		bls	.L61
 429:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 727              		.loc 1 429 0
 728 0066 2046     		mov	r0, r4
 729 0068 FFF7FEFF 		bl	CapSense_BaseInit
 730              	.LVL89:
 430:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 731              		.loc 1 430 0
 732 006c 0022     		movs	r2, #0
 733 006e 1D4B     		ldr	r3, .L68+20
 734 0070 1A55     		strb	r2, [r3, r4]
 735 0072 18E0     		b	.L62
 736              	.L61:
 434:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 737              		.loc 1 434 0
 738 0074 0133     		adds	r3, r3, #1
 739 0076 1B4A     		ldr	r2, .L68+20
 740 0078 1355     		strb	r3, [r2, r4]
 741 007a 14E0     		b	.L62
 742              	.L60:
 441:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 743              		.loc 1 441 0
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 47


 744 007c B2B2     		uxth	r2, r6
 745 007e 9542     		cmp	r5, r2
 746 0080 02D9     		bls	.L63
 441:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 747              		.loc 1 441 0 is_stmt 0 discriminator 1
 748 0082 132D     		cmp	r5, #19
 749 0084 0FD8     		bhi	.L62
 443:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 750              		.loc 1 443 0 is_stmt 1
 751 0086 77B9     		cbnz	r7, .L62
 752              	.L63:
 753              	.LVL90:
 448:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 754              		.loc 1 448 0
 755 0088 174A     		ldr	r2, .L68+24
 756 008a 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 757 008c 40EA0320 		orr	r0, r0, r3, lsl #8
 758              	.LVL91:
 451:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 759              		.loc 1 451 0
 760 0090 4044     		add	r0, r0, r8
 761              	.LVL92:
 454:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 762              		.loc 1 454 0
 763 0092 C01A     		subs	r0, r0, r3
 764              	.LVL93:
 457:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 765              		.loc 1 457 0
 766 0094 C0F30F21 		ubfx	r1, r0, #8, #16
 767 0098 114B     		ldr	r3, .L68+16
 768 009a 23F81410 		strh	r1, [r3, r4, lsl #1]	@ movhi
 458:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 769              		.loc 1 458 0
 770 009e 1055     		strb	r0, [r2, r4]
 460:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 771              		.loc 1 460 0
 772 00a0 0022     		movs	r2, #0
 773 00a2 104B     		ldr	r3, .L68+20
 774 00a4 1A55     		strb	r2, [r3, r4]
 775              	.LVL94:
 776              	.L62:
 467:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 777              		.loc 1 467 0
 778 00a6 B6B2     		uxth	r6, r6
 779              	.LVL95:
 780 00a8 B542     		cmp	r5, r6
 781 00aa 0BD9     		bls	.L64
 467:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 782              		.loc 1 467 0 is_stmt 0 discriminator 1
 783 00ac 57B1     		cbz	r7, .L64
 471:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 784              		.loc 1 471 0 is_stmt 1
 785 00ae FF2D     		cmp	r5, #255
 786 00b0 04D9     		bls	.L65
 473:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 787              		.loc 1 473 0
 788 00b2 FF22     		movs	r2, #255
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 48


 789 00b4 0D4B     		ldr	r3, .L68+28
 790 00b6 1A55     		strb	r2, [r3, r4]
 791 00b8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 792              	.LVL96:
 793              	.L65:
 477:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 794              		.loc 1 477 0
 795 00bc 0B4B     		ldr	r3, .L68+28
 796 00be 1D55     		strb	r5, [r3, r4]
 797 00c0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 798              	.LVL97:
 799              	.L64:
 486:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 800              		.loc 1 486 0
 801 00c4 0022     		movs	r2, #0
 802 00c6 094B     		ldr	r3, .L68+28
 803 00c8 1A55     		strb	r2, [r3, r4]
 804 00ca BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 805              	.LVL98:
 806              	.L69:
 807 00ce 00BF     		.align	2
 808              	.L68:
 809 00d0 00000000 		.word	CapSense_widgetNumber
 810 00d4 00000000 		.word	.LANCHOR0
 811 00d8 00000000 		.word	CapSense_sensorRaw
 812 00dc 00000000 		.word	CapSense_rawFilterData1
 813 00e0 00000000 		.word	CapSense_sensorBaseline
 814 00e4 00000000 		.word	CapSense_lowBaselineResetCnt
 815 00e8 00000000 		.word	CapSense_sensorBaselineLow
 816 00ec 00000000 		.word	CapSense_sensorSignal
 817 00f0 00000000 		.word	CapSense_rawFilterData2
 818              		.cfi_endproc
 819              	.LFE4:
 820              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 821              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 822              		.align	2
 823              		.global	CapSense_UpdateEnabledBaselines
 824              		.thumb
 825              		.thumb_func
 826              		.type	CapSense_UpdateEnabledBaselines, %function
 827              	CapSense_UpdateEnabledBaselines:
 828              	.LFB5:
 527:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 829              		.loc 1 527 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833 0000 10B5     		push	{r4, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
 837              	.LVL99:
 532:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 838              		.loc 1 532 0
 839 0002 0024     		movs	r4, #0
 840 0004 0DE0     		b	.L71
 841              	.LVL100:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 49


 842              	.L73:
 534:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 843              		.loc 1 534 0
 844 0006 E208     		lsrs	r2, r4, #3
 535:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 845              		.loc 1 535 0
 846 0008 04F00701 		and	r1, r4, #7
 847 000c 0123     		movs	r3, #1
 848 000e 8B40     		lsls	r3, r3, r1
 849              	.LVL101:
 536:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 850              		.loc 1 536 0
 851 0010 0549     		ldr	r1, .L75
 852 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 853 0014 1342     		tst	r3, r2
 854 0016 02D0     		beq	.L72
 538:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 855              		.loc 1 538 0
 856 0018 2046     		mov	r0, r4
 857 001a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 858              	.LVL102:
 859              	.L72:
 532:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 860              		.loc 1 532 0 discriminator 2
 861 001e 0134     		adds	r4, r4, #1
 862              	.LVL103:
 863 0020 E4B2     		uxtb	r4, r4
 864              	.LVL104:
 865              	.L71:
 532:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 866              		.loc 1 532 0 is_stmt 0 discriminator 1
 867 0022 032C     		cmp	r4, #3
 868 0024 EFD9     		bls	.L73
 541:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 869              		.loc 1 541 0 is_stmt 1
 870 0026 10BD     		pop	{r4, pc}
 871              	.LVL105:
 872              	.L76:
 873              		.align	2
 874              	.L75:
 875 0028 00000000 		.word	CapSense_sensorEnableMask
 876              		.cfi_endproc
 877              	.LFE5:
 878              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 879              		.global	CapSense_numberOfSensors
 880              		.global	CapSense_rawDataIndex
 881              		.global	CapSense_debounceCounter
 882              		.global	CapSense_debounce
 883              		.global	CapSense_hysteresis
 884              		.global	CapSense_noiseThreshold
 885              		.global	CapSense_fingerThreshold
 886              		.comm	CapSense_lowBaselineResetCnt,4,4
 887              		.comm	CapSense_sensorOnMask,1,4
 888              		.comm	CapSense_sensorSignal,4,4
 889              		.comm	CapSense_sensorBaselineLow,4,4
 890              		.comm	CapSense_sensorBaseline,8,4
 891              		.comm	CapSense_rawFilterData2,8,4
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 50


 892              		.comm	CapSense_rawFilterData1,8,4
 893              		.section	.rodata
 894              		.align	2
 895              		.set	.LANCHOR2,. + 0
 896              		.type	CapSense_rawDataIndex, %object
 897              		.size	CapSense_rawDataIndex, 4
 898              	CapSense_rawDataIndex:
 899 0000 00       		.byte	0
 900 0001 01       		.byte	1
 901 0002 02       		.byte	2
 902 0003 03       		.byte	3
 903              		.type	CapSense_numberOfSensors, %object
 904              		.size	CapSense_numberOfSensors, 4
 905              	CapSense_numberOfSensors:
 906 0004 01       		.byte	1
 907 0005 01       		.byte	1
 908 0006 01       		.byte	1
 909 0007 01       		.byte	1
 910              		.data
 911              		.align	2
 912              		.set	.LANCHOR0,. + 0
 913              		.type	CapSense_debounce, %object
 914              		.size	CapSense_debounce, 4
 915              	CapSense_debounce:
 916 0000 01       		.byte	1
 917 0001 01       		.byte	1
 918 0002 01       		.byte	1
 919 0003 01       		.byte	1
 920              		.type	CapSense_fingerThreshold, %object
 921              		.size	CapSense_fingerThreshold, 4
 922              	CapSense_fingerThreshold:
 923 0004 64       		.byte	100
 924 0005 64       		.byte	100
 925 0006 64       		.byte	100
 926 0007 64       		.byte	100
 927              		.type	CapSense_hysteresis, %object
 928              		.size	CapSense_hysteresis, 4
 929              	CapSense_hysteresis:
 930 0008 0A       		.byte	10
 931 0009 0A       		.byte	10
 932 000a 0A       		.byte	10
 933 000b 0A       		.byte	10
 934              		.type	CapSense_noiseThreshold, %object
 935              		.size	CapSense_noiseThreshold, 4
 936              	CapSense_noiseThreshold:
 937 000c 14       		.byte	20
 938 000d 14       		.byte	20
 939 000e 14       		.byte	20
 940 000f 14       		.byte	20
 941              		.bss
 942              		.align	2
 943              		.set	.LANCHOR1,. + 0
 944              		.type	CapSense_debounceCounter, %object
 945              		.size	CapSense_debounceCounter, 5
 946              	CapSense_debounceCounter:
 947 0000 00000000 		.space	5
 947      00
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 51


 948              		.text
 949              	.Letext0:
 950              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 951              		.file 3 "Generated_Source\\PSoC5\\CapSense.h"
 952              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSHL.h"
 953              		.section	.debug_info,"",%progbits
 954              	.Ldebug_info0:
 955 0000 D6060000 		.4byte	0x6d6
 956 0004 0400     		.2byte	0x4
 957 0006 00000000 		.4byte	.Ldebug_abbrev0
 958 000a 04       		.byte	0x4
 959 000b 01       		.uleb128 0x1
 960 000c 29040000 		.4byte	.LASF65
 961 0010 0C       		.byte	0xc
 962 0011 23050000 		.4byte	.LASF66
 963 0015 5C030000 		.4byte	.LASF67
 964 0019 00000000 		.4byte	.Ldebug_ranges0+0
 965 001d 00000000 		.4byte	0
 966 0021 00000000 		.4byte	.Ldebug_line0
 967 0025 02       		.uleb128 0x2
 968 0026 01       		.byte	0x1
 969 0027 06       		.byte	0x6
 970 0028 E6000000 		.4byte	.LASF0
 971 002c 02       		.uleb128 0x2
 972 002d 01       		.byte	0x1
 973 002e 08       		.byte	0x8
 974 002f D4030000 		.4byte	.LASF1
 975 0033 02       		.uleb128 0x2
 976 0034 02       		.byte	0x2
 977 0035 05       		.byte	0x5
 978 0036 11040000 		.4byte	.LASF2
 979 003a 02       		.uleb128 0x2
 980 003b 02       		.byte	0x2
 981 003c 07       		.byte	0x7
 982 003d EA010000 		.4byte	.LASF3
 983 0041 02       		.uleb128 0x2
 984 0042 04       		.byte	0x4
 985 0043 05       		.byte	0x5
 986 0044 28010000 		.4byte	.LASF4
 987 0048 02       		.uleb128 0x2
 988 0049 04       		.byte	0x4
 989 004a 07       		.byte	0x7
 990 004b A7010000 		.4byte	.LASF5
 991 004f 02       		.uleb128 0x2
 992 0050 08       		.byte	0x8
 993 0051 05       		.byte	0x5
 994 0052 D8000000 		.4byte	.LASF6
 995 0056 02       		.uleb128 0x2
 996 0057 08       		.byte	0x8
 997 0058 07       		.byte	0x7
 998 0059 67000000 		.4byte	.LASF7
 999 005d 03       		.uleb128 0x3
 1000 005e 04       		.byte	0x4
 1001 005f 05       		.byte	0x5
 1002 0060 696E7400 		.ascii	"int\000"
 1003 0064 02       		.uleb128 0x2
 1004 0065 04       		.byte	0x4
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 52


 1005 0066 07       		.byte	0x7
 1006 0067 9A010000 		.4byte	.LASF8
 1007 006b 04       		.uleb128 0x4
 1008 006c 51010000 		.4byte	.LASF9
 1009 0070 02       		.byte	0x2
 1010 0071 9201     		.2byte	0x192
 1011 0073 2C000000 		.4byte	0x2c
 1012 0077 04       		.uleb128 0x4
 1013 0078 00000000 		.4byte	.LASF10
 1014 007c 02       		.byte	0x2
 1015 007d 9301     		.2byte	0x193
 1016 007f 3A000000 		.4byte	0x3a
 1017 0083 04       		.uleb128 0x4
 1018 0084 74010000 		.4byte	.LASF11
 1019 0088 02       		.byte	0x2
 1020 0089 9401     		.2byte	0x194
 1021 008b 48000000 		.4byte	0x48
 1022 008f 02       		.uleb128 0x2
 1023 0090 04       		.byte	0x4
 1024 0091 04       		.byte	0x4
 1025 0092 39030000 		.4byte	.LASF12
 1026 0096 02       		.uleb128 0x2
 1027 0097 08       		.byte	0x8
 1028 0098 04       		.byte	0x4
 1029 0099 57010000 		.4byte	.LASF13
 1030 009d 02       		.uleb128 0x2
 1031 009e 01       		.byte	0x1
 1032 009f 08       		.byte	0x8
 1033 00a0 10050000 		.4byte	.LASF14
 1034 00a4 02       		.uleb128 0x2
 1035 00a5 08       		.byte	0x8
 1036 00a6 04       		.byte	0x4
 1037 00a7 86020000 		.4byte	.LASF15
 1038 00ab 02       		.uleb128 0x2
 1039 00ac 04       		.byte	0x4
 1040 00ad 07       		.byte	0x7
 1041 00ae 67020000 		.4byte	.LASF16
 1042 00b2 05       		.uleb128 0x5
 1043 00b3 B7040000 		.4byte	.LASF17
 1044 00b7 01       		.byte	0x1
 1045 00b8 7F       		.byte	0x7f
 1046 00b9 00000000 		.4byte	.LFB0
 1047 00bd 58000000 		.4byte	.LFE0-.LFB0
 1048 00c1 01       		.uleb128 0x1
 1049 00c2 9C       		.byte	0x9c
 1050 00c3 E4000000 		.4byte	0xe4
 1051 00c7 06       		.uleb128 0x6
 1052 00c8 FD010000 		.4byte	.LASF19
 1053 00cc 01       		.byte	0x1
 1054 00cd 7F       		.byte	0x7f
 1055 00ce 6B000000 		.4byte	0x6b
 1056 00d2 01       		.uleb128 0x1
 1057 00d3 50       		.byte	0x50
 1058 00d4 07       		.uleb128 0x7
 1059 00d5 1B040000 		.4byte	.LASF21
 1060 00d9 01       		.byte	0x1
 1061 00da 83       		.byte	0x83
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 53


 1062 00db 6B000000 		.4byte	0x6b
 1063 00df 00000000 		.4byte	.LLST0
 1064 00e3 00       		.byte	0
 1065 00e4 05       		.uleb128 0x5
 1066 00e5 92020000 		.4byte	.LASF18
 1067 00e9 01       		.byte	0x1
 1068 00ea C8       		.byte	0xc8
 1069 00eb 00000000 		.4byte	.LFB1
 1070 00ef 18000000 		.4byte	.LFE1-.LFB1
 1071 00f3 01       		.uleb128 0x1
 1072 00f4 9C       		.byte	0x9c
 1073 00f5 36010000 		.4byte	0x136
 1074 00f9 08       		.uleb128 0x8
 1075 00fa FD010000 		.4byte	.LASF19
 1076 00fe 01       		.byte	0x1
 1077 00ff C8       		.byte	0xc8
 1078 0100 6B000000 		.4byte	0x6b
 1079 0104 13000000 		.4byte	.LLST1
 1080 0108 09       		.uleb128 0x9
 1081 0109 08000000 		.4byte	.LVL4
 1082 010d AD060000 		.4byte	0x6ad
 1083 0111 1C010000 		.4byte	0x11c
 1084 0115 0A       		.uleb128 0xa
 1085 0116 01       		.uleb128 0x1
 1086 0117 50       		.byte	0x50
 1087 0118 02       		.uleb128 0x2
 1088 0119 74       		.byte	0x74
 1089 011a 00       		.sleb128 0
 1090 011b 00       		.byte	0
 1091 011c 0B       		.uleb128 0xb
 1092 011d 0C000000 		.4byte	.LVL5
 1093 0121 B8060000 		.4byte	0x6b8
 1094 0125 0C       		.uleb128 0xc
 1095 0126 16000000 		.4byte	.LVL6
 1096 012a B2000000 		.4byte	0xb2
 1097 012e 0A       		.uleb128 0xa
 1098 012f 01       		.uleb128 0x1
 1099 0130 50       		.byte	0x50
 1100 0131 02       		.uleb128 0x2
 1101 0132 74       		.byte	0x74
 1102 0133 00       		.sleb128 0
 1103 0134 00       		.byte	0
 1104 0135 00       		.byte	0
 1105 0136 05       		.uleb128 0x5
 1106 0137 E2030000 		.4byte	.LASF20
 1107 013b 01       		.byte	0x1
 1108 013c FC       		.byte	0xfc
 1109 013d 00000000 		.4byte	.LFB2
 1110 0141 16000000 		.4byte	.LFE2-.LFB2
 1111 0145 01       		.uleb128 0x1
 1112 0146 9C       		.byte	0x9c
 1113 0147 69010000 		.4byte	0x169
 1114 014b 0D       		.uleb128 0xd
 1115 014c 6900     		.ascii	"i\000"
 1116 014e 01       		.byte	0x1
 1117 014f FF       		.byte	0xff
 1118 0150 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 54


 1119 0154 34000000 		.4byte	.LLST2
 1120 0158 0C       		.uleb128 0xc
 1121 0159 0C000000 		.4byte	.LVL9
 1122 015d E4000000 		.4byte	0xe4
 1123 0161 0A       		.uleb128 0xa
 1124 0162 01       		.uleb128 0x1
 1125 0163 50       		.byte	0x50
 1126 0164 02       		.uleb128 0x2
 1127 0165 74       		.byte	0x74
 1128 0166 00       		.sleb128 0
 1129 0167 00       		.byte	0
 1130 0168 00       		.byte	0
 1131 0169 0E       		.uleb128 0xe
 1132 016a 94000000 		.4byte	.LASF22
 1133 016e 01       		.byte	0x1
 1134 016f 1D01     		.2byte	0x11d
 1135 0171 00000000 		.4byte	.LFB3
 1136 0175 44000000 		.4byte	.LFE3-.LFB3
 1137 0179 01       		.uleb128 0x1
 1138 017a 9C       		.byte	0x9c
 1139 017b CE010000 		.4byte	0x1ce
 1140 017f 0F       		.uleb128 0xf
 1141 0180 6900     		.ascii	"i\000"
 1142 0182 01       		.byte	0x1
 1143 0183 2001     		.2byte	0x120
 1144 0185 6B000000 		.4byte	0x6b
 1145 0189 5E000000 		.4byte	.LLST3
 1146 018d 10       		.uleb128 0x10
 1147 018e 706F7300 		.ascii	"pos\000"
 1148 0192 01       		.byte	0x1
 1149 0193 2101     		.2byte	0x121
 1150 0195 6B000000 		.4byte	0x6b
 1151 0199 01       		.uleb128 0x1
 1152 019a 52       		.byte	0x52
 1153 019b 11       		.uleb128 0x11
 1154 019c D1020000 		.4byte	.LASF23
 1155 01a0 01       		.byte	0x1
 1156 01a1 2201     		.2byte	0x122
 1157 01a3 6B000000 		.4byte	0x6b
 1158 01a7 7C000000 		.4byte	.LLST4
 1159 01ab 0B       		.uleb128 0xb
 1160 01ac 06000000 		.4byte	.LVL12
 1161 01b0 C3060000 		.4byte	0x6c3
 1162 01b4 0B       		.uleb128 0xb
 1163 01b5 0A000000 		.4byte	.LVL13
 1164 01b9 B8060000 		.4byte	0x6b8
 1165 01bd 0C       		.uleb128 0xc
 1166 01be 32000000 		.4byte	.LVL17
 1167 01c2 B2000000 		.4byte	0xb2
 1168 01c6 0A       		.uleb128 0xa
 1169 01c7 01       		.uleb128 0x1
 1170 01c8 50       		.byte	0x50
 1171 01c9 02       		.uleb128 0x2
 1172 01ca 74       		.byte	0x74
 1173 01cb 00       		.sleb128 0
 1174 01cc 00       		.byte	0
 1175 01cd 00       		.byte	0
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 55


 1176 01ce 12       		.uleb128 0x12
 1177 01cf B4020000 		.4byte	.LASF29
 1178 01d3 01       		.byte	0x1
 1179 01d4 4702     		.2byte	0x247
 1180 01d6 6B000000 		.4byte	0x6b
 1181 01da 00000000 		.4byte	.LFB6
 1182 01de 88000000 		.4byte	.LFE6-.LFB6
 1183 01e2 01       		.uleb128 0x1
 1184 01e3 9C       		.byte	0x9c
 1185 01e4 5F020000 		.4byte	0x25f
 1186 01e8 13       		.uleb128 0x13
 1187 01e9 FD010000 		.4byte	.LASF19
 1188 01ed 01       		.byte	0x1
 1189 01ee 4702     		.2byte	0x247
 1190 01f0 6B000000 		.4byte	0x6b
 1191 01f4 B1000000 		.4byte	.LLST5
 1192 01f8 14       		.uleb128 0x14
 1193 01f9 15050000 		.4byte	.LASF25
 1194 01fd 01       		.byte	0x1
 1195 01fe 4A02     		.2byte	0x24a
 1196 0200 6B000000 		.4byte	0x6b
 1197 0204 0F       		.uleb128 0xf
 1198 0205 706F7300 		.ascii	"pos\000"
 1199 0209 01       		.byte	0x1
 1200 020a 4C02     		.2byte	0x24c
 1201 020c 6B000000 		.4byte	0x6b
 1202 0210 EB000000 		.4byte	.LLST6
 1203 0214 15       		.uleb128 0x15
 1204 0215 22040000 		.4byte	.LASF24
 1205 0219 01       		.byte	0x1
 1206 021a 4D02     		.2byte	0x24d
 1207 021c 6B000000 		.4byte	0x6b
 1208 0220 01       		.uleb128 0x1
 1209 0221 53       		.byte	0x53
 1210 0222 14       		.uleb128 0x14
 1211 0223 1B040000 		.4byte	.LASF21
 1212 0227 01       		.byte	0x1
 1213 0228 4F02     		.2byte	0x24f
 1214 022a 6B000000 		.4byte	0x6b
 1215 022e 11       		.uleb128 0x11
 1216 022f 41000000 		.4byte	.LASF26
 1217 0233 01       		.byte	0x1
 1218 0234 5002     		.2byte	0x250
 1219 0236 6B000000 		.4byte	0x6b
 1220 023a FE000000 		.4byte	.LLST7
 1221 023e 11       		.uleb128 0x11
 1222 023f 7B010000 		.4byte	.LASF27
 1223 0243 01       		.byte	0x1
 1224 0244 5102     		.2byte	0x251
 1225 0246 6B000000 		.4byte	0x6b
 1226 024a 11010000 		.4byte	.LLST8
 1227 024e 11       		.uleb128 0x11
 1228 024f 5E020000 		.4byte	.LASF28
 1229 0253 01       		.byte	0x1
 1230 0254 5202     		.2byte	0x252
 1231 0256 6B000000 		.4byte	0x6b
 1232 025a 53010000 		.4byte	.LLST9
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 56


 1233 025e 00       		.byte	0
 1234 025f 12       		.uleb128 0x12
 1235 0260 3F030000 		.4byte	.LASF30
 1236 0264 01       		.byte	0x1
 1237 0265 8F02     		.2byte	0x28f
 1238 0267 6B000000 		.4byte	0x6b
 1239 026b 00000000 		.4byte	.LFB7
 1240 026f 2C000000 		.4byte	.LFE7-.LFB7
 1241 0273 01       		.uleb128 0x1
 1242 0274 9C       		.byte	0x9c
 1243 0275 CA020000 		.4byte	0x2ca
 1244 0279 13       		.uleb128 0x13
 1245 027a 1B040000 		.4byte	.LASF21
 1246 027e 01       		.byte	0x1
 1247 027f 8F02     		.2byte	0x28f
 1248 0281 6B000000 		.4byte	0x6b
 1249 0285 66010000 		.4byte	.LLST10
 1250 0289 11       		.uleb128 0x11
 1251 028a 09010000 		.4byte	.LASF31
 1252 028e 01       		.byte	0x1
 1253 028f 9202     		.2byte	0x292
 1254 0291 6B000000 		.4byte	0x6b
 1255 0295 87010000 		.4byte	.LLST11
 1256 0299 11       		.uleb128 0x11
 1257 029a 12010000 		.4byte	.LASF32
 1258 029e 01       		.byte	0x1
 1259 029f 9302     		.2byte	0x293
 1260 02a1 6B000000 		.4byte	0x6b
 1261 02a5 A5010000 		.4byte	.LLST12
 1262 02a9 11       		.uleb128 0x11
 1263 02aa 22010000 		.4byte	.LASF33
 1264 02ae 01       		.byte	0x1
 1265 02af 9402     		.2byte	0x294
 1266 02b1 6B000000 		.4byte	0x6b
 1267 02b5 B8010000 		.4byte	.LLST13
 1268 02b9 0C       		.uleb128 0xc
 1269 02ba 16000000 		.4byte	.LVL39
 1270 02be CE010000 		.4byte	0x1ce
 1271 02c2 0A       		.uleb128 0xa
 1272 02c3 01       		.uleb128 0x1
 1273 02c4 50       		.byte	0x50
 1274 02c5 02       		.uleb128 0x2
 1275 02c6 74       		.byte	0x74
 1276 02c7 00       		.sleb128 0
 1277 02c8 00       		.byte	0
 1278 02c9 00       		.byte	0
 1279 02ca 12       		.uleb128 0x12
 1280 02cb 31010000 		.4byte	.LASF34
 1281 02cf 01       		.byte	0x1
 1282 02d0 BB02     		.2byte	0x2bb
 1283 02d2 6B000000 		.4byte	0x6b
 1284 02d6 00000000 		.4byte	.LFB8
 1285 02da 1E000000 		.4byte	.LFE8-.LFB8
 1286 02de 01       		.uleb128 0x1
 1287 02df 9C       		.byte	0x9c
 1288 02e0 13030000 		.4byte	0x313
 1289 02e4 0F       		.uleb128 0xf
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 57


 1290 02e5 6900     		.ascii	"i\000"
 1291 02e7 01       		.byte	0x1
 1292 02e8 BE02     		.2byte	0x2be
 1293 02ea 6B000000 		.4byte	0x6b
 1294 02ee D7010000 		.4byte	.LLST14
 1295 02f2 11       		.uleb128 0x11
 1296 02f3 22010000 		.4byte	.LASF33
 1297 02f7 01       		.byte	0x1
 1298 02f8 BF02     		.2byte	0x2bf
 1299 02fa 6B000000 		.4byte	0x6b
 1300 02fe 01020000 		.4byte	.LLST15
 1301 0302 0C       		.uleb128 0xc
 1302 0303 0E000000 		.4byte	.LVL46
 1303 0307 5F020000 		.4byte	0x25f
 1304 030b 0A       		.uleb128 0xa
 1305 030c 01       		.uleb128 0x1
 1306 030d 50       		.byte	0x50
 1307 030e 02       		.uleb128 0x2
 1308 030f 74       		.byte	0x74
 1309 0310 00       		.sleb128 0
 1310 0311 00       		.byte	0
 1311 0312 00       		.byte	0
 1312 0313 0E       		.uleb128 0xe
 1313 0314 70020000 		.4byte	.LASF35
 1314 0318 01       		.byte	0x1
 1315 0319 E902     		.2byte	0x2e9
 1316 031b 00000000 		.4byte	.LFB9
 1317 031f 38000000 		.4byte	.LFE9-.LFB9
 1318 0323 01       		.uleb128 0x1
 1319 0324 9C       		.byte	0x9c
 1320 0325 78030000 		.4byte	0x378
 1321 0329 13       		.uleb128 0x13
 1322 032a 1B040000 		.4byte	.LASF21
 1323 032e 01       		.byte	0x1
 1324 032f E902     		.2byte	0x2e9
 1325 0331 6B000000 		.4byte	0x6b
 1326 0335 20020000 		.4byte	.LLST16
 1327 0339 10       		.uleb128 0x10
 1328 033a 706F7300 		.ascii	"pos\000"
 1329 033e 01       		.byte	0x1
 1330 033f EC02     		.2byte	0x2ec
 1331 0341 6B000000 		.4byte	0x6b
 1332 0345 01       		.uleb128 0x1
 1333 0346 50       		.byte	0x50
 1334 0347 11       		.uleb128 0x11
 1335 0348 D1020000 		.4byte	.LASF23
 1336 034c 01       		.byte	0x1
 1337 034d ED02     		.2byte	0x2ed
 1338 034f 6B000000 		.4byte	0x6b
 1339 0353 41020000 		.4byte	.LLST17
 1340 0357 11       		.uleb128 0x11
 1341 0358 09010000 		.4byte	.LASF31
 1342 035c 01       		.byte	0x1
 1343 035d EE02     		.2byte	0x2ee
 1344 035f 6B000000 		.4byte	0x6b
 1345 0363 76020000 		.4byte	.LLST18
 1346 0367 11       		.uleb128 0x11
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 58


 1347 0368 12010000 		.4byte	.LASF32
 1348 036c 01       		.byte	0x1
 1349 036d EF02     		.2byte	0x2ef
 1350 036f 6B000000 		.4byte	0x6b
 1351 0373 94020000 		.4byte	.LLST19
 1352 0377 00       		.byte	0
 1353 0378 0E       		.uleb128 0xe
 1354 0379 F2000000 		.4byte	.LASF36
 1355 037d 01       		.byte	0x1
 1356 037e 1B03     		.2byte	0x31b
 1357 0380 00000000 		.4byte	.LFB10
 1358 0384 38000000 		.4byte	.LFE10-.LFB10
 1359 0388 01       		.uleb128 0x1
 1360 0389 9C       		.byte	0x9c
 1361 038a DD030000 		.4byte	0x3dd
 1362 038e 13       		.uleb128 0x13
 1363 038f 1B040000 		.4byte	.LASF21
 1364 0393 01       		.byte	0x1
 1365 0394 1B03     		.2byte	0x31b
 1366 0396 6B000000 		.4byte	0x6b
 1367 039a A7020000 		.4byte	.LLST20
 1368 039e 10       		.uleb128 0x10
 1369 039f 706F7300 		.ascii	"pos\000"
 1370 03a3 01       		.byte	0x1
 1371 03a4 1E03     		.2byte	0x31e
 1372 03a6 6B000000 		.4byte	0x6b
 1373 03aa 01       		.uleb128 0x1
 1374 03ab 50       		.byte	0x50
 1375 03ac 11       		.uleb128 0x11
 1376 03ad D1020000 		.4byte	.LASF23
 1377 03b1 01       		.byte	0x1
 1378 03b2 1F03     		.2byte	0x31f
 1379 03b4 6B000000 		.4byte	0x6b
 1380 03b8 C8020000 		.4byte	.LLST21
 1381 03bc 11       		.uleb128 0x11
 1382 03bd 09010000 		.4byte	.LASF31
 1383 03c1 01       		.byte	0x1
 1384 03c2 2003     		.2byte	0x320
 1385 03c4 6B000000 		.4byte	0x6b
 1386 03c8 FD020000 		.4byte	.LLST22
 1387 03cc 11       		.uleb128 0x11
 1388 03cd 12010000 		.4byte	.LASF32
 1389 03d1 01       		.byte	0x1
 1390 03d2 2103     		.2byte	0x321
 1391 03d4 6B000000 		.4byte	0x6b
 1392 03d8 1B030000 		.4byte	.LLST23
 1393 03dc 00       		.byte	0
 1394 03dd 12       		.uleb128 0x12
 1395 03de 51000000 		.4byte	.LASF37
 1396 03e2 01       		.byte	0x1
 1397 03e3 2A07     		.2byte	0x72a
 1398 03e5 77000000 		.4byte	0x77
 1399 03e9 00000000 		.4byte	.LFB11
 1400 03ed 18000000 		.4byte	.LFE11-.LFB11
 1401 03f1 01       		.uleb128 0x1
 1402 03f2 9C       		.byte	0x9c
 1403 03f3 2F040000 		.4byte	0x42f
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 59


 1404 03f7 16       		.uleb128 0x16
 1405 03f8 783100   		.ascii	"x1\000"
 1406 03fb 01       		.byte	0x1
 1407 03fc 2A07     		.2byte	0x72a
 1408 03fe 77000000 		.4byte	0x77
 1409 0402 2E030000 		.4byte	.LLST24
 1410 0406 16       		.uleb128 0x16
 1411 0407 783200   		.ascii	"x2\000"
 1412 040a 01       		.byte	0x1
 1413 040b 2A07     		.2byte	0x72a
 1414 040d 77000000 		.4byte	0x77
 1415 0411 5A030000 		.4byte	.LLST25
 1416 0415 17       		.uleb128 0x17
 1417 0416 783300   		.ascii	"x3\000"
 1418 0419 01       		.byte	0x1
 1419 041a 2A07     		.2byte	0x72a
 1420 041c 77000000 		.4byte	0x77
 1421 0420 01       		.uleb128 0x1
 1422 0421 52       		.byte	0x52
 1423 0422 18       		.uleb128 0x18
 1424 0423 746D7000 		.ascii	"tmp\000"
 1425 0427 01       		.byte	0x1
 1426 0428 2D07     		.2byte	0x72d
 1427 042a 77000000 		.4byte	0x77
 1428 042e 00       		.byte	0
 1429 042f 0E       		.uleb128 0xe
 1430 0430 1E020000 		.4byte	.LASF38
 1431 0434 01       		.byte	0x1
 1432 0435 6001     		.2byte	0x160
 1433 0437 00000000 		.4byte	.LFB4
 1434 043b F4000000 		.4byte	.LFE4-.LFB4
 1435 043f 01       		.uleb128 0x1
 1436 0440 9C       		.byte	0x9c
 1437 0441 E4040000 		.4byte	0x4e4
 1438 0445 13       		.uleb128 0x13
 1439 0446 FD010000 		.4byte	.LASF19
 1440 044a 01       		.byte	0x1
 1441 044b 6001     		.2byte	0x160
 1442 044d 6B000000 		.4byte	0x6b
 1443 0451 78030000 		.4byte	.LLST26
 1444 0455 11       		.uleb128 0x11
 1445 0456 3C020000 		.4byte	.LASF39
 1446 045a 01       		.byte	0x1
 1447 045b 6301     		.2byte	0x163
 1448 045d 83000000 		.4byte	0x83
 1449 0461 99030000 		.4byte	.LLST27
 1450 0465 11       		.uleb128 0x11
 1451 0466 92050000 		.4byte	.LASF40
 1452 046a 01       		.byte	0x1
 1453 046b 6401     		.2byte	0x164
 1454 046d 77000000 		.4byte	0x77
 1455 0471 BB030000 		.4byte	.LLST28
 1456 0475 11       		.uleb128 0x11
 1457 0476 07000000 		.4byte	.LASF41
 1458 047a 01       		.byte	0x1
 1459 047b 6501     		.2byte	0x165
 1460 047d 77000000 		.4byte	0x77
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 60


 1461 0481 EF030000 		.4byte	.LLST29
 1462 0485 11       		.uleb128 0x11
 1463 0486 1B040000 		.4byte	.LASF21
 1464 048a 01       		.byte	0x1
 1465 048b 6601     		.2byte	0x166
 1466 048d 6B000000 		.4byte	0x6b
 1467 0491 0D040000 		.4byte	.LLST30
 1468 0495 11       		.uleb128 0x11
 1469 0496 02040000 		.4byte	.LASF42
 1470 049a 01       		.byte	0x1
 1471 049b 6701     		.2byte	0x167
 1472 049d 6B000000 		.4byte	0x6b
 1473 04a1 56040000 		.4byte	.LLST31
 1474 04a5 09       		.uleb128 0x9
 1475 04a6 2C000000 		.4byte	.LVL82
 1476 04aa DD030000 		.4byte	0x3dd
 1477 04ae BF040000 		.4byte	0x4bf
 1478 04b2 0A       		.uleb128 0xa
 1479 04b3 01       		.uleb128 0x1
 1480 04b4 50       		.byte	0x50
 1481 04b5 02       		.uleb128 0x2
 1482 04b6 77       		.byte	0x77
 1483 04b7 00       		.sleb128 0
 1484 04b8 0A       		.uleb128 0xa
 1485 04b9 01       		.uleb128 0x1
 1486 04ba 51       		.byte	0x51
 1487 04bb 02       		.uleb128 0x2
 1488 04bc 7A       		.byte	0x7a
 1489 04bd 00       		.sleb128 0
 1490 04be 00       		.byte	0
 1491 04bf 09       		.uleb128 0x9
 1492 04c0 3C000000 		.4byte	.LVL84
 1493 04c4 CE060000 		.4byte	0x6ce
 1494 04c8 D3040000 		.4byte	0x4d3
 1495 04cc 0A       		.uleb128 0xa
 1496 04cd 01       		.uleb128 0x1
 1497 04ce 50       		.byte	0x50
 1498 04cf 02       		.uleb128 0x2
 1499 04d0 74       		.byte	0x74
 1500 04d1 00       		.sleb128 0
 1501 04d2 00       		.byte	0
 1502 04d3 0C       		.uleb128 0xc
 1503 04d4 6C000000 		.4byte	.LVL89
 1504 04d8 B2000000 		.4byte	0xb2
 1505 04dc 0A       		.uleb128 0xa
 1506 04dd 01       		.uleb128 0x1
 1507 04de 50       		.byte	0x50
 1508 04df 02       		.uleb128 0x2
 1509 04e0 74       		.byte	0x74
 1510 04e1 00       		.sleb128 0
 1511 04e2 00       		.byte	0
 1512 04e3 00       		.byte	0
 1513 04e4 0E       		.uleb128 0xe
 1514 04e5 B8000000 		.4byte	.LASF43
 1515 04e9 01       		.byte	0x1
 1516 04ea 0D02     		.2byte	0x20d
 1517 04ec 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 61


 1518 04f0 2C000000 		.4byte	.LFE5-.LFB5
 1519 04f4 01       		.uleb128 0x1
 1520 04f5 9C       		.byte	0x9c
 1521 04f6 37050000 		.4byte	0x537
 1522 04fa 0F       		.uleb128 0xf
 1523 04fb 6900     		.ascii	"i\000"
 1524 04fd 01       		.byte	0x1
 1525 04fe 1002     		.2byte	0x210
 1526 0500 6B000000 		.4byte	0x6b
 1527 0504 69040000 		.4byte	.LLST32
 1528 0508 10       		.uleb128 0x10
 1529 0509 706F7300 		.ascii	"pos\000"
 1530 050d 01       		.byte	0x1
 1531 050e 1102     		.2byte	0x211
 1532 0510 6B000000 		.4byte	0x6b
 1533 0514 01       		.uleb128 0x1
 1534 0515 52       		.byte	0x52
 1535 0516 11       		.uleb128 0x11
 1536 0517 D1020000 		.4byte	.LASF23
 1537 051b 01       		.byte	0x1
 1538 051c 1202     		.2byte	0x212
 1539 051e 6B000000 		.4byte	0x6b
 1540 0522 93040000 		.4byte	.LLST33
 1541 0526 0C       		.uleb128 0xc
 1542 0527 1E000000 		.4byte	.LVL102
 1543 052b 2F040000 		.4byte	0x42f
 1544 052f 0A       		.uleb128 0xa
 1545 0530 01       		.uleb128 0x1
 1546 0531 50       		.byte	0x50
 1547 0532 02       		.uleb128 0x2
 1548 0533 74       		.byte	0x74
 1549 0534 00       		.sleb128 0
 1550 0535 00       		.byte	0
 1551 0536 00       		.byte	0
 1552 0537 19       		.uleb128 0x19
 1553 0538 77000000 		.4byte	0x77
 1554 053c 47050000 		.4byte	0x547
 1555 0540 1A       		.uleb128 0x1a
 1556 0541 AB000000 		.4byte	0xab
 1557 0545 03       		.byte	0x3
 1558 0546 00       		.byte	0
 1559 0547 1B       		.uleb128 0x1b
 1560 0548 4A050000 		.4byte	.LASF44
 1561 054c 03       		.byte	0x3
 1562 054d BC02     		.2byte	0x2bc
 1563 054f 37050000 		.4byte	0x537
 1564 0553 1C       		.uleb128 0x1c
 1565 0554 09030000 		.4byte	.LASF45
 1566 0558 01       		.byte	0x1
 1567 0559 18       		.byte	0x18
 1568 055a 37050000 		.4byte	0x537
 1569 055e 05       		.uleb128 0x5
 1570 055f 03       		.byte	0x3
 1571 0560 00000000 		.4byte	CapSense_rawFilterData1
 1572 0564 1C       		.uleb128 0x1c
 1573 0565 21030000 		.4byte	.LASF46
 1574 0569 01       		.byte	0x1
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 62


 1575 056a 19       		.byte	0x19
 1576 056b 37050000 		.4byte	0x537
 1577 056f 05       		.uleb128 0x5
 1578 0570 03       		.byte	0x3
 1579 0571 00000000 		.4byte	CapSense_rawFilterData2
 1580 0575 19       		.uleb128 0x19
 1581 0576 6B000000 		.4byte	0x6b
 1582 057a 85050000 		.4byte	0x585
 1583 057e 1A       		.uleb128 0x1a
 1584 057f AB000000 		.4byte	0xab
 1585 0583 00       		.byte	0
 1586 0584 00       		.byte	0
 1587 0585 1B       		.uleb128 0x1b
 1588 0586 04020000 		.4byte	.LASF47
 1589 058a 04       		.byte	0x4
 1590 058b 0601     		.2byte	0x106
 1591 058d 75050000 		.4byte	0x575
 1592 0591 19       		.uleb128 0x19
 1593 0592 A1050000 		.4byte	0x5a1
 1594 0596 A1050000 		.4byte	0x5a1
 1595 059a 1A       		.uleb128 0x1a
 1596 059b AB000000 		.4byte	0xab
 1597 059f 03       		.byte	0x3
 1598 05a0 00       		.byte	0
 1599 05a1 1D       		.uleb128 0x1d
 1600 05a2 6B000000 		.4byte	0x6b
 1601 05a6 1B       		.uleb128 0x1b
 1602 05a7 5E010000 		.4byte	.LASF48
 1603 05ab 04       		.byte	0x4
 1604 05ac 0701     		.2byte	0x107
 1605 05ae B2050000 		.4byte	0x5b2
 1606 05b2 1D       		.uleb128 0x1d
 1607 05b3 91050000 		.4byte	0x591
 1608 05b7 1C       		.uleb128 0x1c
 1609 05b8 F8040000 		.4byte	.LASF49
 1610 05bc 01       		.byte	0x1
 1611 05bd 29       		.byte	0x29
 1612 05be 37050000 		.4byte	0x537
 1613 05c2 05       		.uleb128 0x5
 1614 05c3 03       		.byte	0x3
 1615 05c4 00000000 		.4byte	CapSense_sensorBaseline
 1616 05c8 19       		.uleb128 0x19
 1617 05c9 6B000000 		.4byte	0x6b
 1618 05cd D8050000 		.4byte	0x5d8
 1619 05d1 1A       		.uleb128 0x1a
 1620 05d2 AB000000 		.4byte	0xab
 1621 05d6 03       		.byte	0x3
 1622 05d7 00       		.byte	0
 1623 05d8 1C       		.uleb128 0x1c
 1624 05d9 B9010000 		.4byte	.LASF50
 1625 05dd 01       		.byte	0x1
 1626 05de 2A       		.byte	0x2a
 1627 05df C8050000 		.4byte	0x5c8
 1628 05e3 05       		.uleb128 0x5
 1629 05e4 03       		.byte	0x3
 1630 05e5 00000000 		.4byte	CapSense_sensorBaselineLow
 1631 05e9 1C       		.uleb128 0x1c
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 63


 1632 05ea 7E000000 		.4byte	.LASF51
 1633 05ee 01       		.byte	0x1
 1634 05ef 2B       		.byte	0x2b
 1635 05f0 C8050000 		.4byte	0x5c8
 1636 05f4 05       		.uleb128 0x5
 1637 05f5 03       		.byte	0x3
 1638 05f6 00000000 		.4byte	CapSense_sensorSignal
 1639 05fa 1C       		.uleb128 0x1c
 1640 05fb 2B000000 		.4byte	.LASF52
 1641 05ff 01       		.byte	0x1
 1642 0600 2C       		.byte	0x2c
 1643 0601 75050000 		.4byte	0x575
 1644 0605 05       		.uleb128 0x5
 1645 0606 03       		.byte	0x3
 1646 0607 00000000 		.4byte	CapSense_sensorOnMask
 1647 060b 1C       		.uleb128 0x1c
 1648 060c C9040000 		.4byte	.LASF53
 1649 0610 01       		.byte	0x1
 1650 0611 2E       		.byte	0x2e
 1651 0612 C8050000 		.4byte	0x5c8
 1652 0616 05       		.uleb128 0x5
 1653 0617 03       		.byte	0x3
 1654 0618 00000000 		.4byte	CapSense_lowBaselineResetCnt
 1655 061c 1C       		.uleb128 0x1c
 1656 061d F0020000 		.4byte	.LASF54
 1657 0621 01       		.byte	0x1
 1658 0622 30       		.byte	0x30
 1659 0623 C8050000 		.4byte	0x5c8
 1660 0627 05       		.uleb128 0x5
 1661 0628 03       		.byte	0x3
 1662 0629 00000000 		.4byte	CapSense_fingerThreshold
 1663 062d 1C       		.uleb128 0x1c
 1664 062e D8020000 		.4byte	.LASF55
 1665 0632 01       		.byte	0x1
 1666 0633 34       		.byte	0x34
 1667 0634 C8050000 		.4byte	0x5c8
 1668 0638 05       		.uleb128 0x5
 1669 0639 03       		.byte	0x3
 1670 063a 00000000 		.4byte	CapSense_noiseThreshold
 1671 063e 1C       		.uleb128 0x1c
 1672 063f 17000000 		.4byte	.LASF56
 1673 0643 01       		.byte	0x1
 1674 0644 38       		.byte	0x38
 1675 0645 C8050000 		.4byte	0x5c8
 1676 0649 05       		.uleb128 0x5
 1677 064a 03       		.byte	0x3
 1678 064b 00000000 		.4byte	CapSense_hysteresis
 1679 064f 1C       		.uleb128 0x1c
 1680 0650 E6040000 		.4byte	.LASF57
 1681 0654 01       		.byte	0x1
 1682 0655 3C       		.byte	0x3c
 1683 0656 C8050000 		.4byte	0x5c8
 1684 065a 05       		.uleb128 0x5
 1685 065b 03       		.byte	0x3
 1686 065c 00000000 		.4byte	CapSense_debounce
 1687 0660 19       		.uleb128 0x19
 1688 0661 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 64


 1689 0665 70060000 		.4byte	0x670
 1690 0669 1A       		.uleb128 0x1a
 1691 066a AB000000 		.4byte	0xab
 1692 066e 04       		.byte	0x4
 1693 066f 00       		.byte	0
 1694 0670 1C       		.uleb128 0x1c
 1695 0671 79050000 		.4byte	.LASF58
 1696 0675 01       		.byte	0x1
 1697 0676 40       		.byte	0x40
 1698 0677 60060000 		.4byte	0x660
 1699 067b 05       		.uleb128 0x5
 1700 067c 03       		.byte	0x3
 1701 067d 00000000 		.4byte	CapSense_debounceCounter
 1702 0681 1C       		.uleb128 0x1c
 1703 0682 D4010000 		.4byte	.LASF59
 1704 0686 01       		.byte	0x1
 1705 0687 44       		.byte	0x44
 1706 0688 92060000 		.4byte	0x692
 1707 068c 05       		.uleb128 0x5
 1708 068d 03       		.byte	0x3
 1709 068e 00000000 		.4byte	CapSense_rawDataIndex
 1710 0692 1D       		.uleb128 0x1d
 1711 0693 91050000 		.4byte	0x591
 1712 0697 1C       		.uleb128 0x1c
 1713 0698 AA050000 		.4byte	.LASF60
 1714 069c 01       		.byte	0x1
 1715 069d 4C       		.byte	0x4c
 1716 069e A8060000 		.4byte	0x6a8
 1717 06a2 05       		.uleb128 0x5
 1718 06a3 03       		.byte	0x3
 1719 06a4 00000000 		.4byte	CapSense_numberOfSensors
 1720 06a8 1D       		.uleb128 0x1d
 1721 06a9 91050000 		.4byte	0x591
 1722 06ad 1E       		.uleb128 0x1e
 1723 06ae 86010000 		.4byte	.LASF61
 1724 06b2 86010000 		.4byte	.LASF61
 1725 06b6 03       		.byte	0x3
 1726 06b7 9A       		.byte	0x9a
 1727 06b8 1E       		.uleb128 0x1e
 1728 06b9 9A050000 		.4byte	.LASF62
 1729 06bd 9A050000 		.4byte	.LASF62
 1730 06c1 03       		.byte	0x3
 1731 06c2 99       		.byte	0x99
 1732 06c3 1E       		.uleb128 0x1e
 1733 06c4 5D050000 		.4byte	.LASF63
 1734 06c8 5D050000 		.4byte	.LASF63
 1735 06cc 03       		.byte	0x3
 1736 06cd 9B       		.byte	0x9b
 1737 06ce 1E       		.uleb128 0x1e
 1738 06cf 41020000 		.4byte	.LASF64
 1739 06d3 41020000 		.4byte	.LASF64
 1740 06d7 04       		.byte	0x4
 1741 06d8 C3       		.byte	0xc3
 1742 06d9 00       		.byte	0
 1743              		.section	.debug_abbrev,"",%progbits
 1744              	.Ldebug_abbrev0:
 1745 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 65


 1746 0001 11       		.uleb128 0x11
 1747 0002 01       		.byte	0x1
 1748 0003 25       		.uleb128 0x25
 1749 0004 0E       		.uleb128 0xe
 1750 0005 13       		.uleb128 0x13
 1751 0006 0B       		.uleb128 0xb
 1752 0007 03       		.uleb128 0x3
 1753 0008 0E       		.uleb128 0xe
 1754 0009 1B       		.uleb128 0x1b
 1755 000a 0E       		.uleb128 0xe
 1756 000b 55       		.uleb128 0x55
 1757 000c 17       		.uleb128 0x17
 1758 000d 11       		.uleb128 0x11
 1759 000e 01       		.uleb128 0x1
 1760 000f 10       		.uleb128 0x10
 1761 0010 17       		.uleb128 0x17
 1762 0011 00       		.byte	0
 1763 0012 00       		.byte	0
 1764 0013 02       		.uleb128 0x2
 1765 0014 24       		.uleb128 0x24
 1766 0015 00       		.byte	0
 1767 0016 0B       		.uleb128 0xb
 1768 0017 0B       		.uleb128 0xb
 1769 0018 3E       		.uleb128 0x3e
 1770 0019 0B       		.uleb128 0xb
 1771 001a 03       		.uleb128 0x3
 1772 001b 0E       		.uleb128 0xe
 1773 001c 00       		.byte	0
 1774 001d 00       		.byte	0
 1775 001e 03       		.uleb128 0x3
 1776 001f 24       		.uleb128 0x24
 1777 0020 00       		.byte	0
 1778 0021 0B       		.uleb128 0xb
 1779 0022 0B       		.uleb128 0xb
 1780 0023 3E       		.uleb128 0x3e
 1781 0024 0B       		.uleb128 0xb
 1782 0025 03       		.uleb128 0x3
 1783 0026 08       		.uleb128 0x8
 1784 0027 00       		.byte	0
 1785 0028 00       		.byte	0
 1786 0029 04       		.uleb128 0x4
 1787 002a 16       		.uleb128 0x16
 1788 002b 00       		.byte	0
 1789 002c 03       		.uleb128 0x3
 1790 002d 0E       		.uleb128 0xe
 1791 002e 3A       		.uleb128 0x3a
 1792 002f 0B       		.uleb128 0xb
 1793 0030 3B       		.uleb128 0x3b
 1794 0031 05       		.uleb128 0x5
 1795 0032 49       		.uleb128 0x49
 1796 0033 13       		.uleb128 0x13
 1797 0034 00       		.byte	0
 1798 0035 00       		.byte	0
 1799 0036 05       		.uleb128 0x5
 1800 0037 2E       		.uleb128 0x2e
 1801 0038 01       		.byte	0x1
 1802 0039 3F       		.uleb128 0x3f
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 66


 1803 003a 19       		.uleb128 0x19
 1804 003b 03       		.uleb128 0x3
 1805 003c 0E       		.uleb128 0xe
 1806 003d 3A       		.uleb128 0x3a
 1807 003e 0B       		.uleb128 0xb
 1808 003f 3B       		.uleb128 0x3b
 1809 0040 0B       		.uleb128 0xb
 1810 0041 27       		.uleb128 0x27
 1811 0042 19       		.uleb128 0x19
 1812 0043 11       		.uleb128 0x11
 1813 0044 01       		.uleb128 0x1
 1814 0045 12       		.uleb128 0x12
 1815 0046 06       		.uleb128 0x6
 1816 0047 40       		.uleb128 0x40
 1817 0048 18       		.uleb128 0x18
 1818 0049 9742     		.uleb128 0x2117
 1819 004b 19       		.uleb128 0x19
 1820 004c 01       		.uleb128 0x1
 1821 004d 13       		.uleb128 0x13
 1822 004e 00       		.byte	0
 1823 004f 00       		.byte	0
 1824 0050 06       		.uleb128 0x6
 1825 0051 05       		.uleb128 0x5
 1826 0052 00       		.byte	0
 1827 0053 03       		.uleb128 0x3
 1828 0054 0E       		.uleb128 0xe
 1829 0055 3A       		.uleb128 0x3a
 1830 0056 0B       		.uleb128 0xb
 1831 0057 3B       		.uleb128 0x3b
 1832 0058 0B       		.uleb128 0xb
 1833 0059 49       		.uleb128 0x49
 1834 005a 13       		.uleb128 0x13
 1835 005b 02       		.uleb128 0x2
 1836 005c 18       		.uleb128 0x18
 1837 005d 00       		.byte	0
 1838 005e 00       		.byte	0
 1839 005f 07       		.uleb128 0x7
 1840 0060 34       		.uleb128 0x34
 1841 0061 00       		.byte	0
 1842 0062 03       		.uleb128 0x3
 1843 0063 0E       		.uleb128 0xe
 1844 0064 3A       		.uleb128 0x3a
 1845 0065 0B       		.uleb128 0xb
 1846 0066 3B       		.uleb128 0x3b
 1847 0067 0B       		.uleb128 0xb
 1848 0068 49       		.uleb128 0x49
 1849 0069 13       		.uleb128 0x13
 1850 006a 02       		.uleb128 0x2
 1851 006b 17       		.uleb128 0x17
 1852 006c 00       		.byte	0
 1853 006d 00       		.byte	0
 1854 006e 08       		.uleb128 0x8
 1855 006f 05       		.uleb128 0x5
 1856 0070 00       		.byte	0
 1857 0071 03       		.uleb128 0x3
 1858 0072 0E       		.uleb128 0xe
 1859 0073 3A       		.uleb128 0x3a
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 67


 1860 0074 0B       		.uleb128 0xb
 1861 0075 3B       		.uleb128 0x3b
 1862 0076 0B       		.uleb128 0xb
 1863 0077 49       		.uleb128 0x49
 1864 0078 13       		.uleb128 0x13
 1865 0079 02       		.uleb128 0x2
 1866 007a 17       		.uleb128 0x17
 1867 007b 00       		.byte	0
 1868 007c 00       		.byte	0
 1869 007d 09       		.uleb128 0x9
 1870 007e 898201   		.uleb128 0x4109
 1871 0081 01       		.byte	0x1
 1872 0082 11       		.uleb128 0x11
 1873 0083 01       		.uleb128 0x1
 1874 0084 31       		.uleb128 0x31
 1875 0085 13       		.uleb128 0x13
 1876 0086 01       		.uleb128 0x1
 1877 0087 13       		.uleb128 0x13
 1878 0088 00       		.byte	0
 1879 0089 00       		.byte	0
 1880 008a 0A       		.uleb128 0xa
 1881 008b 8A8201   		.uleb128 0x410a
 1882 008e 00       		.byte	0
 1883 008f 02       		.uleb128 0x2
 1884 0090 18       		.uleb128 0x18
 1885 0091 9142     		.uleb128 0x2111
 1886 0093 18       		.uleb128 0x18
 1887 0094 00       		.byte	0
 1888 0095 00       		.byte	0
 1889 0096 0B       		.uleb128 0xb
 1890 0097 898201   		.uleb128 0x4109
 1891 009a 00       		.byte	0
 1892 009b 11       		.uleb128 0x11
 1893 009c 01       		.uleb128 0x1
 1894 009d 31       		.uleb128 0x31
 1895 009e 13       		.uleb128 0x13
 1896 009f 00       		.byte	0
 1897 00a0 00       		.byte	0
 1898 00a1 0C       		.uleb128 0xc
 1899 00a2 898201   		.uleb128 0x4109
 1900 00a5 01       		.byte	0x1
 1901 00a6 11       		.uleb128 0x11
 1902 00a7 01       		.uleb128 0x1
 1903 00a8 31       		.uleb128 0x31
 1904 00a9 13       		.uleb128 0x13
 1905 00aa 00       		.byte	0
 1906 00ab 00       		.byte	0
 1907 00ac 0D       		.uleb128 0xd
 1908 00ad 34       		.uleb128 0x34
 1909 00ae 00       		.byte	0
 1910 00af 03       		.uleb128 0x3
 1911 00b0 08       		.uleb128 0x8
 1912 00b1 3A       		.uleb128 0x3a
 1913 00b2 0B       		.uleb128 0xb
 1914 00b3 3B       		.uleb128 0x3b
 1915 00b4 0B       		.uleb128 0xb
 1916 00b5 49       		.uleb128 0x49
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 68


 1917 00b6 13       		.uleb128 0x13
 1918 00b7 02       		.uleb128 0x2
 1919 00b8 17       		.uleb128 0x17
 1920 00b9 00       		.byte	0
 1921 00ba 00       		.byte	0
 1922 00bb 0E       		.uleb128 0xe
 1923 00bc 2E       		.uleb128 0x2e
 1924 00bd 01       		.byte	0x1
 1925 00be 3F       		.uleb128 0x3f
 1926 00bf 19       		.uleb128 0x19
 1927 00c0 03       		.uleb128 0x3
 1928 00c1 0E       		.uleb128 0xe
 1929 00c2 3A       		.uleb128 0x3a
 1930 00c3 0B       		.uleb128 0xb
 1931 00c4 3B       		.uleb128 0x3b
 1932 00c5 05       		.uleb128 0x5
 1933 00c6 27       		.uleb128 0x27
 1934 00c7 19       		.uleb128 0x19
 1935 00c8 11       		.uleb128 0x11
 1936 00c9 01       		.uleb128 0x1
 1937 00ca 12       		.uleb128 0x12
 1938 00cb 06       		.uleb128 0x6
 1939 00cc 40       		.uleb128 0x40
 1940 00cd 18       		.uleb128 0x18
 1941 00ce 9742     		.uleb128 0x2117
 1942 00d0 19       		.uleb128 0x19
 1943 00d1 01       		.uleb128 0x1
 1944 00d2 13       		.uleb128 0x13
 1945 00d3 00       		.byte	0
 1946 00d4 00       		.byte	0
 1947 00d5 0F       		.uleb128 0xf
 1948 00d6 34       		.uleb128 0x34
 1949 00d7 00       		.byte	0
 1950 00d8 03       		.uleb128 0x3
 1951 00d9 08       		.uleb128 0x8
 1952 00da 3A       		.uleb128 0x3a
 1953 00db 0B       		.uleb128 0xb
 1954 00dc 3B       		.uleb128 0x3b
 1955 00dd 05       		.uleb128 0x5
 1956 00de 49       		.uleb128 0x49
 1957 00df 13       		.uleb128 0x13
 1958 00e0 02       		.uleb128 0x2
 1959 00e1 17       		.uleb128 0x17
 1960 00e2 00       		.byte	0
 1961 00e3 00       		.byte	0
 1962 00e4 10       		.uleb128 0x10
 1963 00e5 34       		.uleb128 0x34
 1964 00e6 00       		.byte	0
 1965 00e7 03       		.uleb128 0x3
 1966 00e8 08       		.uleb128 0x8
 1967 00e9 3A       		.uleb128 0x3a
 1968 00ea 0B       		.uleb128 0xb
 1969 00eb 3B       		.uleb128 0x3b
 1970 00ec 05       		.uleb128 0x5
 1971 00ed 49       		.uleb128 0x49
 1972 00ee 13       		.uleb128 0x13
 1973 00ef 02       		.uleb128 0x2
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 69


 1974 00f0 18       		.uleb128 0x18
 1975 00f1 00       		.byte	0
 1976 00f2 00       		.byte	0
 1977 00f3 11       		.uleb128 0x11
 1978 00f4 34       		.uleb128 0x34
 1979 00f5 00       		.byte	0
 1980 00f6 03       		.uleb128 0x3
 1981 00f7 0E       		.uleb128 0xe
 1982 00f8 3A       		.uleb128 0x3a
 1983 00f9 0B       		.uleb128 0xb
 1984 00fa 3B       		.uleb128 0x3b
 1985 00fb 05       		.uleb128 0x5
 1986 00fc 49       		.uleb128 0x49
 1987 00fd 13       		.uleb128 0x13
 1988 00fe 02       		.uleb128 0x2
 1989 00ff 17       		.uleb128 0x17
 1990 0100 00       		.byte	0
 1991 0101 00       		.byte	0
 1992 0102 12       		.uleb128 0x12
 1993 0103 2E       		.uleb128 0x2e
 1994 0104 01       		.byte	0x1
 1995 0105 3F       		.uleb128 0x3f
 1996 0106 19       		.uleb128 0x19
 1997 0107 03       		.uleb128 0x3
 1998 0108 0E       		.uleb128 0xe
 1999 0109 3A       		.uleb128 0x3a
 2000 010a 0B       		.uleb128 0xb
 2001 010b 3B       		.uleb128 0x3b
 2002 010c 05       		.uleb128 0x5
 2003 010d 27       		.uleb128 0x27
 2004 010e 19       		.uleb128 0x19
 2005 010f 49       		.uleb128 0x49
 2006 0110 13       		.uleb128 0x13
 2007 0111 11       		.uleb128 0x11
 2008 0112 01       		.uleb128 0x1
 2009 0113 12       		.uleb128 0x12
 2010 0114 06       		.uleb128 0x6
 2011 0115 40       		.uleb128 0x40
 2012 0116 18       		.uleb128 0x18
 2013 0117 9742     		.uleb128 0x2117
 2014 0119 19       		.uleb128 0x19
 2015 011a 01       		.uleb128 0x1
 2016 011b 13       		.uleb128 0x13
 2017 011c 00       		.byte	0
 2018 011d 00       		.byte	0
 2019 011e 13       		.uleb128 0x13
 2020 011f 05       		.uleb128 0x5
 2021 0120 00       		.byte	0
 2022 0121 03       		.uleb128 0x3
 2023 0122 0E       		.uleb128 0xe
 2024 0123 3A       		.uleb128 0x3a
 2025 0124 0B       		.uleb128 0xb
 2026 0125 3B       		.uleb128 0x3b
 2027 0126 05       		.uleb128 0x5
 2028 0127 49       		.uleb128 0x49
 2029 0128 13       		.uleb128 0x13
 2030 0129 02       		.uleb128 0x2
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 70


 2031 012a 17       		.uleb128 0x17
 2032 012b 00       		.byte	0
 2033 012c 00       		.byte	0
 2034 012d 14       		.uleb128 0x14
 2035 012e 34       		.uleb128 0x34
 2036 012f 00       		.byte	0
 2037 0130 03       		.uleb128 0x3
 2038 0131 0E       		.uleb128 0xe
 2039 0132 3A       		.uleb128 0x3a
 2040 0133 0B       		.uleb128 0xb
 2041 0134 3B       		.uleb128 0x3b
 2042 0135 05       		.uleb128 0x5
 2043 0136 49       		.uleb128 0x49
 2044 0137 13       		.uleb128 0x13
 2045 0138 00       		.byte	0
 2046 0139 00       		.byte	0
 2047 013a 15       		.uleb128 0x15
 2048 013b 34       		.uleb128 0x34
 2049 013c 00       		.byte	0
 2050 013d 03       		.uleb128 0x3
 2051 013e 0E       		.uleb128 0xe
 2052 013f 3A       		.uleb128 0x3a
 2053 0140 0B       		.uleb128 0xb
 2054 0141 3B       		.uleb128 0x3b
 2055 0142 05       		.uleb128 0x5
 2056 0143 49       		.uleb128 0x49
 2057 0144 13       		.uleb128 0x13
 2058 0145 02       		.uleb128 0x2
 2059 0146 18       		.uleb128 0x18
 2060 0147 00       		.byte	0
 2061 0148 00       		.byte	0
 2062 0149 16       		.uleb128 0x16
 2063 014a 05       		.uleb128 0x5
 2064 014b 00       		.byte	0
 2065 014c 03       		.uleb128 0x3
 2066 014d 08       		.uleb128 0x8
 2067 014e 3A       		.uleb128 0x3a
 2068 014f 0B       		.uleb128 0xb
 2069 0150 3B       		.uleb128 0x3b
 2070 0151 05       		.uleb128 0x5
 2071 0152 49       		.uleb128 0x49
 2072 0153 13       		.uleb128 0x13
 2073 0154 02       		.uleb128 0x2
 2074 0155 17       		.uleb128 0x17
 2075 0156 00       		.byte	0
 2076 0157 00       		.byte	0
 2077 0158 17       		.uleb128 0x17
 2078 0159 05       		.uleb128 0x5
 2079 015a 00       		.byte	0
 2080 015b 03       		.uleb128 0x3
 2081 015c 08       		.uleb128 0x8
 2082 015d 3A       		.uleb128 0x3a
 2083 015e 0B       		.uleb128 0xb
 2084 015f 3B       		.uleb128 0x3b
 2085 0160 05       		.uleb128 0x5
 2086 0161 49       		.uleb128 0x49
 2087 0162 13       		.uleb128 0x13
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 71


 2088 0163 02       		.uleb128 0x2
 2089 0164 18       		.uleb128 0x18
 2090 0165 00       		.byte	0
 2091 0166 00       		.byte	0
 2092 0167 18       		.uleb128 0x18
 2093 0168 34       		.uleb128 0x34
 2094 0169 00       		.byte	0
 2095 016a 03       		.uleb128 0x3
 2096 016b 08       		.uleb128 0x8
 2097 016c 3A       		.uleb128 0x3a
 2098 016d 0B       		.uleb128 0xb
 2099 016e 3B       		.uleb128 0x3b
 2100 016f 05       		.uleb128 0x5
 2101 0170 49       		.uleb128 0x49
 2102 0171 13       		.uleb128 0x13
 2103 0172 00       		.byte	0
 2104 0173 00       		.byte	0
 2105 0174 19       		.uleb128 0x19
 2106 0175 01       		.uleb128 0x1
 2107 0176 01       		.byte	0x1
 2108 0177 49       		.uleb128 0x49
 2109 0178 13       		.uleb128 0x13
 2110 0179 01       		.uleb128 0x1
 2111 017a 13       		.uleb128 0x13
 2112 017b 00       		.byte	0
 2113 017c 00       		.byte	0
 2114 017d 1A       		.uleb128 0x1a
 2115 017e 21       		.uleb128 0x21
 2116 017f 00       		.byte	0
 2117 0180 49       		.uleb128 0x49
 2118 0181 13       		.uleb128 0x13
 2119 0182 2F       		.uleb128 0x2f
 2120 0183 0B       		.uleb128 0xb
 2121 0184 00       		.byte	0
 2122 0185 00       		.byte	0
 2123 0186 1B       		.uleb128 0x1b
 2124 0187 34       		.uleb128 0x34
 2125 0188 00       		.byte	0
 2126 0189 03       		.uleb128 0x3
 2127 018a 0E       		.uleb128 0xe
 2128 018b 3A       		.uleb128 0x3a
 2129 018c 0B       		.uleb128 0xb
 2130 018d 3B       		.uleb128 0x3b
 2131 018e 05       		.uleb128 0x5
 2132 018f 49       		.uleb128 0x49
 2133 0190 13       		.uleb128 0x13
 2134 0191 3F       		.uleb128 0x3f
 2135 0192 19       		.uleb128 0x19
 2136 0193 3C       		.uleb128 0x3c
 2137 0194 19       		.uleb128 0x19
 2138 0195 00       		.byte	0
 2139 0196 00       		.byte	0
 2140 0197 1C       		.uleb128 0x1c
 2141 0198 34       		.uleb128 0x34
 2142 0199 00       		.byte	0
 2143 019a 03       		.uleb128 0x3
 2144 019b 0E       		.uleb128 0xe
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 72


 2145 019c 3A       		.uleb128 0x3a
 2146 019d 0B       		.uleb128 0xb
 2147 019e 3B       		.uleb128 0x3b
 2148 019f 0B       		.uleb128 0xb
 2149 01a0 49       		.uleb128 0x49
 2150 01a1 13       		.uleb128 0x13
 2151 01a2 3F       		.uleb128 0x3f
 2152 01a3 19       		.uleb128 0x19
 2153 01a4 02       		.uleb128 0x2
 2154 01a5 18       		.uleb128 0x18
 2155 01a6 00       		.byte	0
 2156 01a7 00       		.byte	0
 2157 01a8 1D       		.uleb128 0x1d
 2158 01a9 26       		.uleb128 0x26
 2159 01aa 00       		.byte	0
 2160 01ab 49       		.uleb128 0x49
 2161 01ac 13       		.uleb128 0x13
 2162 01ad 00       		.byte	0
 2163 01ae 00       		.byte	0
 2164 01af 1E       		.uleb128 0x1e
 2165 01b0 2E       		.uleb128 0x2e
 2166 01b1 00       		.byte	0
 2167 01b2 3F       		.uleb128 0x3f
 2168 01b3 19       		.uleb128 0x19
 2169 01b4 3C       		.uleb128 0x3c
 2170 01b5 19       		.uleb128 0x19
 2171 01b6 6E       		.uleb128 0x6e
 2172 01b7 0E       		.uleb128 0xe
 2173 01b8 03       		.uleb128 0x3
 2174 01b9 0E       		.uleb128 0xe
 2175 01ba 3A       		.uleb128 0x3a
 2176 01bb 0B       		.uleb128 0xb
 2177 01bc 3B       		.uleb128 0x3b
 2178 01bd 0B       		.uleb128 0xb
 2179 01be 00       		.byte	0
 2180 01bf 00       		.byte	0
 2181 01c0 00       		.byte	0
 2182              		.section	.debug_loc,"",%progbits
 2183              	.Ldebug_loc0:
 2184              	.LLST0:
 2185 0000 06000000 		.4byte	.LVL1
 2186 0004 26000000 		.4byte	.LVL2
 2187 0008 0100     		.2byte	0x1
 2188 000a 52       		.byte	0x52
 2189 000b 00000000 		.4byte	0
 2190 000f 00000000 		.4byte	0
 2191              	.LLST1:
 2192 0013 00000000 		.4byte	.LVL3
 2193 0017 07000000 		.4byte	.LVL4-1
 2194 001b 0100     		.2byte	0x1
 2195 001d 50       		.byte	0x50
 2196 001e 07000000 		.4byte	.LVL4-1
 2197 0022 18000000 		.4byte	.LFE1
 2198 0026 0400     		.2byte	0x4
 2199 0028 F3       		.byte	0xf3
 2200 0029 01       		.uleb128 0x1
 2201 002a 50       		.byte	0x50
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 73


 2202 002b 9F       		.byte	0x9f
 2203 002c 00000000 		.4byte	0
 2204 0030 00000000 		.4byte	0
 2205              	.LLST2:
 2206 0034 02000000 		.4byte	.LVL7
 2207 0038 06000000 		.4byte	.LVL8
 2208 003c 0200     		.2byte	0x2
 2209 003e 30       		.byte	0x30
 2210 003f 9F       		.byte	0x9f
 2211 0040 06000000 		.4byte	.LVL8
 2212 0044 0E000000 		.4byte	.LVL10
 2213 0048 0100     		.2byte	0x1
 2214 004a 54       		.byte	0x54
 2215 004b 10000000 		.4byte	.LVL11
 2216 004f 16000000 		.4byte	.LFE2
 2217 0053 0100     		.2byte	0x1
 2218 0055 54       		.byte	0x54
 2219 0056 00000000 		.4byte	0
 2220 005a 00000000 		.4byte	0
 2221              	.LLST3:
 2222 005e 12000000 		.4byte	.LVL14
 2223 0062 34000000 		.4byte	.LVL18
 2224 0066 0100     		.2byte	0x1
 2225 0068 54       		.byte	0x54
 2226 0069 36000000 		.4byte	.LVL19
 2227 006d 3C000000 		.4byte	.LVL20
 2228 0071 0100     		.2byte	0x1
 2229 0073 54       		.byte	0x54
 2230 0074 00000000 		.4byte	0
 2231 0078 00000000 		.4byte	0
 2232              	.LLST4:
 2233 007c 1C000000 		.4byte	.LVL15
 2234 0080 28000000 		.4byte	.LVL16
 2235 0084 0100     		.2byte	0x1
 2236 0086 53       		.byte	0x53
 2237 0087 28000000 		.4byte	.LVL16
 2238 008b 34000000 		.4byte	.LVL18
 2239 008f 0700     		.2byte	0x7
 2240 0091 31       		.byte	0x31
 2241 0092 74       		.byte	0x74
 2242 0093 00       		.sleb128 0
 2243 0094 37       		.byte	0x37
 2244 0095 1A       		.byte	0x1a
 2245 0096 24       		.byte	0x24
 2246 0097 9F       		.byte	0x9f
 2247 0098 34000000 		.4byte	.LVL18
 2248 009c 36000000 		.4byte	.LVL19
 2249 00a0 0700     		.2byte	0x7
 2250 00a2 31       		.byte	0x31
 2251 00a3 74       		.byte	0x74
 2252 00a4 7F       		.sleb128 -1
 2253 00a5 37       		.byte	0x37
 2254 00a6 1A       		.byte	0x1a
 2255 00a7 24       		.byte	0x24
 2256 00a8 9F       		.byte	0x9f
 2257 00a9 00000000 		.4byte	0
 2258 00ad 00000000 		.4byte	0
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 74


 2259              	.LLST5:
 2260 00b1 00000000 		.4byte	.LVL21
 2261 00b5 2C000000 		.4byte	.LVL27
 2262 00b9 0100     		.2byte	0x1
 2263 00bb 50       		.byte	0x50
 2264 00bc 2C000000 		.4byte	.LVL27
 2265 00c0 40000000 		.4byte	.LVL29
 2266 00c4 0400     		.2byte	0x4
 2267 00c6 F3       		.byte	0xf3
 2268 00c7 01       		.uleb128 0x1
 2269 00c8 50       		.byte	0x50
 2270 00c9 9F       		.byte	0x9f
 2271 00ca 40000000 		.4byte	.LVL29
 2272 00ce 48000000 		.4byte	.LVL30
 2273 00d2 0100     		.2byte	0x1
 2274 00d4 50       		.byte	0x50
 2275 00d5 48000000 		.4byte	.LVL30
 2276 00d9 88000000 		.4byte	.LFE6
 2277 00dd 0400     		.2byte	0x4
 2278 00df F3       		.byte	0xf3
 2279 00e0 01       		.uleb128 0x1
 2280 00e1 50       		.byte	0x50
 2281 00e2 9F       		.byte	0x9f
 2282 00e3 00000000 		.4byte	0
 2283 00e7 00000000 		.4byte	0
 2284              	.LLST6:
 2285 00eb 04000000 		.4byte	.LVL22
 2286 00ef 74000000 		.4byte	.LVL33
 2287 00f3 0100     		.2byte	0x1
 2288 00f5 54       		.byte	0x54
 2289 00f6 00000000 		.4byte	0
 2290 00fa 00000000 		.4byte	0
 2291              	.LLST7:
 2292 00fe 18000000 		.4byte	.LVL24
 2293 0102 74000000 		.4byte	.LVL33
 2294 0106 0100     		.2byte	0x1
 2295 0108 57       		.byte	0x57
 2296 0109 00000000 		.4byte	0
 2297 010d 00000000 		.4byte	0
 2298              	.LLST8:
 2299 0111 1A000000 		.4byte	.LVL25
 2300 0115 2E000000 		.4byte	.LVL28
 2301 0119 0100     		.2byte	0x1
 2302 011b 51       		.byte	0x51
 2303 011c 2E000000 		.4byte	.LVL28
 2304 0120 40000000 		.4byte	.LVL29
 2305 0124 0800     		.2byte	0x8
 2306 0126 72       		.byte	0x72
 2307 0127 00       		.sleb128 0
 2308 0128 03       		.byte	0x3
 2309 0129 08000000 		.4byte	.LANCHOR0+8
 2310 012d 22       		.byte	0x22
 2311 012e 40000000 		.4byte	.LVL29
 2312 0132 4A000000 		.4byte	.LVL31
 2313 0136 0100     		.2byte	0x1
 2314 0138 51       		.byte	0x51
 2315 0139 4A000000 		.4byte	.LVL31
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 75


 2316 013d 6A000000 		.4byte	.LVL32
 2317 0141 0800     		.2byte	0x8
 2318 0143 72       		.byte	0x72
 2319 0144 00       		.sleb128 0
 2320 0145 03       		.byte	0x3
 2321 0146 08000000 		.4byte	.LANCHOR0+8
 2322 014a 22       		.byte	0x22
 2323 014b 00000000 		.4byte	0
 2324 014f 00000000 		.4byte	0
 2325              	.LLST9:
 2326 0153 1C000000 		.4byte	.LVL26
 2327 0157 74000000 		.4byte	.LVL33
 2328 015b 0100     		.2byte	0x1
 2329 015d 56       		.byte	0x56
 2330 015e 00000000 		.4byte	0
 2331 0162 00000000 		.4byte	0
 2332              	.LLST10:
 2333 0166 00000000 		.4byte	.LVL34
 2334 016a 08000000 		.4byte	.LVL36
 2335 016e 0100     		.2byte	0x1
 2336 0170 50       		.byte	0x50
 2337 0171 08000000 		.4byte	.LVL36
 2338 0175 2C000000 		.4byte	.LFE7
 2339 0179 0400     		.2byte	0x4
 2340 017b F3       		.byte	0xf3
 2341 017c 01       		.uleb128 0x1
 2342 017d 50       		.byte	0x50
 2343 017e 9F       		.byte	0x9f
 2344 017f 00000000 		.4byte	0
 2345 0183 00000000 		.4byte	0
 2346              	.LLST11:
 2347 0187 06000000 		.4byte	.LVL35
 2348 018b 1C000000 		.4byte	.LVL41
 2349 018f 0100     		.2byte	0x1
 2350 0191 54       		.byte	0x54
 2351 0192 1E000000 		.4byte	.LVL42
 2352 0196 26000000 		.4byte	.LVL43
 2353 019a 0100     		.2byte	0x1
 2354 019c 54       		.byte	0x54
 2355 019d 00000000 		.4byte	0
 2356 01a1 00000000 		.4byte	0
 2357              	.LLST12:
 2358 01a5 0E000000 		.4byte	.LVL37
 2359 01a9 26000000 		.4byte	.LVL43
 2360 01ad 0100     		.2byte	0x1
 2361 01af 55       		.byte	0x55
 2362 01b0 00000000 		.4byte	0
 2363 01b4 00000000 		.4byte	0
 2364              	.LLST13:
 2365 01b8 0E000000 		.4byte	.LVL37
 2366 01bc 10000000 		.4byte	.LVL38
 2367 01c0 0200     		.2byte	0x2
 2368 01c2 30       		.byte	0x30
 2369 01c3 9F       		.byte	0x9f
 2370 01c4 10000000 		.4byte	.LVL38
 2371 01c8 26000000 		.4byte	.LVL43
 2372 01cc 0100     		.2byte	0x1
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 76


 2373 01ce 56       		.byte	0x56
 2374 01cf 00000000 		.4byte	0
 2375 01d3 00000000 		.4byte	0
 2376              	.LLST14:
 2377 01d7 02000000 		.4byte	.LVL44
 2378 01db 08000000 		.4byte	.LVL45
 2379 01df 0200     		.2byte	0x2
 2380 01e1 30       		.byte	0x30
 2381 01e2 9F       		.byte	0x9f
 2382 01e3 08000000 		.4byte	.LVL45
 2383 01e7 14000000 		.4byte	.LVL48
 2384 01eb 0100     		.2byte	0x1
 2385 01ed 54       		.byte	0x54
 2386 01ee 16000000 		.4byte	.LVL49
 2387 01f2 1E000000 		.4byte	.LFE8
 2388 01f6 0100     		.2byte	0x1
 2389 01f8 54       		.byte	0x54
 2390 01f9 00000000 		.4byte	0
 2391 01fd 00000000 		.4byte	0
 2392              	.LLST15:
 2393 0201 02000000 		.4byte	.LVL44
 2394 0205 08000000 		.4byte	.LVL45
 2395 0209 0200     		.2byte	0x2
 2396 020b 30       		.byte	0x30
 2397 020c 9F       		.byte	0x9f
 2398 020d 08000000 		.4byte	.LVL45
 2399 0211 1E000000 		.4byte	.LFE8
 2400 0215 0100     		.2byte	0x1
 2401 0217 55       		.byte	0x55
 2402 0218 00000000 		.4byte	0
 2403 021c 00000000 		.4byte	0
 2404              	.LLST16:
 2405 0220 00000000 		.4byte	.LVL50
 2406 0224 08000000 		.4byte	.LVL52
 2407 0228 0100     		.2byte	0x1
 2408 022a 50       		.byte	0x50
 2409 022b 08000000 		.4byte	.LVL52
 2410 022f 38000000 		.4byte	.LFE9
 2411 0233 0400     		.2byte	0x4
 2412 0235 F3       		.byte	0xf3
 2413 0236 01       		.uleb128 0x1
 2414 0237 50       		.byte	0x50
 2415 0238 9F       		.byte	0x9f
 2416 0239 00000000 		.4byte	0
 2417 023d 00000000 		.4byte	0
 2418              	.LLST17:
 2419 0241 1A000000 		.4byte	.LVL55
 2420 0245 20000000 		.4byte	.LVL56
 2421 0249 0100     		.2byte	0x1
 2422 024b 52       		.byte	0x52
 2423 024c 20000000 		.4byte	.LVL56
 2424 0250 24000000 		.4byte	.LVL57
 2425 0254 0700     		.2byte	0x7
 2426 0256 31       		.byte	0x31
 2427 0257 73       		.byte	0x73
 2428 0258 00       		.sleb128 0
 2429 0259 37       		.byte	0x37
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 77


 2430 025a 1A       		.byte	0x1a
 2431 025b 24       		.byte	0x24
 2432 025c 9F       		.byte	0x9f
 2433 025d 24000000 		.4byte	.LVL57
 2434 0261 26000000 		.4byte	.LVL58
 2435 0265 0700     		.2byte	0x7
 2436 0267 31       		.byte	0x31
 2437 0268 73       		.byte	0x73
 2438 0269 7F       		.sleb128 -1
 2439 026a 37       		.byte	0x37
 2440 026b 1A       		.byte	0x1a
 2441 026c 24       		.byte	0x24
 2442 026d 9F       		.byte	0x9f
 2443 026e 00000000 		.4byte	0
 2444 0272 00000000 		.4byte	0
 2445              	.LLST18:
 2446 0276 06000000 		.4byte	.LVL51
 2447 027a 24000000 		.4byte	.LVL57
 2448 027e 0100     		.2byte	0x1
 2449 0280 53       		.byte	0x53
 2450 0281 26000000 		.4byte	.LVL58
 2451 0285 38000000 		.4byte	.LFE9
 2452 0289 0100     		.2byte	0x1
 2453 028b 53       		.byte	0x53
 2454 028c 00000000 		.4byte	0
 2455 0290 00000000 		.4byte	0
 2456              	.LLST19:
 2457 0294 0E000000 		.4byte	.LVL53
 2458 0298 2C000000 		.4byte	.LVL59
 2459 029c 0100     		.2byte	0x1
 2460 029e 55       		.byte	0x55
 2461 029f 00000000 		.4byte	0
 2462 02a3 00000000 		.4byte	0
 2463              	.LLST20:
 2464 02a7 00000000 		.4byte	.LVL60
 2465 02ab 08000000 		.4byte	.LVL62
 2466 02af 0100     		.2byte	0x1
 2467 02b1 50       		.byte	0x50
 2468 02b2 08000000 		.4byte	.LVL62
 2469 02b6 38000000 		.4byte	.LFE10
 2470 02ba 0400     		.2byte	0x4
 2471 02bc F3       		.byte	0xf3
 2472 02bd 01       		.uleb128 0x1
 2473 02be 50       		.byte	0x50
 2474 02bf 9F       		.byte	0x9f
 2475 02c0 00000000 		.4byte	0
 2476 02c4 00000000 		.4byte	0
 2477              	.LLST21:
 2478 02c8 1A000000 		.4byte	.LVL65
 2479 02cc 22000000 		.4byte	.LVL66
 2480 02d0 0100     		.2byte	0x1
 2481 02d2 52       		.byte	0x52
 2482 02d3 22000000 		.4byte	.LVL66
 2483 02d7 26000000 		.4byte	.LVL67
 2484 02db 0700     		.2byte	0x7
 2485 02dd 31       		.byte	0x31
 2486 02de 73       		.byte	0x73
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 78


 2487 02df 00       		.sleb128 0
 2488 02e0 37       		.byte	0x37
 2489 02e1 1A       		.byte	0x1a
 2490 02e2 24       		.byte	0x24
 2491 02e3 9F       		.byte	0x9f
 2492 02e4 26000000 		.4byte	.LVL67
 2493 02e8 28000000 		.4byte	.LVL68
 2494 02ec 0700     		.2byte	0x7
 2495 02ee 31       		.byte	0x31
 2496 02ef 73       		.byte	0x73
 2497 02f0 7F       		.sleb128 -1
 2498 02f1 37       		.byte	0x37
 2499 02f2 1A       		.byte	0x1a
 2500 02f3 24       		.byte	0x24
 2501 02f4 9F       		.byte	0x9f
 2502 02f5 00000000 		.4byte	0
 2503 02f9 00000000 		.4byte	0
 2504              	.LLST22:
 2505 02fd 06000000 		.4byte	.LVL61
 2506 0301 26000000 		.4byte	.LVL67
 2507 0305 0100     		.2byte	0x1
 2508 0307 53       		.byte	0x53
 2509 0308 28000000 		.4byte	.LVL68
 2510 030c 38000000 		.4byte	.LFE10
 2511 0310 0100     		.2byte	0x1
 2512 0312 53       		.byte	0x53
 2513 0313 00000000 		.4byte	0
 2514 0317 00000000 		.4byte	0
 2515              	.LLST23:
 2516 031b 0E000000 		.4byte	.LVL63
 2517 031f 2E000000 		.4byte	.LVL69
 2518 0323 0100     		.2byte	0x1
 2519 0325 55       		.byte	0x55
 2520 0326 00000000 		.4byte	0
 2521 032a 00000000 		.4byte	0
 2522              	.LLST24:
 2523 032e 00000000 		.4byte	.LVL70
 2524 0332 08000000 		.4byte	.LVL71
 2525 0336 0100     		.2byte	0x1
 2526 0338 50       		.byte	0x50
 2527 0339 08000000 		.4byte	.LVL71
 2528 033d 0A000000 		.4byte	.LVL72
 2529 0341 0400     		.2byte	0x4
 2530 0343 F3       		.byte	0xf3
 2531 0344 01       		.uleb128 0x1
 2532 0345 50       		.byte	0x50
 2533 0346 9F       		.byte	0x9f
 2534 0347 0A000000 		.4byte	.LVL72
 2535 034b 16000000 		.4byte	.LVL74
 2536 034f 0100     		.2byte	0x1
 2537 0351 50       		.byte	0x50
 2538 0352 00000000 		.4byte	0
 2539 0356 00000000 		.4byte	0
 2540              	.LLST25:
 2541 035a 00000000 		.4byte	.LVL70
 2542 035e 0A000000 		.4byte	.LVL72
 2543 0362 0100     		.2byte	0x1
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 79


 2544 0364 51       		.byte	0x51
 2545 0365 0A000000 		.4byte	.LVL72
 2546 0369 18000000 		.4byte	.LFE11
 2547 036d 0100     		.2byte	0x1
 2548 036f 51       		.byte	0x51
 2549 0370 00000000 		.4byte	0
 2550 0374 00000000 		.4byte	0
 2551              	.LLST26:
 2552 0378 00000000 		.4byte	.LVL75
 2553 037c 28000000 		.4byte	.LVL81
 2554 0380 0100     		.2byte	0x1
 2555 0382 50       		.byte	0x50
 2556 0383 28000000 		.4byte	.LVL81
 2557 0387 F4000000 		.4byte	.LFE4
 2558 038b 0400     		.2byte	0x4
 2559 038d F3       		.byte	0xf3
 2560 038e 01       		.uleb128 0x1
 2561 038f 50       		.byte	0x50
 2562 0390 9F       		.byte	0x9f
 2563 0391 00000000 		.4byte	0
 2564 0395 00000000 		.4byte	0
 2565              	.LLST27:
 2566 0399 88000000 		.4byte	.LVL90
 2567 039d 90000000 		.4byte	.LVL91
 2568 03a1 0500     		.2byte	0x5
 2569 03a3 73       		.byte	0x73
 2570 03a4 00       		.sleb128 0
 2571 03a5 38       		.byte	0x38
 2572 03a6 24       		.byte	0x24
 2573 03a7 9F       		.byte	0x9f
 2574 03a8 90000000 		.4byte	.LVL91
 2575 03ac A6000000 		.4byte	.LVL94
 2576 03b0 0100     		.2byte	0x1
 2577 03b2 50       		.byte	0x50
 2578 03b3 00000000 		.4byte	0
 2579 03b7 00000000 		.4byte	0
 2580              	.LLST28:
 2581 03bb 16000000 		.4byte	.LVL80
 2582 03bf 4C000000 		.4byte	.LVL85
 2583 03c3 0100     		.2byte	0x1
 2584 03c5 57       		.byte	0x57
 2585 03c6 4C000000 		.4byte	.LVL85
 2586 03ca 50000000 		.4byte	.LVL86
 2587 03ce 0100     		.2byte	0x1
 2588 03d0 55       		.byte	0x55
 2589 03d1 50000000 		.4byte	.LVL86
 2590 03d5 56000000 		.4byte	.LVL87
 2591 03d9 0100     		.2byte	0x1
 2592 03db 57       		.byte	0x57
 2593 03dc 56000000 		.4byte	.LVL87
 2594 03e0 CE000000 		.4byte	.LVL98
 2595 03e4 0100     		.2byte	0x1
 2596 03e6 55       		.byte	0x55
 2597 03e7 00000000 		.4byte	0
 2598 03eb 00000000 		.4byte	0
 2599              	.LLST29:
 2600 03ef 16000000 		.4byte	.LVL80
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 80


 2601 03f3 2E000000 		.4byte	.LVL83
 2602 03f7 0100     		.2byte	0x1
 2603 03f9 57       		.byte	0x57
 2604 03fa 2E000000 		.4byte	.LVL83
 2605 03fe CE000000 		.4byte	.LVL98
 2606 0402 0100     		.2byte	0x1
 2607 0404 58       		.byte	0x58
 2608 0405 00000000 		.4byte	0
 2609 0409 00000000 		.4byte	0
 2610              	.LLST30:
 2611 040d 0A000000 		.4byte	.LVL76
 2612 0411 0E000000 		.4byte	.LVL77
 2613 0415 0100     		.2byte	0x1
 2614 0417 53       		.byte	0x53
 2615 0418 0E000000 		.4byte	.LVL77
 2616 041c 12000000 		.4byte	.LVL79
 2617 0420 0900     		.2byte	0x9
 2618 0422 73       		.byte	0x73
 2619 0423 00       		.sleb128 0
 2620 0424 03       		.byte	0x3
 2621 0425 00000000 		.4byte	.LANCHOR0
 2622 0429 1C       		.byte	0x1c
 2623 042a 9F       		.byte	0x9f
 2624 042b 4C000000 		.4byte	.LVL85
 2625 042f 50000000 		.4byte	.LVL86
 2626 0433 0200     		.2byte	0x2
 2627 0435 31       		.byte	0x31
 2628 0436 9F       		.byte	0x9f
 2629 0437 56000000 		.4byte	.LVL87
 2630 043b 58000000 		.4byte	.LVL88
 2631 043f 0200     		.2byte	0x2
 2632 0441 30       		.byte	0x30
 2633 0442 9F       		.byte	0x9f
 2634 0443 58000000 		.4byte	.LVL88
 2635 0447 CE000000 		.4byte	.LVL98
 2636 044b 0100     		.2byte	0x1
 2637 044d 57       		.byte	0x57
 2638 044e 00000000 		.4byte	0
 2639 0452 00000000 		.4byte	0
 2640              	.LLST31:
 2641 0456 10000000 		.4byte	.LVL78
 2642 045a A8000000 		.4byte	.LVL95
 2643 045e 0100     		.2byte	0x1
 2644 0460 56       		.byte	0x56
 2645 0461 00000000 		.4byte	0
 2646 0465 00000000 		.4byte	0
 2647              	.LLST32:
 2648 0469 02000000 		.4byte	.LVL99
 2649 046d 06000000 		.4byte	.LVL100
 2650 0471 0200     		.2byte	0x2
 2651 0473 30       		.byte	0x30
 2652 0474 9F       		.byte	0x9f
 2653 0475 06000000 		.4byte	.LVL100
 2654 0479 20000000 		.4byte	.LVL103
 2655 047d 0100     		.2byte	0x1
 2656 047f 54       		.byte	0x54
 2657 0480 22000000 		.4byte	.LVL104
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 81


 2658 0484 28000000 		.4byte	.LVL105
 2659 0488 0100     		.2byte	0x1
 2660 048a 54       		.byte	0x54
 2661 048b 00000000 		.4byte	0
 2662 048f 00000000 		.4byte	0
 2663              	.LLST33:
 2664 0493 10000000 		.4byte	.LVL101
 2665 0497 1D000000 		.4byte	.LVL102-1
 2666 049b 0100     		.2byte	0x1
 2667 049d 53       		.byte	0x53
 2668 049e 1D000000 		.4byte	.LVL102-1
 2669 04a2 20000000 		.4byte	.LVL103
 2670 04a6 0700     		.2byte	0x7
 2671 04a8 31       		.byte	0x31
 2672 04a9 74       		.byte	0x74
 2673 04aa 00       		.sleb128 0
 2674 04ab 37       		.byte	0x37
 2675 04ac 1A       		.byte	0x1a
 2676 04ad 24       		.byte	0x24
 2677 04ae 9F       		.byte	0x9f
 2678 04af 20000000 		.4byte	.LVL103
 2679 04b3 22000000 		.4byte	.LVL104
 2680 04b7 0700     		.2byte	0x7
 2681 04b9 31       		.byte	0x31
 2682 04ba 74       		.byte	0x74
 2683 04bb 7F       		.sleb128 -1
 2684 04bc 37       		.byte	0x37
 2685 04bd 1A       		.byte	0x1a
 2686 04be 24       		.byte	0x24
 2687 04bf 9F       		.byte	0x9f
 2688 04c0 00000000 		.4byte	0
 2689 04c4 00000000 		.4byte	0
 2690              		.section	.debug_aranges,"",%progbits
 2691 0000 74000000 		.4byte	0x74
 2692 0004 0200     		.2byte	0x2
 2693 0006 00000000 		.4byte	.Ldebug_info0
 2694 000a 04       		.byte	0x4
 2695 000b 00       		.byte	0
 2696 000c 0000     		.2byte	0
 2697 000e 0000     		.2byte	0
 2698 0010 00000000 		.4byte	.LFB0
 2699 0014 58000000 		.4byte	.LFE0-.LFB0
 2700 0018 00000000 		.4byte	.LFB1
 2701 001c 18000000 		.4byte	.LFE1-.LFB1
 2702 0020 00000000 		.4byte	.LFB2
 2703 0024 16000000 		.4byte	.LFE2-.LFB2
 2704 0028 00000000 		.4byte	.LFB3
 2705 002c 44000000 		.4byte	.LFE3-.LFB3
 2706 0030 00000000 		.4byte	.LFB6
 2707 0034 88000000 		.4byte	.LFE6-.LFB6
 2708 0038 00000000 		.4byte	.LFB7
 2709 003c 2C000000 		.4byte	.LFE7-.LFB7
 2710 0040 00000000 		.4byte	.LFB8
 2711 0044 1E000000 		.4byte	.LFE8-.LFB8
 2712 0048 00000000 		.4byte	.LFB9
 2713 004c 38000000 		.4byte	.LFE9-.LFB9
 2714 0050 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 82


 2715 0054 38000000 		.4byte	.LFE10-.LFB10
 2716 0058 00000000 		.4byte	.LFB11
 2717 005c 18000000 		.4byte	.LFE11-.LFB11
 2718 0060 00000000 		.4byte	.LFB4
 2719 0064 F4000000 		.4byte	.LFE4-.LFB4
 2720 0068 00000000 		.4byte	.LFB5
 2721 006c 2C000000 		.4byte	.LFE5-.LFB5
 2722 0070 00000000 		.4byte	0
 2723 0074 00000000 		.4byte	0
 2724              		.section	.debug_ranges,"",%progbits
 2725              	.Ldebug_ranges0:
 2726 0000 00000000 		.4byte	.LFB0
 2727 0004 58000000 		.4byte	.LFE0
 2728 0008 00000000 		.4byte	.LFB1
 2729 000c 18000000 		.4byte	.LFE1
 2730 0010 00000000 		.4byte	.LFB2
 2731 0014 16000000 		.4byte	.LFE2
 2732 0018 00000000 		.4byte	.LFB3
 2733 001c 44000000 		.4byte	.LFE3
 2734 0020 00000000 		.4byte	.LFB6
 2735 0024 88000000 		.4byte	.LFE6
 2736 0028 00000000 		.4byte	.LFB7
 2737 002c 2C000000 		.4byte	.LFE7
 2738 0030 00000000 		.4byte	.LFB8
 2739 0034 1E000000 		.4byte	.LFE8
 2740 0038 00000000 		.4byte	.LFB9
 2741 003c 38000000 		.4byte	.LFE9
 2742 0040 00000000 		.4byte	.LFB10
 2743 0044 38000000 		.4byte	.LFE10
 2744 0048 00000000 		.4byte	.LFB11
 2745 004c 18000000 		.4byte	.LFE11
 2746 0050 00000000 		.4byte	.LFB4
 2747 0054 F4000000 		.4byte	.LFE4
 2748 0058 00000000 		.4byte	.LFB5
 2749 005c 2C000000 		.4byte	.LFE5
 2750 0060 00000000 		.4byte	0
 2751 0064 00000000 		.4byte	0
 2752              		.section	.debug_line,"",%progbits
 2753              	.Ldebug_line0:
 2754 0000 32020000 		.section	.debug_str,"MS",%progbits,1
 2754      02006B00 
 2754      00000201 
 2754      FB0E0D00 
 2754      01010101 
 2755              	.LASF10:
 2756 0000 75696E74 		.ascii	"uint16\000"
 2756      313600
 2757              	.LASF41:
 2758 0007 66696C74 		.ascii	"filteredRawData\000"
 2758      65726564 
 2758      52617744 
 2758      61746100 
 2759              	.LASF56:
 2760 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 2760      656E7365 
 2760      5F687973 
 2760      74657265 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 83


 2760      73697300 
 2761              	.LASF52:
 2762 002b 43617053 		.ascii	"CapSense_sensorOnMask\000"
 2762      656E7365 
 2762      5F73656E 
 2762      736F724F 
 2762      6E4D6173 
 2763              	.LASF26:
 2764 0041 66696E67 		.ascii	"fingerThreshold\000"
 2764      65725468 
 2764      72657368 
 2764      6F6C6400 
 2765              	.LASF37:
 2766 0051 43617053 		.ascii	"CapSense_MedianFilter\000"
 2766      656E7365 
 2766      5F4D6564 
 2766      69616E46 
 2766      696C7465 
 2767              	.LASF7:
 2768 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 2768      206C6F6E 
 2768      6720756E 
 2768      7369676E 
 2768      65642069 
 2769              	.LASF51:
 2770 007e 43617053 		.ascii	"CapSense_sensorSignal\000"
 2770      656E7365 
 2770      5F73656E 
 2770      736F7253 
 2770      69676E61 
 2771              	.LASF22:
 2772 0094 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 2772      656E7365 
 2772      5F496E69 
 2772      7469616C 
 2772      697A6545 
 2773              	.LASF43:
 2774 00b8 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 2774      656E7365 
 2774      5F557064 
 2774      61746545 
 2774      6E61626C 
 2775              	.LASF6:
 2776 00d8 6C6F6E67 		.ascii	"long long int\000"
 2776      206C6F6E 
 2776      6720696E 
 2776      7400
 2777              	.LASF0:
 2778 00e6 7369676E 		.ascii	"signed char\000"
 2778      65642063 
 2778      68617200 
 2779              	.LASF36:
 2780 00f2 43617053 		.ascii	"CapSense_DisableWidget\000"
 2780      656E7365 
 2780      5F446973 
 2780      61626C65 
 2780      57696467 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 84


 2781              	.LASF31:
 2782 0109 72617749 		.ascii	"rawIndex\000"
 2782      6E646578 
 2782      00
 2783              	.LASF32:
 2784 0112 6E756D62 		.ascii	"numberOfSensors\000"
 2784      65724F66 
 2784      53656E73 
 2784      6F727300 
 2785              	.LASF33:
 2786 0122 73746174 		.ascii	"state\000"
 2786      6500
 2787              	.LASF4:
 2788 0128 6C6F6E67 		.ascii	"long int\000"
 2788      20696E74 
 2788      00
 2789              	.LASF34:
 2790 0131 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 2790      656E7365 
 2790      5F436865 
 2790      636B4973 
 2790      416E7957 
 2791              	.LASF9:
 2792 0151 75696E74 		.ascii	"uint8\000"
 2792      3800
 2793              	.LASF13:
 2794 0157 646F7562 		.ascii	"double\000"
 2794      6C6500
 2795              	.LASF48:
 2796 015e 43617053 		.ascii	"CapSense_widgetNumber\000"
 2796      656E7365 
 2796      5F776964 
 2796      6765744E 
 2796      756D6265 
 2797              	.LASF11:
 2798 0174 75696E74 		.ascii	"uint32\000"
 2798      333200
 2799              	.LASF27:
 2800 017b 68797374 		.ascii	"hysteresis\000"
 2800      65726573 
 2800      697300
 2801              	.LASF61:
 2802 0186 43617053 		.ascii	"CapSense_ScanSensor\000"
 2802      656E7365 
 2802      5F536361 
 2802      6E53656E 
 2802      736F7200 
 2803              	.LASF8:
 2804 019a 756E7369 		.ascii	"unsigned int\000"
 2804      676E6564 
 2804      20696E74 
 2804      00
 2805              	.LASF5:
 2806 01a7 6C6F6E67 		.ascii	"long unsigned int\000"
 2806      20756E73 
 2806      69676E65 
 2806      6420696E 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 85


 2806      7400
 2807              	.LASF50:
 2808 01b9 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 2808      656E7365 
 2808      5F73656E 
 2808      736F7242 
 2808      6173656C 
 2809              	.LASF59:
 2810 01d4 43617053 		.ascii	"CapSense_rawDataIndex\000"
 2810      656E7365 
 2810      5F726177 
 2810      44617461 
 2810      496E6465 
 2811              	.LASF3:
 2812 01ea 73686F72 		.ascii	"short unsigned int\000"
 2812      7420756E 
 2812      7369676E 
 2812      65642069 
 2812      6E7400
 2813              	.LASF19:
 2814 01fd 73656E73 		.ascii	"sensor\000"
 2814      6F7200
 2815              	.LASF47:
 2816 0204 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2816      656E7365 
 2816      5F73656E 
 2816      736F7245 
 2816      6E61626C 
 2817              	.LASF38:
 2818 021e 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2818      656E7365 
 2818      5F557064 
 2818      61746553 
 2818      656E736F 
 2819              	.LASF39:
 2820 023c 63616C63 		.ascii	"calc\000"
 2820      00
 2821              	.LASF64:
 2822 0241 43617053 		.ascii	"CapSense_CalculateThresholds\000"
 2822      656E7365 
 2822      5F43616C 
 2822      63756C61 
 2822      74655468 
 2823              	.LASF28:
 2824 025e 6465626F 		.ascii	"debounce\000"
 2824      756E6365 
 2824      00
 2825              	.LASF16:
 2826 0267 73697A65 		.ascii	"sizetype\000"
 2826      74797065 
 2826      00
 2827              	.LASF35:
 2828 0270 43617053 		.ascii	"CapSense_EnableWidget\000"
 2828      656E7365 
 2828      5F456E61 
 2828      626C6557 
 2828      69646765 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 86


 2829              	.LASF15:
 2830 0286 6C6F6E67 		.ascii	"long double\000"
 2830      20646F75 
 2830      626C6500 
 2831              	.LASF18:
 2832 0292 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2832      656E7365 
 2832      5F496E69 
 2832      7469616C 
 2832      697A6553 
 2833              	.LASF29:
 2834 02b4 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 2834      656E7365 
 2834      5F436865 
 2834      636B4973 
 2834      53656E73 
 2835              	.LASF23:
 2836 02d1 656E4D61 		.ascii	"enMask\000"
 2836      736B00
 2837              	.LASF55:
 2838 02d8 43617053 		.ascii	"CapSense_noiseThreshold\000"
 2838      656E7365 
 2838      5F6E6F69 
 2838      73655468 
 2838      72657368 
 2839              	.LASF54:
 2840 02f0 43617053 		.ascii	"CapSense_fingerThreshold\000"
 2840      656E7365 
 2840      5F66696E 
 2840      67657254 
 2840      68726573 
 2841              	.LASF45:
 2842 0309 43617053 		.ascii	"CapSense_rawFilterData1\000"
 2842      656E7365 
 2842      5F726177 
 2842      46696C74 
 2842      65724461 
 2843              	.LASF46:
 2844 0321 43617053 		.ascii	"CapSense_rawFilterData2\000"
 2844      656E7365 
 2844      5F726177 
 2844      46696C74 
 2844      65724461 
 2845              	.LASF12:
 2846 0339 666C6F61 		.ascii	"float\000"
 2846      7400
 2847              	.LASF30:
 2848 033f 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 2848      656E7365 
 2848      5F436865 
 2848      636B4973 
 2848      57696467 
 2849              	.LASF67:
 2850 035c 443A5C4C 		.ascii	"D:\\Laboratorio\\Mufla\\2020\\Mufla 14L Touch Avant"
 2850      61626F72 
 2850      61746F72 
 2850      696F5C4D 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 87


 2850      75666C61 
 2851 038b 696B6120 		.ascii	"ika #0045882XX OP202019\\Mufla Doble Display\\Firmw"
 2851      23303034 
 2851      35383832 
 2851      5858204F 
 2851      50323032 
 2852 03bc 61726520 		.ascii	"are Psoc\\LCD2\\LCD.cydsn\000"
 2852      50736F63 
 2852      5C4C4344 
 2852      325C4C43 
 2852      442E6379 
 2853              	.LASF1:
 2854 03d4 756E7369 		.ascii	"unsigned char\000"
 2854      676E6564 
 2854      20636861 
 2854      7200
 2855              	.LASF20:
 2856 03e2 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2856      656E7365 
 2856      5F496E69 
 2856      7469616C 
 2856      697A6541 
 2857              	.LASF42:
 2858 0402 6E6F6973 		.ascii	"noiseThreshold\000"
 2858      65546872 
 2858      6573686F 
 2858      6C6400
 2859              	.LASF2:
 2860 0411 73686F72 		.ascii	"short int\000"
 2860      7420696E 
 2860      7400
 2861              	.LASF21:
 2862 041b 77696467 		.ascii	"widget\000"
 2862      657400
 2863              	.LASF24:
 2864 0422 6F6E4D61 		.ascii	"onMask\000"
 2864      736B00
 2865              	.LASF65:
 2866 0429 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2866      43313120 
 2866      352E342E 
 2866      31203230 
 2866      31363036 
 2867 045c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2867      20726576 
 2867      6973696F 
 2867      6E203233 
 2867      37373135 
 2868 048f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2868      66756E63 
 2868      74696F6E 
 2868      2D736563 
 2868      74696F6E 
 2869              	.LASF17:
 2870 04b7 43617053 		.ascii	"CapSense_BaseInit\000"
 2870      656E7365 
 2870      5F426173 
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 88


 2870      65496E69 
 2870      7400
 2871              	.LASF53:
 2872 04c9 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 2872      656E7365 
 2872      5F6C6F77 
 2872      42617365 
 2872      6C696E65 
 2873              	.LASF57:
 2874 04e6 43617053 		.ascii	"CapSense_debounce\000"
 2874      656E7365 
 2874      5F646562 
 2874      6F756E63 
 2874      6500
 2875              	.LASF49:
 2876 04f8 43617053 		.ascii	"CapSense_sensorBaseline\000"
 2876      656E7365 
 2876      5F73656E 
 2876      736F7242 
 2876      6173656C 
 2877              	.LASF14:
 2878 0510 63686172 		.ascii	"char\000"
 2878      00
 2879              	.LASF25:
 2880 0515 6465626F 		.ascii	"debounceIndex\000"
 2880      756E6365 
 2880      496E6465 
 2880      7800
 2881              	.LASF66:
 2882 0523 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 2882      72617465 
 2882      645F536F 
 2882      75726365 
 2882      5C50536F 
 2883              	.LASF44:
 2884 054a 43617053 		.ascii	"CapSense_sensorRaw\000"
 2884      656E7365 
 2884      5F73656E 
 2884      736F7252 
 2884      617700
 2885              	.LASF63:
 2886 055d 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2886      656E7365 
 2886      5F536361 
 2886      6E456E61 
 2886      626C6564 
 2887              	.LASF58:
 2888 0579 43617053 		.ascii	"CapSense_debounceCounter\000"
 2888      656E7365 
 2888      5F646562 
 2888      6F756E63 
 2888      65436F75 
 2889              	.LASF40:
 2890 0592 74656D70 		.ascii	"tempRaw\000"
 2890      52617700 
 2891              	.LASF62:
 2892 059a 43617053 		.ascii	"CapSense_IsBusy\000"
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccDhshKU.s 			page 89


 2892      656E7365 
 2892      5F497342 
 2892      75737900 
 2893              	.LASF60:
 2894 05aa 43617053 		.ascii	"CapSense_numberOfSensors\000"
 2894      656E7365 
 2894      5F6E756D 
 2894      6265724F 
 2894      6653656E 
 2895              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
