CCS PCH C Compiler, Version 4.104, 5967               25-ene.-20 13:40

               Filename: C:\Users\DELL\Desktop\Mufla 16L Avantika #004588073 OP2019142\Firmware CalificaciónV2\Mufla.lst

               ROM used: 55506 bytes (56%)
                         Largest free fragment is 32768
               RAM used: 2154 (65%) at main() level
                         2212 (66%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
00000:  GOTO   6CD8
*
00008:  MOVWF  04
0000A:  MOVFF  FD8,05
0000E:  MOVFF  FE0,06
00012:  MOVLB  0
00014:  MOVFF  FE9,0C
00018:  MOVFF  FEA,07
0001C:  MOVFF  FE1,08
00020:  MOVFF  FE2,09
00024:  MOVFF  FD9,0A
00028:  MOVFF  FDA,0B
0002C:  MOVFF  FF3,12
00030:  MOVFF  FF4,13
00034:  MOVFF  FFA,14
00038:  MOVFF  FFB,15
0003C:  MOVFF  00,0E
00040:  MOVFF  01,0F
00044:  MOVFF  02,10
00048:  MOVFF  03,11
0004C:  BTFSS  F9D.0
0004E:  GOTO   0058
00052:  BTFSC  F9E.0
00054:  GOTO   12F0
00058:  MOVFF  0E,00
0005C:  MOVFF  0F,01
00060:  MOVFF  10,02
00064:  MOVFF  11,03
00068:  MOVFF  0C,FE9
0006C:  MOVFF  07,FEA
00070:  BSF    07.7
00072:  MOVFF  08,FE1
00076:  MOVFF  09,FE2
0007A:  MOVFF  0A,FD9
0007E:  MOVFF  0B,FDA
00082:  MOVFF  12,FF3
00086:  MOVFF  13,FF4
0008A:  MOVFF  14,FFA
0008E:  MOVFF  15,FFB
00092:  MOVF   04,W
00094:  MOVFF  06,FE0
00098:  MOVFF  05,FD8
0009C:  RETFIE 0
.................... // Control para mufla con rampas  
.................... // Se pueden programar 5 Programas de 10 Segmentos cada Uno. 
.................... // En un segmento se puede programar una rampa o una meseta. 
....................  
....................  
.................... #include <18F4685.h> 
.................... //////// Standard Header file for the PIC18F4685 device //////////////// 
.................... #device PIC18F4685 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP,NODEBUG,NOSTVREN,NOPUT,NOCPD,NOWRT,NOIESO,NOFCMEN,NOPBADEN,NOWRTC,NOWRTB,NOEBTR,NOEBTRB,NOCPB,NOXINST,NOLPT1OSC,NOMCLR 
.................... #use delay(clock=20000000) 
*
013A4:  MOVLW  08
013A6:  MOVWF  FEA
013A8:  MOVLW  6E
013AA:  MOVWF  FE9
013AC:  MOVF   FEF,W
013AE:  BZ    13CA
013B0:  MOVLW  06
013B2:  MOVWF  01
013B4:  CLRF   00
013B6:  DECFSZ 00,F
013B8:  BRA    13B6
013BA:  DECFSZ 01,F
013BC:  BRA    13B4
013BE:  MOVLW  7B
013C0:  MOVWF  00
013C2:  DECFSZ 00,F
013C4:  BRA    13C2
013C6:  DECFSZ FEF,F
013C8:  BRA    13B0
013CA:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B2   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B3   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B4   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
01536:  BCF    F93.4
01538:  BSF    F8A.4
....................    output_low(GLCD_E); 
0153A:  BCF    F93.7
0153C:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
0153E:  BCF    F93.2
01540:  BCF    F8A.2
....................    output_low(GLCD_CS2); 
01542:  BCF    F93.3
01544:  BCF    F8A.3
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
01546:  BCF    F93.5
01548:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
0154A:  MOVLB  8
0154C:  CLRF   x83
0154E:  MOVLW  C0
01550:  MOVWF  x84
01552:  MOVLB  0
01554:  RCALL  13EE
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
01556:  MOVLW  01
01558:  MOVLB  8
0155A:  MOVWF  x83
0155C:  MOVLW  C0
0155E:  MOVWF  x84
01560:  MOVLB  0
01562:  RCALL  13EE
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
01564:  MOVLB  8
01566:  CLRF   x83
01568:  MOVLW  40
0156A:  MOVWF  x84
0156C:  MOVLB  0
0156E:  RCALL  13EE
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
01570:  MOVLW  01
01572:  MOVLB  8
01574:  MOVWF  x83
01576:  MOVLW  40
01578:  MOVWF  x84
0157A:  MOVLB  0
0157C:  RCALL  13EE
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
0157E:  MOVLB  8
01580:  CLRF   x83
01582:  MOVLW  B8
01584:  MOVWF  x84
01586:  MOVLB  0
01588:  RCALL  13EE
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
0158A:  MOVLW  01
0158C:  MOVLB  8
0158E:  MOVWF  x83
01590:  MOVLW  B8
01592:  MOVWF  x84
01594:  MOVLB  0
01596:  RCALL  13EE
....................  
....................    if(mode == ON) 
01598:  MOVLB  8
0159A:  DECFSZ x66,W
0159C:  BRA    15BA
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
0159E:  CLRF   x83
015A0:  MOVLW  3F
015A2:  MOVWF  x84
015A4:  MOVLB  0
015A6:  RCALL  13EE
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
015A8:  MOVLW  01
015AA:  MOVLB  8
015AC:  MOVWF  x83
015AE:  MOVLW  3F
015B0:  MOVWF  x84
015B2:  MOVLB  0
015B4:  RCALL  13EE
....................    } 
....................    else 
015B6:  BRA    15D2
015B8:  MOVLB  8
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
015BA:  CLRF   x83
015BC:  MOVLW  3E
015BE:  MOVWF  x84
015C0:  MOVLB  0
015C2:  RCALL  13EE
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
015C4:  MOVLW  01
015C6:  MOVLB  8
015C8:  MOVWF  x83
015CA:  MOVLW  3E
015CC:  MOVWF  x84
015CE:  MOVLB  0
015D0:  RCALL  13EE
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
015D2:  MOVLB  8
015D4:  CLRF   x6D
015D6:  MOVLB  0
015D8:  RCALL  1424
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
015DA:  RCALL  147E
....................    #endif 
.................... } 
015DC:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
0147E:  MOVLB  8
01480:  CLRF   x7F
01482:  MOVLW  17
01484:  MOVWF  x7E
....................    p2 = displayData.right; 
01486:  MOVLW  02
01488:  MOVWF  x81
0148A:  MOVLW  17
0148C:  MOVWF  x80
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
0148E:  CLRF   x7C
01490:  MOVF   x7C,W
01492:  SUBLW  07
01494:  BNC   1532
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
01496:  BCF    F93.5
01498:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
0149A:  CLRF   x83
0149C:  MOVLW  40
0149E:  MOVWF  x84
014A0:  MOVLB  0
014A2:  RCALL  13EE
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
014A4:  MOVLW  01
014A6:  MOVLB  8
014A8:  MOVWF  x83
014AA:  MOVLW  40
014AC:  MOVWF  x84
014AE:  MOVLB  0
014B0:  RCALL  13EE
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
014B2:  MOVLB  8
014B4:  MOVF   x7C,W
014B6:  IORLW  B8
014B8:  MOVWF  x82
014BA:  CLRF   x83
014BC:  MOVWF  x84
014BE:  MOVLB  0
014C0:  RCALL  13EE
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
014C2:  MOVLB  8
014C4:  MOVF   x7C,W
014C6:  IORLW  B8
014C8:  MOVWF  x82
014CA:  MOVLW  01
014CC:  MOVWF  x83
014CE:  MOVFF  882,884
014D2:  MOVLB  0
014D4:  RCALL  13EE
....................       output_high(GLCD_DI);                     // Set for data 
014D6:  BCF    F93.5
014D8:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
014DA:  MOVLB  8
014DC:  CLRF   x7D
014DE:  MOVF   x7D,W
014E0:  SUBLW  3F
014E2:  BNC   152E
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
014E4:  MOVFF  87F,03
014E8:  MOVF   x7E,W
014EA:  INCF   x7E,F
014EC:  BTFSC  FD8.2
014EE:  INCF   x7F,F
014F0:  MOVWF  FE9
014F2:  MOVFF  03,FEA
014F6:  MOVFF  FEF,882
014FA:  CLRF   x83
014FC:  MOVFF  882,884
01500:  MOVLB  0
01502:  RCALL  13EE
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
01504:  MOVLB  8
01506:  MOVFF  881,03
0150A:  MOVF   x80,W
0150C:  INCF   x80,F
0150E:  BTFSC  FD8.2
01510:  INCF   x81,F
01512:  MOVWF  FE9
01514:  MOVFF  03,FEA
01518:  MOVFF  FEF,882
0151C:  MOVLW  01
0151E:  MOVWF  x83
01520:  MOVFF  882,884
01524:  MOVLB  0
01526:  RCALL  13EE
....................       } 
01528:  MOVLB  8
0152A:  INCF   x7D,F
0152C:  BRA    14DE
....................    } 
0152E:  INCF   x7C,F
01530:  BRA    1490
.................... } 
01532:  MOVLB  0
01534:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
015DE:  MOVLB  8
015E0:  CLRF   xA0
015E2:  RRCF   x9B,W
015E4:  MOVWF  x9F
015E6:  RRCF   x9F,F
015E8:  RRCF   x9F,F
015EA:  MOVLW  1F
015EC:  ANDWF  x9F,F
....................    temp *= 64; 
015EE:  RLCF   x9F,F
015F0:  RLCF   xA0,F
015F2:  RLCF   x9F,F
015F4:  RLCF   xA0,F
015F6:  RLCF   x9F,F
015F8:  RLCF   xA0,F
015FA:  RLCF   x9F,F
015FC:  RLCF   xA0,F
015FE:  RLCF   x9F,F
01600:  RLCF   xA0,F
01602:  RLCF   x9F,F
01604:  RLCF   xA0,F
01606:  MOVLW  C0
01608:  ANDWF  x9F,F
....................    temp += x; 
0160A:  MOVF   x9A,W
0160C:  ADDWF  x9F,F
0160E:  MOVLW  00
01610:  ADDWFC xA0,F
....................  
....................    if(x > 63) 
01612:  MOVF   x9A,W
01614:  SUBLW  3F
01616:  BC    1632
....................    { 
....................       p = displayData.right + temp - 64; 
01618:  MOVLW  17
0161A:  ADDWF  x9F,W
0161C:  MOVWF  xA1
0161E:  MOVLW  02
01620:  ADDWFC xA0,W
01622:  MOVWF  xA2
01624:  MOVLW  40
01626:  SUBWF  xA1,W
01628:  MOVWF  x9D
0162A:  MOVLW  00
0162C:  SUBWFB xA2,W
0162E:  MOVWF  x9E
....................    } 
....................    else 
01630:  BRA    163E
....................    { 
....................       p = displayData.left + temp; 
01632:  MOVLW  17
01634:  ADDWF  x9F,W
01636:  MOVWF  x9D
01638:  MOVLW  00
0163A:  ADDWFC xA0,W
0163C:  MOVWF  x9E
....................    } 
....................  
....................    if(color) 
0163E:  MOVF   x9C,F
01640:  BZ    166C
....................    { 
....................       bit_set(*p, y%8); 
01642:  MOVFF  89E,03
01646:  MOVFF  89D,FE9
0164A:  MOVFF  89E,FEA
0164E:  MOVF   x9B,W
01650:  ANDLW  07
01652:  MOVWF  xA1
01654:  MOVLW  01
01656:  MOVWF  00
01658:  MOVF   xA1,W
0165A:  MOVWF  01
0165C:  BZ    1666
0165E:  BCF    FD8.0
01660:  RLCF   00,F
01662:  DECFSZ 01,F
01664:  BRA    165E
01666:  MOVF   00,W
01668:  IORWF  FEF,F
....................    } 
....................    else 
0166A:  BRA    1696
....................    { 
....................       bit_clear(*p, y%8); 
0166C:  MOVFF  89E,03
01670:  MOVFF  89D,FE9
01674:  MOVFF  89E,FEA
01678:  MOVF   x9B,W
0167A:  ANDLW  07
0167C:  MOVWF  xA1
0167E:  MOVLW  01
01680:  MOVWF  00
01682:  MOVF   xA1,W
01684:  MOVWF  01
01686:  BZ    1690
01688:  BCF    FD8.0
0168A:  RLCF   00,F
0168C:  DECFSZ 01,F
0168E:  BRA    1688
01690:  MOVF   00,W
01692:  XORLW  FF
01694:  ANDWF  FEF,F
....................    } 
.................... } 
01696:  MOVLB  0
01698:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
01424:  MOVLB  8
01426:  CLRF   x70
01428:  MOVLW  17
0142A:  MOVWF  x6F
....................    p2 = displayData.right; 
0142C:  MOVLW  02
0142E:  MOVWF  x72
01430:  MOVLW  17
01432:  MOVWF  x71
....................    data = 0xFF * color; 
01434:  MOVF   x6D,W
01436:  MULLW  FF
01438:  MOVFF  FF3,86E
....................  
....................    for(i=0; i<512; ++i) 
0143C:  CLRF   x74
0143E:  CLRF   x73
01440:  MOVF   x74,W
01442:  SUBLW  01
01444:  BNC   147A
....................    { 
....................       *p1++ = data; 
01446:  MOVFF  870,03
0144A:  MOVF   x6F,W
0144C:  INCF   x6F,F
0144E:  BTFSC  FD8.2
01450:  INCF   x70,F
01452:  MOVWF  FE9
01454:  MOVFF  03,FEA
01458:  MOVFF  86E,FEF
....................       *p2++ = data; 
0145C:  MOVFF  872,03
01460:  MOVF   x71,W
01462:  INCF   x71,F
01464:  BTFSC  FD8.2
01466:  INCF   x72,F
01468:  MOVWF  FE9
0146A:  MOVFF  03,FEA
0146E:  MOVFF  86E,FEF
....................    } 
01472:  INCF   x73,F
01474:  BTFSC  FD8.2
01476:  INCF   x74,F
01478:  BRA    1440
.................... } 
0147A:  MOVLB  0
0147C:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
013EE:  MOVLB  8
013F0:  MOVF   x83,F
013F2:  BZ    13FA
....................       output_high(GLCD_CS2); 
013F4:  BCF    F93.3
013F6:  BSF    F8A.3
....................    else 
013F8:  BRA    13FE
....................       output_high(GLCD_CS1); 
013FA:  BCF    F93.2
013FC:  BSF    F8A.2
....................  
....................    output_low(GLCD_RW);       // Set for writing 
013FE:  BCF    F93.6
01400:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
01402:  CLRF   F95
01404:  MOVFF  884,F8C
....................    delay_cycles(1); 
01408:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0140A:  BCF    F93.7
0140C:  BSF    F8A.7
....................    delay_cycles(5); 
0140E:  BRA    1410
01410:  BRA    1412
01412:  NOP   
....................    output_low(GLCD_E); 
01414:  BCF    F93.7
01416:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
01418:  BCF    F93.2
0141A:  BCF    F8A.2
....................    output_low(GLCD_CS2); 
0141C:  BCF    F93.3
0141E:  BCF    F8A.3
.................... } 
01420:  MOVLB  0
01422:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(1); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(4); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
0169A:  MOVLW  01
0169C:  MOVLB  8
0169E:  MOVWF  x93
016A0:  MOVWF  x94
016A2:  CLRF   x99
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
016A4:  MOVF   x8A,W
016A6:  SUBWF  x8C,W
016A8:  MOVWF  x9A
016AA:  MOVF   x9A,W
016AC:  BTFSS  x9A.7
016AE:  BRA    16B6
016B0:  MOVLW  00
016B2:  BSF    FD8.0
016B4:  SUBFWB x9A,W
016B6:  CLRF   03
016B8:  MOVWF  x91
016BA:  MOVFF  03,892
....................    dy = abs((signed int8)(y2 - y1)); 
016BE:  MOVF   x8B,W
016C0:  SUBWF  x8D,W
016C2:  MOVWF  x9A
016C4:  MOVF   x9A,W
016C6:  BTFSS  x9A.7
016C8:  BRA    16D0
016CA:  MOVLW  00
016CC:  BSF    FD8.0
016CE:  SUBFWB x9A,W
016D0:  CLRF   03
016D2:  MOVWF  x8F
016D4:  MOVFF  03,890
....................    #endif 
....................  
....................    if(x1 > x2) 
016D8:  MOVF   x8A,W
016DA:  SUBWF  x8C,W
016DC:  BC    16E2
....................       addx = -1; 
016DE:  MOVLW  FF
016E0:  MOVWF  x93
....................    if(y1 > y2) 
016E2:  MOVF   x8B,W
016E4:  SUBWF  x8D,W
016E6:  BC    16EC
....................       addy = -1; 
016E8:  MOVLW  FF
016EA:  MOVWF  x94
....................  
....................    if(dx >= dy) 
016EC:  MOVF   x90,W
016EE:  SUBWF  x92,W
016F0:  BNC   1768
016F2:  BNZ   16FA
016F4:  MOVF   x8F,W
016F6:  SUBWF  x91,W
016F8:  BNC   1768
....................    { 
....................       dy *= 2; 
016FA:  BCF    FD8.0
016FC:  RLCF   x8F,F
016FE:  RLCF   x90,F
....................       P = dy - dx; 
01700:  MOVF   x91,W
01702:  SUBWF  x8F,W
01704:  MOVWF  00
01706:  MOVF   x92,W
01708:  SUBWFB x90,W
0170A:  MOVFF  00,895
0170E:  MOVWF  x96
....................       diff = P - dx; 
01710:  MOVF   x91,W
01712:  SUBWF  x95,W
01714:  MOVWF  x97
01716:  MOVF   x92,W
01718:  SUBWFB x96,W
0171A:  MOVWF  x98
....................  
....................       for(; i<=dx; ++i) 
0171C:  MOVF   x92,F
0171E:  BNZ   1726
01720:  MOVF   x99,W
01722:  SUBWF  x91,W
01724:  BNC   1766
....................       { 
....................          glcd_pixel(x1, y1, color); 
01726:  MOVFF  88A,89A
0172A:  MOVFF  88B,89B
0172E:  MOVFF  88E,89C
01732:  MOVLB  0
01734:  RCALL  15DE
....................  
....................          if(P < 0) 
01736:  MOVLB  8
01738:  BTFSC  x96.7
0173A:  BRA    173E
0173C:  BRA    174E
....................          { 
....................             P  += dy; 
0173E:  MOVF   x8F,W
01740:  ADDWF  x95,F
01742:  MOVF   x90,W
01744:  ADDWFC x96,F
....................             x1 += addx; 
01746:  MOVF   x93,W
01748:  ADDWF  x8A,W
0174A:  MOVWF  x8A
....................          } 
....................          else 
0174C:  BRA    1762
....................          { 
....................             P  += diff; 
0174E:  MOVF   x97,W
01750:  ADDWF  x95,F
01752:  MOVF   x98,W
01754:  ADDWFC x96,F
....................             x1 += addx; 
01756:  MOVF   x93,W
01758:  ADDWF  x8A,W
0175A:  MOVWF  x8A
....................             y1 += addy; 
0175C:  MOVF   x94,W
0175E:  ADDWF  x8B,W
01760:  MOVWF  x8B
....................          } 
....................       } 
01762:  INCF   x99,F
01764:  BRA    171C
....................    } 
....................    else 
01766:  BRA    17D4
....................    { 
....................       dx *= 2; 
01768:  BCF    FD8.0
0176A:  RLCF   x91,F
0176C:  RLCF   x92,F
....................       P = dx - dy; 
0176E:  MOVF   x8F,W
01770:  SUBWF  x91,W
01772:  MOVWF  00
01774:  MOVF   x90,W
01776:  SUBWFB x92,W
01778:  MOVFF  00,895
0177C:  MOVWF  x96
....................       diff = P - dy; 
0177E:  MOVF   x8F,W
01780:  SUBWF  x95,W
01782:  MOVWF  x97
01784:  MOVF   x90,W
01786:  SUBWFB x96,W
01788:  MOVWF  x98
....................  
....................       for(; i<=dy; ++i) 
0178A:  MOVF   x90,F
0178C:  BNZ   1794
0178E:  MOVF   x99,W
01790:  SUBWF  x8F,W
01792:  BNC   17D4
....................       { 
....................          glcd_pixel(x1, y1, color); 
01794:  MOVFF  88A,89A
01798:  MOVFF  88B,89B
0179C:  MOVFF  88E,89C
017A0:  MOVLB  0
017A2:  RCALL  15DE
....................  
....................          if(P < 0) 
017A4:  MOVLB  8
017A6:  BTFSC  x96.7
017A8:  BRA    17AC
017AA:  BRA    17BC
....................          { 
....................             P  += dx; 
017AC:  MOVF   x91,W
017AE:  ADDWF  x95,F
017B0:  MOVF   x92,W
017B2:  ADDWFC x96,F
....................             y1 += addy; 
017B4:  MOVF   x94,W
017B6:  ADDWF  x8B,W
017B8:  MOVWF  x8B
....................          } 
....................          else 
017BA:  BRA    17D0
....................          { 
....................             P  += diff; 
017BC:  MOVF   x97,W
017BE:  ADDWF  x95,F
017C0:  MOVF   x98,W
017C2:  ADDWFC x96,F
....................             x1 += addx; 
017C4:  MOVF   x93,W
017C6:  ADDWF  x8A,W
017C8:  MOVWF  x8A
....................             y1 += addy; 
017CA:  MOVF   x94,W
017CC:  ADDWF  x8B,W
017CE:  MOVWF  x8B
....................          } 
....................       } 
017D0:  INCF   x99,F
017D2:  BRA    178A
....................    } 
.................... } 
017D4:  MOVLB  0
017D6:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
017D8:  MOVLB  8
017DA:  MOVF   x82,F
017DC:  BZ    183A
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
017DE:  MOVF   x80,W
017E0:  SUBWF  x7E,W
017E2:  BC    17EE
....................       { 
....................          xmin = x1; 
017E4:  MOVFF  87E,885
....................          xmax = x2; 
017E8:  MOVFF  880,886
....................       } 
....................       else 
017EC:  BRA    17F6
....................       { 
....................          xmin = x2; 
017EE:  MOVFF  880,885
....................          xmax = x1; 
017F2:  MOVFF  87E,886
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
017F6:  MOVF   x81,W
017F8:  SUBWF  x7F,W
017FA:  BC    1806
....................       { 
....................          ymin = y1; 
017FC:  MOVFF  87F,887
....................          ymax = y2; 
01800:  MOVFF  881,888
....................       } 
....................       else 
01804:  BRA    180E
....................       { 
....................          ymin = y2; 
01806:  MOVFF  881,887
....................          ymax = y1; 
0180A:  MOVFF  87F,888
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
0180E:  MOVF   x85,W
01810:  SUBWF  x86,W
01812:  BNC   1838
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
01814:  MOVFF  887,884
01818:  MOVF   x84,W
0181A:  SUBWF  x88,W
0181C:  BNC   1834
....................          { 
....................             glcd_pixel(xmin, i, color); 
0181E:  MOVFF  885,89A
01822:  MOVFF  884,89B
01826:  MOVFF  883,89C
0182A:  MOVLB  0
0182C:  RCALL  15DE
....................          } 
0182E:  MOVLB  8
01830:  INCF   x84,F
01832:  BRA    1818
....................       } 
01834:  INCF   x85,F
01836:  BRA    180E
....................    } 
....................    else 
01838:  BRA    1896
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
0183A:  MOVFF  87E,88A
0183E:  MOVFF  87F,88B
01842:  MOVFF  880,88C
01846:  MOVFF  87F,88D
0184A:  MOVFF  883,88E
0184E:  MOVLB  0
01850:  RCALL  169A
....................       glcd_line(x1, y2, x2, y2, color); 
01852:  MOVFF  87E,88A
01856:  MOVFF  881,88B
0185A:  MOVFF  880,88C
0185E:  MOVFF  881,88D
01862:  MOVFF  883,88E
01866:  RCALL  169A
....................       glcd_line(x1, y1, x1, y2, color); 
01868:  MOVFF  87E,88A
0186C:  MOVFF  87F,88B
01870:  MOVFF  87E,88C
01874:  MOVFF  881,88D
01878:  MOVFF  883,88E
0187C:  RCALL  169A
....................       glcd_line(x2, y1, x2, y2, color); 
0187E:  MOVFF  880,88A
01882:  MOVFF  87F,88B
01886:  MOVFF  880,88C
0188A:  MOVFF  881,88D
0188E:  MOVFF  883,88E
01892:  RCALL  169A
01894:  MOVLB  8
....................    } 
.................... } 
01896:  MOVLB  0
01898:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
04214:  MOVLB  8
04216:  CLRF   x83
....................    b = radius; 
04218:  MOVFF  880,884
....................    P = 1 - radius; 
0421C:  MOVLW  01
0421E:  BSF    FD8.0
04220:  SUBFWB x80,W
04222:  MOVWF  x85
....................  
....................    do 
....................    { 
....................       if(fill) 
04224:  MOVF   x81,F
04226:  BZ    42F2
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
04228:  MOVF   x83,W
0422A:  SUBWF  x7E,W
0422C:  MOVWF  x86
0422E:  MOVF   x84,W
04230:  ADDWF  x7F,W
04232:  MOVWF  x87
04234:  MOVF   x83,W
04236:  ADDWF  x7E,W
04238:  MOVWF  x88
0423A:  MOVF   x84,W
0423C:  ADDWF  x7F,W
0423E:  MOVWF  x89
04240:  MOVFF  886,88A
04244:  MOVFF  887,88B
04248:  MOVFF  888,88C
0424C:  MOVWF  x8D
0424E:  MOVFF  882,88E
04252:  MOVLB  0
04254:  CALL   169A
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
04258:  MOVLB  8
0425A:  MOVF   x83,W
0425C:  SUBWF  x7E,W
0425E:  MOVWF  x86
04260:  MOVF   x84,W
04262:  SUBWF  x7F,W
04264:  MOVWF  x87
04266:  MOVF   x83,W
04268:  ADDWF  x7E,W
0426A:  MOVWF  x88
0426C:  MOVF   x84,W
0426E:  SUBWF  x7F,W
04270:  MOVWF  x89
04272:  MOVFF  886,88A
04276:  MOVFF  887,88B
0427A:  MOVFF  888,88C
0427E:  MOVWF  x8D
04280:  MOVFF  882,88E
04284:  MOVLB  0
04286:  CALL   169A
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
0428A:  MOVLB  8
0428C:  MOVF   x84,W
0428E:  SUBWF  x7E,W
04290:  MOVWF  x86
04292:  MOVF   x83,W
04294:  ADDWF  x7F,W
04296:  MOVWF  x87
04298:  MOVF   x84,W
0429A:  ADDWF  x7E,W
0429C:  MOVWF  x88
0429E:  MOVF   x83,W
042A0:  ADDWF  x7F,W
042A2:  MOVWF  x89
042A4:  MOVFF  886,88A
042A8:  MOVFF  887,88B
042AC:  MOVFF  888,88C
042B0:  MOVWF  x8D
042B2:  MOVFF  882,88E
042B6:  MOVLB  0
042B8:  CALL   169A
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
042BC:  MOVLB  8
042BE:  MOVF   x84,W
042C0:  SUBWF  x7E,W
042C2:  MOVWF  x86
042C4:  MOVF   x83,W
042C6:  SUBWF  x7F,W
042C8:  MOVWF  x87
042CA:  MOVF   x84,W
042CC:  ADDWF  x7E,W
042CE:  MOVWF  x88
042D0:  MOVF   x83,W
042D2:  SUBWF  x7F,W
042D4:  MOVWF  x89
042D6:  MOVFF  886,88A
042DA:  MOVFF  887,88B
042DE:  MOVFF  888,88C
042E2:  MOVWF  x8D
042E4:  MOVFF  882,88E
042E8:  MOVLB  0
042EA:  CALL   169A
....................       } 
....................       else 
042EE:  BRA    43E0
042F0:  MOVLB  8
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
042F2:  MOVF   x7E,W
042F4:  ADDWF  x83,W
042F6:  MOVWF  x86
042F8:  MOVF   x7F,W
042FA:  ADDWF  x84,W
042FC:  MOVWF  x87
042FE:  MOVFF  886,89A
04302:  MOVWF  x9B
04304:  MOVFF  882,89C
04308:  MOVLB  0
0430A:  CALL   15DE
....................          glcd_pixel(b+x, a+y, color); 
0430E:  MOVLB  8
04310:  MOVF   x7E,W
04312:  ADDWF  x84,W
04314:  MOVWF  x86
04316:  MOVF   x7F,W
04318:  ADDWF  x83,W
0431A:  MOVWF  x87
0431C:  MOVFF  886,89A
04320:  MOVWF  x9B
04322:  MOVFF  882,89C
04326:  MOVLB  0
04328:  CALL   15DE
....................          glcd_pixel(x-a, b+y, color); 
0432C:  MOVLB  8
0432E:  MOVF   x83,W
04330:  SUBWF  x7E,W
04332:  MOVWF  x86
04334:  MOVF   x7F,W
04336:  ADDWF  x84,W
04338:  MOVWF  x87
0433A:  MOVFF  886,89A
0433E:  MOVWF  x9B
04340:  MOVFF  882,89C
04344:  MOVLB  0
04346:  CALL   15DE
....................          glcd_pixel(x-b, a+y, color); 
0434A:  MOVLB  8
0434C:  MOVF   x84,W
0434E:  SUBWF  x7E,W
04350:  MOVWF  x86
04352:  MOVF   x7F,W
04354:  ADDWF  x83,W
04356:  MOVWF  x87
04358:  MOVFF  886,89A
0435C:  MOVWF  x9B
0435E:  MOVFF  882,89C
04362:  MOVLB  0
04364:  CALL   15DE
....................          glcd_pixel(b+x, y-a, color); 
04368:  MOVLB  8
0436A:  MOVF   x7E,W
0436C:  ADDWF  x84,W
0436E:  MOVWF  x86
04370:  MOVF   x83,W
04372:  SUBWF  x7F,W
04374:  MOVWF  x87
04376:  MOVFF  886,89A
0437A:  MOVWF  x9B
0437C:  MOVFF  882,89C
04380:  MOVLB  0
04382:  CALL   15DE
....................          glcd_pixel(a+x, y-b, color); 
04386:  MOVLB  8
04388:  MOVF   x7E,W
0438A:  ADDWF  x83,W
0438C:  MOVWF  x86
0438E:  MOVF   x84,W
04390:  SUBWF  x7F,W
04392:  MOVWF  x87
04394:  MOVFF  886,89A
04398:  MOVWF  x9B
0439A:  MOVFF  882,89C
0439E:  MOVLB  0
043A0:  CALL   15DE
....................          glcd_pixel(x-a, y-b, color); 
043A4:  MOVLB  8
043A6:  MOVF   x83,W
043A8:  SUBWF  x7E,W
043AA:  MOVWF  x86
043AC:  MOVF   x84,W
043AE:  SUBWF  x7F,W
043B0:  MOVWF  x87
043B2:  MOVFF  886,89A
043B6:  MOVWF  x9B
043B8:  MOVFF  882,89C
043BC:  MOVLB  0
043BE:  CALL   15DE
....................          glcd_pixel(x-b, y-a, color); 
043C2:  MOVLB  8
043C4:  MOVF   x84,W
043C6:  SUBWF  x7E,W
043C8:  MOVWF  x86
043CA:  MOVF   x83,W
043CC:  SUBWF  x7F,W
043CE:  MOVWF  x87
043D0:  MOVFF  886,89A
043D4:  MOVWF  x9B
043D6:  MOVFF  882,89C
043DA:  MOVLB  0
043DC:  CALL   15DE
....................       } 
....................  
....................       if(P < 0) 
043E0:  MOVLB  8
043E2:  BTFSC  x85.7
043E4:  BRA    43E8
043E6:  BRA    4404
....................          P += 3 + 2 * a++; 
043E8:  MOVF   x83,W
043EA:  INCF   x83,F
043EC:  MOVWF  x86
043EE:  MOVLW  02
043F0:  MOVWF  x87
043F2:  MOVFF  886,888
043F6:  MOVLB  0
043F8:  RCALL  3ED8
043FA:  MOVF   01,W
043FC:  ADDLW  03
043FE:  MOVLB  8
04400:  ADDWF  x85,F
....................       else 
04402:  BRA    4426
....................          P += 5 + 2 * (a++ - b--); 
04404:  MOVF   x83,W
04406:  INCF   x83,F
04408:  MOVWF  x86
0440A:  MOVF   x84,W
0440C:  DECF   x84,F
0440E:  SUBWF  x86,W
04410:  MOVWF  x86
04412:  MOVLW  02
04414:  MOVWF  x87
04416:  MOVFF  886,888
0441A:  MOVLB  0
0441C:  RCALL  3ED8
0441E:  MOVF   01,W
04420:  ADDLW  05
04422:  MOVLB  8
04424:  ADDWF  x85,F
....................     } while(a <= b); 
04426:  MOVF   x83,W
04428:  XORLW  80
0442A:  MOVWF  00
0442C:  MOVF   x84,W
0442E:  XORLW  80
04430:  SUBWF  00,W
04432:  BTFSC  FD8.2
04434:  BRA    4224
04436:  BTFSS  FD8.0
04438:  BRA    4224
.................... } 
0443A:  MOVLB  0
0443C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
0189A:  MOVFF  881,03
0189E:  MOVLB  8
018A0:  MOVFF  880,FE9
018A4:  MOVFF  881,FEA
018A8:  MOVF   FEF,F
018AA:  BTFSC  FD8.2
018AC:  BRA    1A4E
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
018AE:  MOVFF  881,03
018B2:  MOVFF  880,FE9
018B6:  MOVFF  881,FEA
018BA:  MOVF   FEF,W
018BC:  SUBLW  52
018BE:  BNC   190E
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
018C0:  MOVFF  881,03
018C4:  MOVFF  880,FE9
018C8:  MOVFF  881,FEA
018CC:  MOVLW  20
018CE:  SUBWF  FEF,W
018D0:  MULLW  05
018D2:  MOVF   FF3,W
018D4:  CLRF   03
018D6:  MOVWF  x8D
018D8:  MOVLW  08
018DA:  MOVWF  FEA
018DC:  MOVLW  88
018DE:  MOVWF  FE9
018E0:  CLRF   x91
018E2:  MOVFF  88D,890
018E6:  MOVFF  FF2,88E
018EA:  BCF    FF2.7
018EC:  MOVLW  05
018EE:  MOVWF  01
018F0:  CLRF   FF7
018F2:  MOVF   x8D,W
018F4:  MOVLB  0
018F6:  CALL   009E
018FA:  TBLRD*-
018FC:  TBLRD*+
018FE:  MOVFF  FF5,FEE
01902:  DECFSZ 01,F
01904:  BRA    18FC
01906:  MOVLB  8
01908:  BTFSC  x8E.7
0190A:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
0190C:  BRA    1978
0190E:  MOVFF  881,03
01912:  MOVFF  880,FE9
01916:  MOVFF  881,FEA
0191A:  MOVF   FEF,W
0191C:  SUBLW  7E
0191E:  BNC   196E
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
01920:  MOVFF  881,03
01924:  MOVFF  880,FE9
01928:  MOVFF  881,FEA
0192C:  MOVLW  53
0192E:  SUBWF  FEF,W
01930:  MULLW  05
01932:  MOVF   FF3,W
01934:  CLRF   03
01936:  MOVWF  x8D
01938:  MOVLW  08
0193A:  MOVWF  FEA
0193C:  MOVLW  88
0193E:  MOVWF  FE9
01940:  CLRF   x91
01942:  MOVFF  88D,890
01946:  MOVFF  FF2,88E
0194A:  BCF    FF2.7
0194C:  MOVLW  05
0194E:  MOVWF  01
01950:  CLRF   FF7
01952:  MOVF   x8D,W
01954:  MOVLB  0
01956:  CALL   01BC
0195A:  TBLRD*-
0195C:  TBLRD*+
0195E:  MOVFF  FF5,FEE
01962:  DECFSZ 01,F
01964:  BRA    195C
01966:  MOVLB  8
01968:  BTFSC  x8E.7
0196A:  BSF    FF2.7
....................       else 
0196C:  BRA    1978
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
0196E:  CLRF   x88
01970:  CLRF   x89
01972:  CLRF   x8A
01974:  CLRF   x8B
01976:  CLRF   x8C
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
01978:  MOVFF  881,03
0197C:  MOVF   x80,W
0197E:  MOVWF  FE9
01980:  MOVFF  03,FEA
01984:  MOVF   FEF,W
01986:  XORLW  0A
01988:  MOVLB  0
0198A:  BZ    1992
0198C:  XORLW  07
0198E:  BZ    19A2
01990:  BRA    19A8
....................          case '\n': 
....................             y += 7*size + 1; 
01992:  MOVLB  8
01994:  MOVF   x82,W
01996:  MULLW  07
01998:  MOVF   FF3,W
0199A:  ADDLW  01
0199C:  ADDWF  x7F,F
....................             continue; 
0199E:  BRA    1A40
019A0:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
019A2:  MOVLB  8
019A4:  CLRF   x7E
....................             continue; 
019A6:  BRA    1A40
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
019A8:  MOVLB  8
019AA:  MOVF   x82,W
019AC:  MULLW  05
019AE:  MOVF   FF3,W
019B0:  ADDWF  x7E,W
019B2:  SUBLW  7F
019B4:  BC    19C2
....................       { 
....................          x = 0;                           // Set x at far left position 
019B6:  CLRF   x7E
....................          y += 7*size + 1;                 // Set y at next position down 
019B8:  MOVF   x82,W
019BA:  MULLW  07
019BC:  MOVF   FF3,W
019BE:  ADDLW  01
019C0:  ADDWF  x7F,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
019C2:  CLRF   x84
019C4:  MOVF   x84,W
019C6:  SUBLW  04
019C8:  BNC   1A40
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
019CA:  CLRF   x85
019CC:  MOVF   x85,W
019CE:  SUBLW  06
019D0:  BNC   1A38
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
019D2:  CLRF   03
019D4:  MOVF   x84,W
019D6:  ADDLW  88
019D8:  MOVWF  FE9
019DA:  MOVLW  08
019DC:  ADDWFC 03,W
019DE:  MOVWF  FEA
019E0:  MOVFF  FEF,88D
019E4:  MOVFF  88D,00
019E8:  MOVF   x85,W
019EA:  MOVWF  01
019EC:  BZ    19F6
019EE:  BCF    FD8.0
019F0:  RRCF   00,F
019F2:  DECFSZ 01,F
019F4:  BRA    19EE
019F6:  BTFSS  00.0
019F8:  BRA    1A34
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
019FA:  CLRF   x86
019FC:  MOVF   x82,W
019FE:  SUBWF  x86,W
01A00:  BC    1A34
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
01A02:  CLRF   x87
01A04:  MOVF   x82,W
01A06:  SUBWF  x87,W
01A08:  BC    1A30
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
01A0A:  MOVF   x87,W
01A0C:  ADDWF  x7E,W
01A0E:  MOVWF  x8D
01A10:  MOVF   x85,W
01A12:  MULWF  x82
01A14:  MOVF   FF3,W
01A16:  ADDWF  x7F,W
01A18:  ADDWF  x86,W
01A1A:  MOVWF  x8E
01A1C:  MOVFF  88D,89A
01A20:  MOVWF  x9B
01A22:  MOVFF  883,89C
01A26:  MOVLB  0
01A28:  RCALL  15DE
....................                   } 
01A2A:  MOVLB  8
01A2C:  INCF   x87,F
01A2E:  BRA    1A04
....................                } 
01A30:  INCF   x86,F
01A32:  BRA    19FC
....................             } 
....................          } 
01A34:  INCF   x85,F
01A36:  BRA    19CC
....................       } 
01A38:  INCF   x84,F
01A3A:  MOVF   x82,W
01A3C:  ADDWF  x7E,F
01A3E:  BRA    19C4
....................    } 
01A40:  INCF   x80,F
01A42:  BTFSC  FD8.2
01A44:  INCF   x81,F
01A46:  INCF   x7E,F
01A48:  MOVLB  0
01A4A:  BRA    189A
01A4C:  MOVLB  8
.................... } 
01A4E:  MOVLB  0
01A50:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
.................... #include <MATH.h> 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2008 Custom Computer Services            //// 
.................... //// This source code may only be used by licensed users of the CCS C   //// 
.................... //// compiler.  This source code may only be distributed to other       //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction  //// 
.................... //// or distribution is permitted without written permission.           //// 
.................... //// Derivative programs created using this software in object code     //// 
.................... //// form are not restricted in any way.                                //// 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... ////                                                                    //// 
.................... //// History:                                                           //// 
.................... ////  * 9/20/2001 :  Improvments are made to sin/cos code.              //// 
.................... ////                 The code now is small, much faster,                //// 
.................... ////                 and more accurate.                                 //// 
.................... ////  * 2/21/2007 :  Compiler handles & operator differently and does 
.................... ////                 not return generic (int8 *) so type cast is done   //// 
.................... ////                                                                    //// 
.................... //////////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifndef MATH_H 
.................... #define MATH_H 
....................  
.................... #ifdef PI 
.................... #undef  PI 
.................... #endif 
.................... #define PI     3.1415926535897932 
....................  
....................  
.................... #define SQRT2  1.4142135623730950 
....................  
.................... //float const ps[4] = {5.9304945, 21.125224, 8.9403076, 0.29730279}; 
.................... //float const qs[4] = {1.0000000, 15.035723, 17.764134, 2.4934718}; 
....................  
.................... ///////////////////////////// Round Functions ////////////////////////////// 
....................  
.................... float32 CEIL_FLOOR(float32 x, unsigned int8 n) 
.................... { 
....................    float32 y, res; 
....................    unsigned int16 l; 
....................    int1 s; 
....................  
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y <= 32768.0) 
....................   res = (float32)(unsigned int16)y; 
....................  
....................  else if (y < 10000000.0) 
....................    { 
....................   l = (unsigned int16)(y/32768.0); 
....................       y = 32768.0*(y/32768.0 - (float32)l); 
....................   res = 32768.0*(float32)l; 
....................   res += (float32)(unsigned int16)y; 
....................  } 
....................  
....................  else 
....................   res = y; 
....................  
....................  y = y - (float32)(unsigned int16)y; 
....................  
....................  if (s) 
....................   res = -res; 
....................  
....................  if (y != 0) 
....................  { 
....................   if (s == 1 && n == 0) 
....................    res -= 1.0; 
....................  
....................   if (s == 0 && n == 1) 
....................    res += 1.0; 
....................  } 
....................  if (x == 0) 
....................     res = 0; 
....................  
....................  return (res); 
.................... } 
....................  
.................... // Overloaded Functions to take care for new Data types in PCD 
.................... // Overloaded function CEIL_FLOOR() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 CEIL_FLOOR(float48 x, unsigned int8 n) 
.................... { 
....................    float48 y, res; 
....................    unsigned int16 l; 
....................    int1 s; 
....................  
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y <= 32768.0) 
....................   res = (float48)(unsigned int16)y; 
....................  
....................  else if (y < 10000000.0) 
....................    { 
....................   l = (unsigned int16)(y/32768.0); 
....................       y = 32768.0*(y/32768.0 - (float48)l); 
....................   res = 32768.0*(float32)l; 
....................   res += (float48)(unsigned int16)y; 
....................  } 
....................  
....................  else 
....................   res = y; 
....................  
....................  y = y - (float48)(unsigned int16)y; 
....................  
....................  if (s) 
....................   res = -res; 
....................  
....................  if (y != 0) 
....................  { 
....................   if (s == 1 && n == 0) 
....................    res -= 1.0; 
....................  
....................   if (s == 0 && n == 1) 
....................    res += 1.0; 
....................  } 
....................  if (x == 0) 
....................     res = 0; 
....................  
....................  return (res); 
.................... } 
....................  
....................  
.................... // Overloaded function CEIL_FLOOR() for data type - Float64 
.................... float64 CEIL_FLOOR(float64 x, unsigned int8 n) 
.................... { 
....................    float64 y, res; 
....................    unsigned int16 l; 
....................    int1 s; 
....................  
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y <= 32768.0) 
....................   res = (float64)(unsigned int16)y; 
....................  
....................  else if (y < 10000000.0) 
....................    { 
....................   l = (unsigned int16)(y/32768.0); 
....................       y = 32768.0*(y/32768.0 - (float64)l); 
....................   res = 32768.0*(float64)l; 
....................   res += (float64)(unsigned int16)y; 
....................  } 
....................  
....................  else 
....................   res = y; 
....................  
....................  y = y - (float64)(unsigned int16)y; 
....................  
....................  if (s) 
....................   res = -res; 
....................  
....................  if (y != 0) 
....................  { 
....................   if (s == 1 && n == 0) 
....................    res -= 1.0; 
....................  
....................   if (s == 0 && n == 1) 
....................    res += 1.0; 
....................  } 
....................  if (x == 0) 
....................     res = 0; 
....................  
....................  return (res); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float floor(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : rounds down the number x. 
.................... // Date : N/A 
.................... // 
.................... float32 floor(float32 x) 
.................... { 
....................    return CEIL_FLOOR(x, 0); 
.................... } 
.................... // Following 2 functions are overloaded functions of floor() for PCD 
.................... // Overloaded function floor() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 floor(float48 x) 
.................... { 
....................    return CEIL_FLOOR(x, 0); 
.................... } 
....................  
.................... // Overloaded function floor() for data type - Float64 
.................... float64 floor(float64 x) 
.................... { 
....................    return CEIL_FLOOR(x, 0); 
.................... } 
.................... #endif 
....................  
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float ceil(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : rounds up the number x. 
.................... // Date : N/A 
.................... // 
.................... float32 ceil(float32 x) 
.................... { 
....................    return CEIL_FLOOR(x, 1); 
.................... } 
.................... // Following 2 functions are overloaded functions of ceil() for PCD 
.................... // Overloaded function ceil() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 ceil(float48 x) 
.................... { 
....................    return CEIL_FLOOR(x, 1); 
.................... } 
....................  
.................... // Overloaded function ceil() for data type - Float64 
.................... float64 ceil(float64 x) 
.................... { 
....................    return CEIL_FLOOR(x, 1); 
.................... } 
.................... #endif 
....................  
....................  //////////////////////////////////////////////////////////////////////////// 
.................... //   float fabs(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : Computes the absolute value of floating point number x 
.................... // Returns : returns the absolute value of x 
.................... // Date : N/A 
.................... // 
.................... #define fabs abs 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float fmod(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : Computes the floating point remainder of x/y 
.................... // Returns : returns the value of x= i*y, for some integer i such that, if y 
.................... // is non zero, the result has the same isgn of x na dmagnitude less than the 
.................... // magnitude of y. If y is zero then a domain error occurs. 
.................... // Date : N/A 
.................... // 
....................  
.................... float fmod(float32 x,float32 y) 
.................... { 
....................    float32 i; 
....................    if (y!=0.0) 
....................    { 
....................       i=(x/y < 0.0)? ceil(x/y): floor(x/y); 
....................       return(x-(i*y)); 
....................    } 
....................    else 
....................    { 
....................    #ifdef _ERRNO 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................    } 
.................... } 
.................... //Overloaded function for fmod() for PCD 
.................... // Overloaded function fmod() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 fmod(float48 x,float48 y) 
.................... { 
....................    float48 i; 
....................    if (y!=0.0) 
....................    { 
....................       i=(x/y < 0.0)? ceil(x/y): floor(x/y); 
....................       return(x-(i*y)); 
....................    } 
....................    else 
....................    { 
....................    #ifdef _ERRNO 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................    } 
.................... } 
.................... // Overloaded function fmod() for data type - Float64 
.................... float64 fmod(float64 x,float64 y) 
.................... { 
....................    float64 i; 
....................    if (y!=0.0) 
....................    { 
....................       i=(x/y < 0.0)? ceil(x/y): floor(x/y); 
....................       return(x-(i*y)); 
....................    } 
....................    else 
....................    { 
....................    #ifdef _ERRNO 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................    } 
.................... } 
.................... #endif 
.................... //////////////////// Exponential and logarithmic functions //////////////////// 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float exp(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the value (e^x) 
.................... // Date : N/A 
.................... // 
.................... #define LN2 0.6931471805599453 
....................  
.................... float const pe[6] = {0.000207455774, 0.00127100575, 0.00965065093, 
....................                      0.0554965651,  0.240227138,  0.693147172}; 
....................  
....................  
.................... float32 exp(float32 x) 
.................... { 
....................    float32 y, res, r; 
....................    #if defined(__PCD__) 
....................    int8 data1; 
....................    #endif 
....................    signed int8 n; 
....................    int1 s; 
....................    #ifdef _ERRNO 
....................    if(x > 88.722838) 
....................    { 
....................       errno=ERANGE; 
....................       return(0); 
....................    } 
....................    #endif 
....................    n = (signed int16)(x/LN2); 
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       n = -n; 
....................       y = -y; 
....................    } 
....................  
....................    res = 0.0; 
.................... #if !defined(__PCD__) 
....................    *((unsigned int8 *)(&res)) = n + 0x7F; 
.................... #endif 
....................  
.................... #if defined(__PCD__)  // Takes care of IEEE format for PCD 
....................    data1 = n+0x7F; 
....................    if(bit_test(data1,0)) 
....................    bit_set(*(((unsigned int8 *)(&res)+2)),7); 
....................    rotate_right(&data1,1); 
....................    bit_clear(data1,7); 
....................    *(((unsigned int8 *)(&res)+3)) = data1; 
.................... #endif 
....................  
....................    y = y/LN2 - (float32)n; 
....................  
....................    r = pe[0]*y + pe[1]; 
....................    r = r*y + pe[2]; 
....................    r = r*y + pe[3]; 
....................    r = r*y + pe[4]; 
....................    r = r*y + pe[5]; 
....................  
....................    res = res*(1.0 + y*r); 
....................  
....................    if (s) 
....................       res = 1.0/res; 
....................    return(res); 
.................... } 
....................  
....................  
.................... //Overloaded function for exp() for PCD 
.................... // Overloaded function exp() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 exp(float48 x) 
.................... { 
....................    float48 y, res, r; 
....................    int8 data1; 
....................    signed int8 n; 
....................    int1 s; 
....................    #ifdef _ERRNO 
....................    if(x > 88.722838) 
....................    { 
....................       errno=ERANGE; 
....................       return(0); 
....................    } 
....................    #endif 
....................    n = (signed int16)(x/LN2); 
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       n = -n; 
....................       y = -y; 
....................    } 
....................  
....................    res = 0.0; 
....................  
....................    data1 = n+0x7F; 
....................    if(bit_test(data1,0)) 
....................    bit_set(*(((unsigned int8 *)(&res)+4)),7); 
....................    rotate_right(&data1,1); 
....................    bit_clear(data1,7); 
....................    *(((unsigned int8 *)(&res)+5)) = data1; 
....................  
....................    y = y/LN2 - (float48)n; 
....................  
....................    r = pe[0]*y + pe[1]; 
....................    r = r*y + pe[2]; 
....................    r = r*y + pe[3]; 
....................    r = r*y + pe[4]; 
....................    r = r*y + pe[5]; 
....................  
....................    res = res*(1.0 + y*r); 
....................  
....................    if (s) 
....................       res = 1.0/res; 
....................    return(res); 
.................... } 
....................  
.................... // Overloaded function exp() for data type - Float64 
.................... float64 exp(float64 x) 
.................... { 
....................    float64 y, res, r; 
....................    unsigned int16 data1, data2; 
....................    unsigned int16 *p; 
....................    signed int16 n; 
....................    int1 s; 
....................    #ifdef _ERRNO 
....................    if(x > 709.7827128) 
....................    { 
....................       errno=ERANGE; 
....................       return(0); 
....................    } 
....................    #endif 
....................    n = (signed int16)(x/LN2); 
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       n = -n; 
....................       y = -y; 
....................    } 
....................  
....................    res = 0.0; 
....................  
.................... #if !defined(__PCD__) 
....................    *((unsigned int16 *)(&res)) = n + 0x7F; 
.................... #endif 
....................    p= (((unsigned int16 *)(&res))+3); 
....................    data1 = *p; 
....................    data2 = *p;    
....................    data1 = n + 0x3FF; 
....................    data1 = data1 <<4; 
....................    if(bit_test(data2,15)) 
....................    bit_set(data1,15); 
....................    data2 = data2 & 0x000F; 
....................    data1 ^= data2; 
....................  
....................    *(((unsigned int16 *)(&res)+3)) = data1; 
....................  
....................  
....................    y = y/LN2 - (float64)n; 
....................  
....................    r = pe[0]*y + pe[1]; 
....................    r = r*y + pe[2]; 
....................    r = r*y + pe[3]; 
....................    r = r*y + pe[4]; 
....................    r = r*y + pe[5]; 
....................  
....................    res = res*(1.0 + y*r); 
....................  
....................    if (s) 
....................       res = 1.0/res; 
....................    return(res); 
.................... } 
....................  
.................... #ENDIF 
....................  
....................  
.................... /************************************************************/ 
....................  
.................... float32 const pl[4] = {0.45145214, -9.0558803, 26.940971, -19.860189}; 
.................... float32 const ql[4] = {1.0000000,  -8.1354259, 16.780517, -9.9300943}; 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float log(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the the natural log of x 
.................... // Date : N/A 
.................... // 
.................... float32 log(float32 x) 
.................... { 
....................    float32 y, res, r, y2; 
....................    #if defined(__PCD__) 
....................    unsigned int8  data1,data2; 
....................    #endif 
....................    signed int8 n; 
....................    #ifdef _ERRNO 
....................    if(x <0) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    if(x ==0) 
....................    { 
....................       errno=ERANGE; 
....................       return(0); 
....................    } 
....................    #endif 
....................    y = x; 
....................  
....................    if (y != 1.0) 
....................    { 
.................... #if !defined(__PCD__) 
....................     *((unsigned int8 *)(&y)) = 0x7E;  
.................... #endif 
....................  
.................... #if defined(__PCD__) // Takes care of IEEE format 
....................    data2 = *(((unsigned int8 *)(&y))+3); 
....................    *(((unsigned int8 *)(&y))+3) = 0x3F; 
....................    data1 = *(((unsigned int8 *)(&y))+2); 
....................    bit_clear(data1,7); 
....................    *(((unsigned int8 *)(&y))+2) = data1; 
....................    if(bit_test(data2,7)) 
....................    bit_set(*(((unsigned int8 *)(&y))+3),7); 
.................... #endif 
....................  
....................       y = (y - 1.0)/(y + 1.0); 
....................  
....................       y2=y*y; 
....................  
....................       res = pl[0]*y2 + pl[1]; 
....................       res = res*y2 + pl[2]; 
....................       res = res*y2 + pl[3]; 
....................  
....................       r = ql[0]*y2 + ql[1]; 
....................       r = r*y2 + ql[2]; 
....................       r = r*y2 + ql[3]; 
....................  
....................       res = y*res/r; 
.................... #if !defined(__PCD__) 
....................       n = *((unsigned int8 *)(&x)) - 0x7E; 
.................... #endif 
.................... #if defined(__PCD__)  
....................     data1 = *(((unsigned int8 *)(&x)+3)); 
....................     rotate_left(&data1,1); 
....................     data2 = *(((unsigned int8 *)(&x)+2)); 
....................     if(bit_test (data2,7)) 
....................       bit_set(data1,0); 
....................     n = data1 - 0x7E; 
.................... #endif 
....................  
....................       if (n<0)  
....................          r = -(float32)-n; 
....................       else 
....................          r = (float32)n; 
....................  
....................       res += r*LN2; 
....................    } 
....................  
....................    else 
....................       res = 0.0; 
....................  
....................    return(res); 
.................... } 
....................  
.................... //Overloaded function for log() for PCD 
.................... // Overloaded function log() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 log(float48 x) 
.................... { 
....................    float48 y, res, r, y2; 
....................    unsigned int8  data1,data2; 
....................    signed int8 n; 
....................    #ifdef _ERRNO 
....................    if(x <0) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    if(x ==0) 
....................    { 
....................       errno=ERANGE; 
....................       return(0); 
....................    } 
....................    #endif 
....................    y = x; 
....................  
....................    if (y != 1.0) 
....................    { 
....................     
....................    #if !defined(__PCD__) 
....................        *((unsigned int8 *)(&y)) = 0x7E;  
....................    #endif 
....................       data2 = *(((unsigned int8 *)(&y))+5); 
....................       *(((unsigned int8 *)(&y))+5) = 0x3F; 
....................       data1 = *(((unsigned int8 *)(&y))+4); 
....................       bit_clear(data1,7); 
....................       *(((unsigned int8 *)(&y))+4) = data1; 
....................    
....................       if(bit_test(data2,7)) 
....................          bit_set(*(((unsigned int8 *)(&y))+4),7); 
....................       y = (y - 1.0)/(y + 1.0); 
....................  
....................       y2=y*y; 
....................  
....................       res = pl[0]*y2 + pl[1]; 
....................       res = res*y2 + pl[2]; 
....................       res = res*y2 + pl[3]; 
....................  
....................       r = ql[0]*y2 + ql[1]; 
....................       r = r*y2 + ql[2]; 
....................       r = r*y2 + ql[3]; 
....................  
....................       res = y*res/r; 
....................  
....................     data1 = *(((unsigned int8 *)(&x)+5)); 
....................     rotate_left(&data1,1); 
....................     data2 = *(((unsigned int8 *)(&x)+4)); 
....................     if(bit_test (data2,7)) 
....................        bit_set(data1,0); 
....................       
....................     n = data1 - 0x7E; 
....................  
....................       if (n<0) 
....................          r = -(float48)-n; 
....................       else 
....................          r = (float48)n; 
....................  
....................       res += r*LN2; 
....................    } 
....................  
....................    else 
....................       res = 0.0; 
....................  
....................    return(res); 
.................... } 
....................  
.................... // Overloaded function log() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float32 const pl_64[4] = {0.45145214, -9.0558803, 26.940971, -19.860189}; 
.................... float32 const ql_64[4] = {1.0000000,  -8.1354259, 16.780517, -9.9300943}; 
.................... #endif 
.................... float64 log(float64 x) 
.................... { 
....................    float64 y, res, r, y2; 
....................    unsigned int16  data1,data2; 
....................    unsigned int16 *p; 
....................    signed int16 n; 
....................    #ifdef _ERRNO 
....................    if(x <0) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    if(x ==0) 
....................    { 
....................       errno=ERANGE; 
....................       return(0); 
....................    } 
....................    #endif 
....................    y = x; 
....................  
....................    if (y != 1.0) 
....................    { 
....................    #if !defined(__PCD__) 
....................        *((unsigned int8 *)(&y)) = 0x7E;  
....................    #endif 
....................       p= (((unsigned int16 *)(&y))+3); 
....................       data1 = *p; 
....................       data2 = *p; 
....................       data1 = 0x3FE; 
....................       data1 = data1 <<4; 
....................       if(bit_test (data2,15)) 
....................       bit_set(data1,15); 
....................       data2 = data2 & 0x000F; 
....................       data1 ^=data2; 
....................  
....................       *p = data1; 
....................  
....................       y = (y - 1.0)/(y + 1.0); 
....................  
....................       y2=y*y; 
....................  
....................       res = pl_64[0]*y2 + pl_64[1]; 
....................       res = res*y2 + pl_64[2]; 
....................       res = res*y2 + pl_64[3]; 
....................  
....................       r = ql_64[0]*y2 + ql_64[1]; 
....................       r = r*y2 + ql_64[2]; 
....................       r = r*y2 + ql_64[3]; 
....................  
....................       res = y*res/r; 
....................   
....................       p= (((unsigned int16 *)(&x))+3); 
....................       data1 = *p; 
....................       bit_clear(data1,15); 
....................       data1 = data1 >>4;     
....................       n = data1 - 0x3FE; 
....................  
....................  
....................       if (n<0) 
....................          r = -(float64)-n; 
....................       else 
....................          r = (float64)n; 
....................  
....................       res += r*LN2; 
....................    } 
....................  
....................    else 
....................       res = 0.0; 
....................  
....................    return(res); 
.................... } 
.................... #endif 
....................  
....................  
.................... #define LN10 2.3025850929940456 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float log10(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the the log base 10 of x 
.................... // Date : N/A 
.................... // 
.................... float32 log10(float32 x) 
.................... { 
....................    float32 r; 
....................  
....................    r = log(x); 
....................    r = r/LN10; 
....................    return(r); 
.................... } 
....................  
.................... //Overloaded functions for log10() for PCD 
.................... // Overloaded function log10() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 log10(float48 x) 
.................... { 
....................    float48 r; 
....................  
....................    r = log(x); 
....................    r = r/LN10; 
....................    return(r); 
.................... } 
....................  
.................... // Overloaded function log10() for data type - Float64 
.................... float64 log10(float64 x) 
.................... { 
....................    float64 r; 
....................  
....................    r = log(x); 
....................    r = r/LN10; 
....................    return(r); 
.................... } 
.................... #endif 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float modf(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description :breaks the argument value int integral and fractional parts, 
.................... // ach of which have the same sign as the argument.  It stores the integral part 
.................... // as a float in the object pointed to by the iptr 
.................... // Returns : returns the signed fractional part of value. 
.................... // Date : N/A 
.................... // 
....................  
.................... float32 modf(float32 value,float32 *iptr) 
.................... { 
....................    *iptr=(value < 0.0)? ceil(value): floor(value); 
....................    return(value - *iptr); 
.................... } 
.................... //Overloaded functions for modf() for PCD 
.................... // Overloaded function modf() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 modf(float48 value,float48 *iptr) 
.................... { 
....................    *iptr=(value < 0.0)? ceil(value): floor(value); 
....................    return(value - *iptr); 
.................... } 
.................... // Overloaded function modf() for data type - Float64 
.................... float64 modf(float64 value,float64 *iptr) 
.................... { 
....................    *iptr=(value < 0.0)? ceil(value): floor(value); 
....................    return(value - *iptr); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float pwr(float x,float y) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the value (x^y) 
.................... // Date : N/A 
.................... // Note : 0 is returned when the function will generate an imaginary number 
.................... // 
.................... float32 pwr(float32 x,float32 y) 
.................... { 
....................    if(0 > x && fmod(y, 1) == 0) { 
....................       if(fmod(y, 2) == 0) { 
....................          return (exp(log(-x) * y)); 
....................       } else { 
....................          return (-exp(log(-x) * y)); 
....................       } 
....................    } else if(0 > x && fmod(y, 1) != 0) { 
....................       return 0; 
....................    } else { 
....................       if(x != 0 || 0 >= y) { 
....................          return (exp(log(x) * y)); 
....................       } 
....................    } 
.................... } 
.................... //Overloaded functions for pwr() for PCD 
.................... // Overloaded function pwr() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 pwr(float48 x,float48 y) 
.................... { 
....................    if(0 > x && fmod(y, 1) == 0) { 
....................       if(fmod(y, 2) == 0) { 
....................          return (exp(log(-x) * y)); 
....................       } else { 
....................          return (-exp(log(-x) * y)); 
....................       } 
....................    } else if(0 > x && fmod(y, 1) != 0) { 
....................       return 0; 
....................    } else { 
....................       if(x != 0 || 0 >= y) { 
....................          return (exp(log(x) * y)); 
....................       } 
....................    } 
.................... } 
.................... // Overloaded function pwr() for data type - Float64 
.................... float64 pwr(float64 x,float64 y) 
.................... { 
....................    if(0 > x && fmod(y, 1) == 0) { 
....................       if(fmod(y, 2) == 0) { 
....................          return (exp(log(-x) * y)); 
....................       } else { 
....................          return (-exp(log(-x) * y)); 
....................       } 
....................    } else if(0 > x && fmod(y, 1) != 0) { 
....................       return 0; 
....................    } else { 
....................       if(x != 0 || 0 >= y) { 
....................          return (exp(log(x) * y)); 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
.................... //////////////////// Power functions //////////////////// 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float pow(float x,float y) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the value (x^y) 
.................... // Date : N/A 
.................... // Note : 0 is returned when the function will generate an imaginary number 
.................... // 
.................... float32 pow(float32 x,float32 y) 
.................... { 
....................    if(0 > x && fmod(y, 1) == 0) { 
....................       if(fmod(y, 2) == 0) { 
....................          return (exp(log(-x) * y)); 
....................       } else { 
....................          return (-exp(log(-x) * y)); 
....................       } 
....................    } else if(0 > x && fmod(y, 1) != 0) { 
....................       return 0; 
....................    } else { 
....................       if(x != 0 || 0 >= y) { 
....................          return (exp(log(x) * y)); 
....................       } 
....................    } 
.................... } 
.................... //Overloaded functions for pow() for PCD 
.................... // Overloaded function for pow() data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 pow(float48 x,float48 y) 
.................... { 
....................    if(0 > x && fmod(y, 1) == 0) { 
....................       if(fmod(y, 2) == 0) { 
....................          return (exp(log(-x) * y)); 
....................       } else { 
....................          return (-exp(log(-x) * y)); 
....................       } 
....................    } else if(0 > x && fmod(y, 1) != 0) { 
....................       return 0; 
....................    } else { 
....................       if(x != 0 || 0 >= y) { 
....................          return (exp(log(x) * y)); 
....................       } 
....................    } 
.................... } 
....................  
.................... // Overloaded function pow() for data type - Float64 
.................... float64 pow(float64 x,float64 y) 
.................... { 
....................    if(0 > x && fmod(y, 1) == 0) { 
....................       if(fmod(y, 2) == 0) { 
....................          return (exp(log(-x) * y)); 
....................       } else { 
....................          return (-exp(log(-x) * y)); 
....................       } 
....................    } else if(0 > x && fmod(y, 1) != 0) { 
....................       return 0; 
....................    } else { 
....................       if(x != 0 || 0 >= y) { 
....................          return (exp(log(x) * y)); 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float sqrt(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the square root of x 
.................... // Date : N/A 
.................... // 
.................... float32 sqrt(float32 x) 
.................... { 
....................    float32 y, res; 
....................    #if defined(__PCD__) 
....................    unsigned int16 data1,data2; 
....................    #endif 
....................    BYTE *p; 
....................  
....................    #ifdef _ERRNO 
....................    if(x < 0) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................  
....................    if( x<=0.0) 
....................       return(0.0); 
....................  
....................    y=x; 
....................     
....................    #if !defined(__PCD__) 
....................     p=&y; 
....................    (*p)=(BYTE)((((unsigned int16)(*p)) + 127) >> 1); 
....................    #endif 
....................     
....................    #if defined(__PCD__) 
....................     p = (((unsigned int8 *)(&y))+3); 
....................     data1 = *(((unsigned int8 *)(&y))+3); 
....................     data2 = *(((unsigned int8 *)(&y))+2); 
....................     rotate_left(&data1,1);     
....................     if(bit_test(data2,7))     
....................     bit_set(data1,0);     
....................     data1 = ((data1+127) >>1); 
....................     bit_clear(data2,7); 
....................     if(bit_test(data1,0)) 
....................     bit_set(data2,7); 
....................     data1 = data1 >>1; 
....................     *(((unsigned int8 *)(&y))+3) = data1; 
....................     *(((unsigned int8 *)(&y))+2) = data2; 
....................      
....................   #endif 
....................  
....................    do { 
....................       res=y; 
....................       y+=(x/y); 
....................  
....................       #if !defined(__PCD__) 
....................      (*p)--; 
....................    #endif 
....................     
....................    #if defined(__PCD__) 
....................     data1 = *(((unsigned int8 *)(&y))+3); 
....................     data2 = *(((unsigned int8 *)(&y))+2); 
....................     rotate_left(&data1,1); 
....................     if(bit_test(data2,7)) 
....................     bit_set(data1,0);     
....................     data1--; 
....................     bit_clear(data2,7); 
....................     if(bit_test(data1,0)) 
....................     bit_set(data2,7); 
....................     data1 = data1 >>1; 
....................     *(((unsigned int8 *)(&y))+3) = data1; 
....................     *(((unsigned int8 *)(&y))+2) = data2; 
....................      
....................   #endif 
....................    } while(res != y); 
....................  
....................    return(res); 
.................... } 
.................... //Overloaded functions for sqrt() for PCD 
.................... // Overloaded function sqrt() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 sqrt(float48 x) 
.................... { 
....................    float48 y, res; 
....................    unsigned int16 data1,data2; 
....................    BYTE *p; 
....................  
....................    #ifdef _ERRNO 
....................    if(x < 0) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................  
....................    if( x<=0.0) 
....................       return(0.0); 
....................  
....................    y=x; 
....................     
....................    #if !defined(__PCD__) 
....................     p=&y; 
....................    (*p)=(BYTE)((((unsigned int16)(*p)) + 127) >> 1); 
....................    #endif 
....................     
....................    #if defined(__PCD__) 
....................     p = (((unsigned int8 *)(&y))+5); 
....................     data1 = *(((unsigned int8 *)(&y))+5); 
....................     data2 = *(((unsigned int8 *)(&y))+4); 
....................     rotate_left(&data1,1); 
....................     if(bit_test(data2,7)) 
....................     bit_set(data1,0);     
....................     data1 = ((data1+127) >>1); 
....................     bit_clear(data2,7); 
....................     if(bit_test(data1,0)) 
....................     bit_set(data2,7); 
....................     data1 = data1 >>1; 
....................     *(((unsigned int8 *)(&y))+5) = data1; 
....................     *(((unsigned int8 *)(&y))+4) = data2; 
....................      
....................   #endif 
....................  
....................    do { 
....................       res=y; 
....................       y+=(x/y); 
....................  
....................       #if !defined(__PCD__) 
....................      (*p)--; 
....................    #endif 
....................     
....................     data1 = *(((unsigned int8 *)(&y))+5); 
....................     data2 = *(((unsigned int8 *)(&y))+4); 
....................     rotate_left(&data1,1); 
....................     if(bit_test(data2,7)) 
....................     bit_set(data1,0);     
....................     data1--; 
....................     bit_clear(data2,7); 
....................     if(bit_test(data1,0)) 
....................     bit_set(data2,7); 
....................     data1 = data1 >>1; 
....................     *(((unsigned int8 *)(&y))+5) = data1; 
....................     *(((unsigned int8 *)(&y))+4) = data2; 
....................      
....................    } while(res != y); 
....................  
....................    return(res); 
.................... } 
....................  
.................... // Overloaded function sqrt() for data type - Float64 
.................... float64 sqrt(float64 x) 
.................... { 
....................    float64 y, res; 
....................    unsigned int16 *p; 
....................    unsigned int16 temp1,temp2; 
....................  
....................    #ifdef _ERRNO 
....................    if(x < 0) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................  
....................    if( x<=0.0) 
....................       return(0.0); 
....................  
....................    y=x; 
....................    p= (((unsigned int16 *)(&y))+3); 
....................    temp1 = *p; 
....................    temp2 = *p; 
....................    bit_clear(temp1,15); 
....................    temp1 = (temp1>>4)+1023; 
....................    temp1 = temp1 >> 1; 
....................    temp1 = (temp1<<4) & 0xFFF0; 
....................    if(bit_test(temp2,15)) 
....................    bit_set(temp1,15); 
....................    temp2 = temp2 & 0x000F; 
....................    temp1 ^= temp2; 
....................     
....................    (*p) = temp1; 
....................     
....................    do { 
....................       res=y; 
....................       y+=(x/y); 
....................      temp1 = *p; 
....................      temp2 = *p; 
....................      bit_clear(temp1,15); 
....................      temp1 = (temp1>>4); 
....................      temp1--; 
....................      temp1 = (temp1<<4) & 0xFFF0; 
....................      if(bit_test(temp2,15)) 
....................      bit_set(temp1,15); 
....................      temp2 = temp2 & 0x000F; 
....................      temp1 ^= temp2; 
....................      (*p) = temp1; 
....................  
....................    } while(res != y); 
....................  
....................    return(res); 
.................... } 
.................... #endif 
....................  
.................... ////////////////////////////// Trig Functions ////////////////////////////// 
.................... #ifdef PI_DIV_BY_TWO 
.................... #undef PI_DIV_BY_TWO 
.................... #endif 
.................... #define PI_DIV_BY_TWO   1.5707963267948966 
.................... #ifdef TWOBYPI 
.................... #undef TWOBYPI 
.................... #define TWOBYPI          0.6366197723675813 
.................... #endif 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float cos(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the cosine value of the angle x, which is in radian 
.................... // Date : 9/20/2001 
.................... // 
.................... float32 cos(float32 x) 
.................... { 
....................    float32 y, t, t2 = 1.0; 
....................    unsigned int8 quad, i; 
....................    float32 frac; 
....................    float32 p[6] = {                    //by the series definition for cosine 
....................       -0.5,                            // sum ( ( (-1)^n * x^2n )/(2n)! ) 
....................        0.04166666666667, 
....................       -0.00138888888889, 
....................        0.00002480158730, 
....................       -0.00000027557319, 
....................        0.00000000208767, 
....................       //-0.00000000001147, 
....................       // 0.00000000000005 
....................    }; 
....................  
....................    if (x < 0) x = -x;                  // absolute value of input 
....................  
....................    quad = (unsigned int8)(x / PI_DIV_BY_TWO);    // quadrant 
....................    frac = (x / PI_DIV_BY_TWO) - quad;  // fractional part of input 
....................    quad = quad % 4;                    // quadrant (0 to 3) 
....................  
....................    if (quad == 0 || quad == 2) 
....................       t = frac * PI_DIV_BY_TWO; 
....................    else if (quad == 1) 
....................       t = (1-frac) * PI_DIV_BY_TWO; 
....................    else // should be 3 
....................       t = (frac-1) * PI_DIV_BY_TWO; 
....................  
....................    y = 1.0; 
....................    t = t * t; 
....................    for (i = 0; i <= 5; i++) 
....................    { 
....................       t2 = t2 * t; 
....................       y = y + p[i] * t2; 
....................    } 
....................  
....................    if (quad == 2 || quad == 1) 
....................       y = -y;  // correct sign 
....................  
....................    return (y); 
.................... } 
....................  
....................  
.................... //Overloaded functions for cos() for PCD 
.................... // Overloaded function cos() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 cos(float48 x) 
.................... { 
....................    float48 y, t, t2 = 1.0; 
....................    unsigned int8 quad, i; 
....................    float48 frac; 
....................    float48 p[6] = {                    //by the series definition for cosine 
....................       -0.5,                            // sum ( ( (-1)^n * x^2n )/(2n)! ) 
....................        0.04166666666667, 
....................       -0.00138888888889, 
....................        0.00002480158730, 
....................       -0.00000027557319, 
....................        0.00000000208767, 
....................       //-0.00000000001147, 
....................       // 0.00000000000005 
....................    }; 
....................  
....................    if (x < 0) x = -x;                  // absolute value of input 
....................  
....................    quad = (unsigned int8)(x / PI_DIV_BY_TWO);    // quadrant 
....................    frac = (x / PI_DIV_BY_TWO) - quad;  // fractional part of input 
....................    quad = quad % 4;                    // quadrant (0 to 3) 
....................  
....................    if (quad == 0 || quad == 2) 
....................       t = frac * PI_DIV_BY_TWO; 
....................    else if (quad == 1) 
....................       t = (1-frac) * PI_DIV_BY_TWO; 
....................    else // should be 3 
....................       t = (frac-1) * PI_DIV_BY_TWO; 
....................  
....................    y = 0.999999999781; 
....................    t = t * t; 
....................    for (i = 0; i <= 5; i++) 
....................    { 
....................       t2 = t2 * t; 
....................       y = y + p[i] * t2; 
....................    } 
....................  
....................    if (quad == 2 || quad == 1) 
....................       y = -y;  // correct sign 
....................  
....................    return (y); 
.................... } 
....................  
.................... // Overloaded function cos() for data type - Float48 
.................... float64 cos(float64 x) 
.................... { 
....................    float64 y, t, t2 = 1.0; 
....................    unsigned int8 quad, i; 
....................    float64 frac; 
....................    float64 p[6] = {                    //by the series definition for cosine 
....................       -0.5,                            // sum ( ( (-1)^n * x^2n )/(2n)! ) 
....................        0.04166666666667, 
....................       -0.00138888888889, 
....................        0.00002480158730, 
....................       -0.00000027557319, 
....................        0.00000000208767, 
....................       //-0.00000000001147, 
....................       // 0.00000000000005 
....................    }; 
....................  
....................    if (x < 0) x = -x;                  // absolute value of input 
....................  
....................    quad = (unsigned int8)(x / PI_DIV_BY_TWO);    // quadrant 
....................    frac = (x / PI_DIV_BY_TWO) - quad;  // fractional part of input 
....................    quad = quad % 4;                    // quadrant (0 to 3) 
....................  
....................    if (quad == 0 || quad == 2) 
....................       t = frac * PI_DIV_BY_TWO; 
....................    else if (quad == 1) 
....................       t = (1-frac) * PI_DIV_BY_TWO; 
....................    else // should be 3 
....................       t = (frac-1) * PI_DIV_BY_TWO; 
....................  
....................    y = 0.999999999781; 
....................    t = t * t; 
....................    for (i = 0; i <= 5; i++) 
....................    { 
....................       t2 = t2 * t; 
....................       y = y + p[i] * t2; 
....................    } 
....................  
....................    if (quad == 2 || quad == 1) 
....................       y = -y;  // correct sign 
....................  
....................    return (y); 
.................... } 
....................  
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float sin(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the sine value of the angle x, which is in radian 
.................... // Date : 9/20/2001 
.................... // 
.................... float32 sin(float32 x) 
.................... { 
....................    return cos(x - PI_DIV_BY_TWO); 
.................... } 
....................  
.................... //Overloaded functions for sin() for PCD 
.................... // Overloaded function sin() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 sin(float48 x) 
.................... { 
....................    return cos(x - PI_DIV_BY_TWO); 
.................... } 
....................  
.................... // Overloaded function sin() for data type - Float48 
.................... float64 sin(float64 x) 
.................... { 
....................    return cos(x - PI_DIV_BY_TWO); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float tan(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the tangent value of the angle x, which is in radian 
.................... // Date : 9/20/2001 
.................... // 
.................... float32 tan(float32 x) 
.................... { 
....................    float32 c, s; 
....................  
....................    c = cos(x); 
....................    if (c == 0.0) 
....................       return (1.0e+36); 
....................  
....................    s = sin(x); 
....................    return(s/c); 
.................... } 
.................... //Overloaded functions for tan() for PCD 
.................... // Overloaded function tan() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 tan(float48 x) 
.................... { 
....................    float48 c, s; 
....................  
....................    c = cos(x); 
....................    if (c == 0.0) 
....................       return (1.0e+36); 
....................  
....................    s = sin(x); 
....................    return(s/c); 
.................... } 
....................  
.................... // Overloaded function tan() for data type - Float48 
.................... float64 tan(float64 x) 
.................... { 
....................    float64 c, s; 
....................  
....................    c = cos(x); 
....................    if (c == 0.0) 
....................       return (1.0e+36); 
....................  
....................    s = sin(x); 
....................    return(s/c); 
.................... } 
.................... #endif 
....................  
.................... float32 const pas[3] = {0.49559947, -4.6145309, 5.6036290}; 
.................... float32 const qas[3] = {1.0000000,  -5.5484666, 5.6036290}; 
....................  
.................... float32 ASIN_COS(float32 x, unsigned int8 n) 
.................... { 
....................    float32 y, res, r, y2; 
....................    int1 s; 
....................    #ifdef _ERRNO 
....................    if(x <-1 || x > 1) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y > 0.5) 
....................    { 
....................       y = sqrt((1.0 - y)/2.0); 
....................       n += 2; 
....................    } 
....................  
....................    y2=y*y; 
....................  
....................    res = pas[0]*y2 + pas[1]; 
....................    res = res*y2 + pas[2]; 
....................  
....................    r = qas[0]*y2 + qas[1]; 
....................    r = r*y2 + qas[2]; 
....................  
....................    res = y*res/r; 
....................  
....................    if (n & 2)     // |x| > 0.5 
....................       res = PI_DIV_BY_TWO - 2.0*res; 
....................    if (s) 
....................       res = -res; 
....................    if (n & 1)           // take arccos 
....................       res = PI_DIV_BY_TWO - res; 
....................  
....................    return(res); 
.................... } 
....................  
.................... //Overloaded functions for ASIN_COS() for PCD 
.................... // Overloaded function ASIN_COS() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 ASIN_COS(float48 x, unsigned int8 n) 
.................... { 
....................    float48 y, res, r, y2; 
....................    int1 s; 
....................    #ifdef _ERRNO 
....................    if(x <-1 || x > 1) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y > 0.5) 
....................    { 
....................       y = sqrt((1.0 - y)/2.0); 
....................       n += 2; 
....................    } 
....................  
....................    y2=y*y; 
....................  
....................    res = pas[0]*y2 + pas[1]; 
....................    res = res*y2 + pas[2]; 
....................  
....................    r = qas[0]*y2 + qas[1]; 
....................    r = r*y2 + qas[2]; 
....................  
....................    res = y*res/r; 
....................  
....................    if (n & 2)     // |x| > 0.5 
....................       res = PI_DIV_BY_TWO - 2.0*res; 
....................    if (s) 
....................       res = -res; 
....................    if (n & 1)           // take arccos 
....................       res = PI_DIV_BY_TWO - res; 
....................  
....................    return(res); 
.................... } 
....................  
.................... // Overloaded function ASIN_COS() for data type - Float64 
.................... float64 ASIN_COS(float64 x, unsigned int8 n) 
.................... { 
....................    float64 y, res, r, y2; 
....................    int1 s; 
....................    #ifdef _ERRNO 
....................    if(x <-1 || x > 1) 
....................    { 
....................       errno=EDOM; 
....................    } 
....................    #endif 
....................    s = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y > 0.5) 
....................    { 
....................       y = sqrt((1.0 - y)/2.0); 
....................       n += 2; 
....................    } 
....................  
....................    y2=y*y; 
....................  
....................    res = pas[0]*y2 + pas[1]; 
....................    res = res*y2 + pas[2]; 
....................  
....................    r = qas[0]*y2 + qas[1]; 
....................    r = r*y2 + qas[2]; 
....................  
....................    res = y*res/r; 
....................  
....................    if (n & 2)     // |x| > 0.5 
....................       res = PI_DIV_BY_TWO - 2.0*res; 
....................    if (s) 
....................       res = -res; 
....................    if (n & 1)           // take arccos 
....................       res = PI_DIV_BY_TWO - res; 
....................  
....................    return(res); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float asin(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the arcsine value of the value x. 
.................... // Date : N/A 
.................... // 
.................... float32 asin(float32 x) 
.................... { 
....................    float32 r; 
....................  
....................    r = ASIN_COS(x, 0); 
....................    return(r); 
.................... } 
.................... //Overloaded functions for asin() for PCD 
.................... // Overloaded function asin() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 asin(float48 x) 
.................... { 
....................    float48 r; 
....................  
....................    r = ASIN_COS(x, 0); 
....................    return(r); 
.................... } 
....................  
.................... // Overloaded function asin() for data type - Float64 
.................... float64 asin(float64 x) 
.................... { 
....................    float64 r; 
....................  
....................    r = ASIN_COS(x, 0); 
....................    return(r); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float acos(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the arccosine value of the value x. 
.................... // Date : N/A 
.................... // 
.................... float32 acos(float32 x) 
.................... { 
....................    float32 r; 
....................  
....................    r = ASIN_COS(x, 1); 
....................    return(r); 
.................... } 
.................... //Overloaded functions for acos() for PCD 
.................... // Overloaded function acos() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 acos(float48 x) 
.................... { 
....................    float48 r; 
....................  
....................    r = ASIN_COS(x, 1); 
....................    return(r); 
.................... } 
....................  
.................... // Overloaded function acos() for data type - Float64 
.................... float64 acos(float64 x) 
.................... { 
....................    float64 r; 
....................  
....................    r = ASIN_COS(x, 1); 
....................    return(r); 
.................... } 
.................... #endif 
....................  
.................... float32 const pat[4] = {0.17630401, 5.6710795, 22.376096, 19.818457}; 
.................... float32 const qat[4] = {1.0000000,  11.368190, 28.982246, 19.818457}; 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float atan(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : returns the arctangent value of the value x. 
.................... // Date : N/A 
.................... // 
.................... float32 atan(float32 x) 
.................... { 
....................    float32 y, res, r; 
....................    int1 s, flag; 
....................  
....................    s = 0; 
....................    flag = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y > 1.0) 
....................    { 
....................       y = 1.0/y; 
....................       flag = 1; 
....................    } 
....................  
....................    res = pat[0]*y*y + pat[1]; 
....................    res = res*y*y + pat[2]; 
....................    res = res*y*y + pat[3]; 
....................  
....................    r = qat[0]*y*y + qat[1]; 
....................    r = r*y*y + qat[2]; 
....................    r = r*y*y + qat[3]; 
....................  
....................    res = y*res/r; 
....................  
....................  
....................    if (flag)                              // for |x| > 1 
....................       res = PI_DIV_BY_TWO - res; 
....................    if (s) 
....................       res = -res; 
....................  
....................    return(res); 
.................... } 
.................... //Overloaded functions for atan() for PCD 
.................... // Overloaded function atan() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 atan(float48 x) 
.................... { 
....................    float48 y, res, r; 
....................    int1 s, flag; 
....................  
....................    s = 0; 
....................    flag = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y > 1.0) 
....................    { 
....................       y = 1.0/y; 
....................       flag = 1; 
....................    } 
....................  
....................    res = pat[0]*y*y + pat[1]; 
....................    res = res*y*y + pat[2]; 
....................    res = res*y*y + pat[3]; 
....................  
....................    r = qat[0]*y*y + qat[1]; 
....................    r = r*y*y + qat[2]; 
....................    r = r*y*y + qat[3]; 
....................  
....................    res = y*res/r; 
....................  
....................  
....................    if (flag)                              // for |x| > 1 
....................       res = PI_DIV_BY_TWO - res; 
....................    if (s) 
....................       res = -res; 
....................  
....................    return(res); 
.................... } 
....................  
.................... // Overloaded function atan() for data type - Float64 
.................... float64 atan(float64 x) 
.................... { 
....................    float64 y, res, r; 
....................    int1 s, flag; 
....................  
....................    s = 0; 
....................    flag = 0; 
....................    y = x; 
....................  
....................    if (x < 0) 
....................    { 
....................       s = 1; 
....................       y = -y; 
....................    } 
....................  
....................    if (y > 1.0) 
....................    { 
....................       y = 1.0/y; 
....................       flag = 1; 
....................    } 
....................  
....................    res = pat[0]*y*y + pat[1]; 
....................    res = res*y*y + pat[2]; 
....................    res = res*y*y + pat[3]; 
....................  
....................    r = qat[0]*y*y + qat[1]; 
....................    r = r*y*y + qat[2]; 
....................    r = r*y*y + qat[3]; 
....................  
....................    res = y*res/r; 
....................  
....................  
....................    if (flag)                              // for |x| > 1 
....................       res = PI_DIV_BY_TWO - res; 
....................    if (s) 
....................       res = -res; 
....................  
....................    return(res); 
.................... } 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////////// 
.................... //   float atan2(float y, float x) 
.................... ///////////////////////////////////////////////////////////////////////////// 
.................... // Description :computes the principal value of arc tangent of y/x, using the 
.................... // signs of both the arguments to determine the quadrant of the return value 
.................... // Returns : returns the arc tangent of y/x. 
.................... // Date : N/A 
.................... // 
....................  
.................... float32 atan2(float32 y,float32 x) 
.................... { 
....................    float32 z; 
....................    int1 sign; 
....................    unsigned int8 quad; 
....................    sign=0; 
....................    quad=0; //quadrant 
....................    quad=((y<=0.0)?((x<=0.0)?3:4):((x<0.0)?2:1)); 
....................    if(y<0.0) 
....................    { 
....................       sign=1; 
....................       y=-y; 
....................    } 
....................    if(x<0.0) 
....................    { 
....................       x=-x; 
....................    } 
....................    if (x==0.0) 
....................    { 
....................       if(y==0.0) 
....................       { 
....................       #ifdef _ERRNO 
....................       { 
....................          errno=EDOM; 
....................       } 
....................       #endif 
....................       } 
....................       else 
....................       { 
....................          if(sign) 
....................          { 
....................          return (-(PI_DIV_BY_TWO)); 
....................          } 
....................          else 
....................          { 
....................          return (PI_DIV_BY_TWO); 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       z=y/x; 
....................       switch(quad) 
....................       { 
....................          case 1: 
....................          { 
....................             return atan(z); 
....................             break; 
....................          } 
....................          case 2: 
....................          { 
.................... //            return (atan(z)+PI_DIV_BY_TWO);  //2L3122 
....................             return (PI-atan(z)); 
....................             break; 
....................          } 
....................          case 3: 
....................          { 
....................             return (atan(z)-PI); 
....................             break; 
....................          } 
....................          case 4: 
....................          { 
....................             return (-atan(z)); 
....................             break; 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
.................... //Overloaded functions for atan2() for PCD 
.................... // Overloaded function atan2() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 atan2(float48 y,float48 x) 
.................... { 
....................    float48 z; 
....................    int1 sign; 
....................    unsigned int8 quad; 
....................    sign=0; 
....................    quad=0; //quadrant 
....................    quad=((y<=0.0)?((x<=0.0)?3:4):((x<0.0)?2:1)); 
....................    if(y<0.0) 
....................    { 
....................       sign=1; 
....................       y=-y; 
....................    } 
....................    if(x<0.0) 
....................    { 
....................       x=-x; 
....................    } 
....................    if (x==0.0) 
....................    { 
....................       if(y==0.0) 
....................       { 
....................       #ifdef _ERRNO 
....................       { 
....................          errno=EDOM; 
....................       } 
....................       #endif 
....................       } 
....................       else 
....................       { 
....................          if(sign) 
....................          { 
....................          return (-(PI_DIV_BY_TWO)); 
....................          } 
....................          else 
....................          { 
....................          return (PI_DIV_BY_TWO); 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       z=y/x; 
....................       switch(quad) 
....................       { 
....................          case 1: 
....................          { 
....................             return atan(z); 
....................             break; 
....................          } 
....................          case 2: 
....................          { 
.................... //            return (atan(z)+PI_DIV_BY_TWO);  //2L3122 
....................             return (PI-atan(z)); 
....................             break; 
....................          } 
....................          case 3: 
....................          { 
....................             return (atan(z)-PI); 
....................             break; 
....................          } 
....................          case 4: 
....................          { 
....................             return (-atan(z)); 
....................             break; 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
.................... // Overloaded function atan2() for data type - Float64 
.................... float64 atan2(float64 y,float64 x) 
.................... { 
....................    float64 z; 
....................    int1 sign; 
....................    unsigned int8 quad; 
....................    sign=0; 
....................    quad=0; //quadrant 
....................    quad=((y<=0.0)?((x<=0.0)?3:4):((x<0.0)?2:1)); 
....................    if(y<0.0) 
....................    { 
....................       sign=1; 
....................       y=-y; 
....................    } 
....................    if(x<0.0) 
....................    { 
....................       x=-x; 
....................    } 
....................    if (x==0.0) 
....................    { 
....................       if(y==0.0) 
....................       { 
....................       #ifdef _ERRNO 
....................       { 
....................          errno=EDOM; 
....................       } 
....................       #endif 
....................       } 
....................       else 
....................       { 
....................          if(sign) 
....................          { 
....................          return (-(PI_DIV_BY_TWO)); 
....................          } 
....................          else 
....................          { 
....................          return (PI_DIV_BY_TWO); 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       z=y/x; 
....................       switch(quad) 
....................       { 
....................          case 1: 
....................          { 
....................             return atan(z); 
....................             break; 
....................          } 
....................          case 2: 
....................          { 
.................... //            return (atan(z)+PI_DIV_BY_TWO);  //2L3122 
....................             return (PI-atan(z)); 
....................             break; 
....................          } 
....................          case 3: 
....................          { 
....................             return (atan(z)-PI); 
....................             break; 
....................          } 
....................          case 4: 
....................          { 
....................             return (-atan(z)); 
....................             break; 
....................          } 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
.................... //////////////////// Hyperbolic functions //////////////////// 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float cosh(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : Computes the hyperbolic cosine value of x 
.................... // Returns : returns the hyperbolic cosine value of x 
.................... // Date : N/A 
.................... // 
....................  
.................... float32 cosh(float32 x) 
.................... { 
....................    return ((exp(x)+exp(-x))/2); 
.................... } 
.................... //Overloaded functions for cosh() for PCD 
.................... // Overloaded function cosh() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 cosh(float48 x) 
.................... { 
....................    return ((exp(x)+exp(-x))/2); 
.................... } 
....................  
.................... // Overloaded function cosh() for data type - Float64 
.................... float64 cosh(float64 x) 
.................... { 
....................    return ((exp(x)+exp(-x))/2); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float sinh(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : Computes the hyperbolic sine value of x 
.................... // Returns : returns the hyperbolic sine value of x 
.................... // Date : N/A 
.................... // 
....................  
.................... float32 sinh(float32 x) 
.................... { 
....................  
....................    return ((exp(x) - exp(-x))/2); 
.................... } 
.................... //Overloaded functions for sinh() for PCD 
.................... // Overloaded function sinh() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 sinh(float48 x) 
.................... { 
....................  
....................    return ((exp(x) - exp(-x))/2); 
.................... } 
....................  
.................... // Overloaded function sinh() for data type - Float48 
.................... float64 sinh(float64 x) 
.................... { 
....................  
....................    return ((exp(x) - exp(-x))/2); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float tanh(float x) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : Computes the hyperbolic tangent value of x 
.................... // Returns : returns the hyperbolic tangent value of x 
.................... // Date : N/A 
.................... // 
....................  
.................... float32 tanh(float32 x) 
.................... { 
....................    return(sinh(x)/cosh(x)); 
.................... } 
.................... //Overloaded functions for tanh() for PCD 
.................... // Overloaded function tanh() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 tanh(float48 x) 
.................... { 
....................    return(sinh(x)/cosh(x)); 
.................... } 
....................  
.................... // Overloaded function tanh() for data type - Float64 
.................... float64 tanh(float64 x) 
.................... { 
....................    return(sinh(x)/cosh(x)); 
.................... } 
.................... #endif 
....................  
.................... //////////////////////////////////////////////////////////////////////////// 
.................... //   float frexp(float x, signed int *exp) 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... // Description : breaks a floating point number into a normalized fraction and an integral 
.................... // power of 2. It stores the integer in the signed int object pointed to by exp. 
.................... // Returns : returns the value x, such that x is a double with magnitude in the interval 
.................... // [1/2,1) or zero, and value equals x times 2 raised to the power *exp.If value is zero, 
.................... // both parts of the result are zero. 
.................... // Date : N/A 
.................... // 
....................  
.................... #define LOG2 .30102999566398119521 
.................... float32 frexp(float32 x, signed int8 *exp) 
.................... { 
....................    float32 res; 
....................    int1 sign = 0; 
....................    if(x == 0.0) 
....................    { 
....................       *exp=0; 
....................       return (0.0); 
....................    } 
....................    if(x < 0.0) 
....................    { 
....................      x=-x; 
....................      sign=1; 
....................    } 
....................    if (x > 1.0) 
....................    { 
....................       *exp=(ceil(log10(x)/LOG2)); 
....................       res=x/(pow(2, *exp)); 
....................       if (res == 1) 
....................       { 
....................          *exp=*exp+1; 
....................           res=.5; 
....................       } 
....................    } 
....................    else 
....................    { 
....................       if(x < 0.5) 
....................       { 
....................          *exp=-1; 
....................          res=x*2; 
....................       } 
....................       else 
....................       { 
....................          *exp=0; 
....................           res=x; 
....................       } 
....................    } 
....................    if(sign) 
....................    { 
....................       res=-res; 
....................    } 
....................    return res; 
.................... } 
....................  
.................... //Overloaded functions for frexp() for PCD 
.................... // Overloaded function frexp() for data type - Float48 
.................... #if defined(__PCD__) 
.................... float48 frexp(float48 x, signed int8 *exp) 
.................... { 
....................    float48 res; 
....................    int1 sign = 0; 
....................    if(x == 0.0) 
....................    { 
....................       *exp=0; 
....................       return (0.0); 
....................    } 
....................    if(x < 0.0) 
....................    { 
....................      x=-x; 
....................      sign=1; 
....................    } 
....................    if (x > 1.0) 
....................    { 
....................       *exp=(ceil(log10(x)/LOG2)); 
....................       res=x/(pow(2, *exp)); 
....................       if (res == 1) 
....................       { 
....................          *exp=*exp+1; 
....................           res=.5; 
....................       } 
....................    } 
....................    else 
....................    { 
....................       if(x < 0.5) 
....................       { 
....................          *exp=-1; 
....................          res=x*2; 
....................       } 
....................       else 
....................       { 
....................          *exp=0; 
....................           res=x; 
....................       } 
....................    } 
....................    if(sign) 
....................    { 
....................       res=-res; 
....................    } 
....................    return res; 
.................... } 
....................  
.................... // Overloaded function frexp() for data type - Float64 
.................... float64 frexp(float64 x, signed int8 *exp) 
.................... { 
....................    float64 res; 
....................    int1 sign = 0; 
....................    if(x == 0.0) 
....................    { 
....................       *exp=0; 
....................       return (0.0); 
....................    } 
....................    if(x < 0.0) 
....................    { 
....................      x=-x; 
....................      sign=1; 
....................    } 
....................    if (x > 1.0) 
....................    { 
....................       *exp=(ceil(log10(x)/LOG2)); 
....................       res=x/(pow(2, *exp)); 
....................       if (res == 1) 
....................       { 
....................          *exp=*exp+1; 
....................           res=.5; 
....................       } 
....................    } 
....................    else 
....................    { 
....................       if(x < 0.5) 
....................       { 
....................          *exp=-1; 
....................          res=x*2; 
....................       } 
....................       else 
....................       { 
....................          *exp=0; 
....................           res=x; 
....................       } 
....................    } 
....................    if(sign) 
....................    { 
....................       res=-res; 
....................    } 
....................    return res; 
.................... } 
.................... #endif 
....................  
.................... ////////////////////////////////////////////////////////////////////////////// 
.................... //   float ldexp(float x, signed int *exp) 
.................... ////////////////////////////////////////////////////////////////////////////// 
.................... // Description : multiplies a floating point number by an integral power of 2. 
.................... // Returns : returns the value of x times 2 raised to the power exp. 
.................... // Date : N/A 
.................... // 
....................  
.................... float32 ldexp(float32 value, signed int8 exp) 
.................... { 
....................    return (value * pow(2,exp)); 
.................... } 
.................... //Overloaded functions for ldexp() for PCD 
.................... // Overloaded function ldexp() for data type - Float48 
....................  
.................... #if defined(__PCD__) 
.................... float48 ldexp(float48 value, signed int8 exp) 
.................... { 
....................    return (value * pow(2,exp)); 
.................... } 
.................... // Overloaded function ldexp() for data type - Float64 
.................... float64 ldexp(float64 value, signed int8 exp) 
.................... { 
....................    return (value * pow(2,exp)); 
.................... } 
.................... #endif 
....................  
.................... #endif 
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP               !input(PIN_A5) 
.................... #define   DOWN             !input(PIN_E0) 
.................... #define   RIGHT            !input(PIN_E1) 
.................... #define   LEFT             !input(PIN_E2) 
....................  
.................... #define   DOOR             input(PIN_A4) 
.................... #define   TERM             input(PIN_A3) 
....................  
.................... #define   Resistencia_on   output_bit(PIN_C0,1) 
.................... #define   Resistencia_off  output_bit(PIN_C0,0) 
.................... #define   Buzz_on          output_bit(PIN_C4,1) 
.................... #define   Buzz_off         output_bit(PIN_C4,0) 
....................  
.................... #define Pasos 16 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short flagup=0,flagdn=0,Desconectado=0,mensaje=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,Lectura2=0,tiempoup=0,tiempodn=0,Segmentos=0,Segmento=0,Modo=5; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,flag_calcula=0; 
.................... short flag_clear2=0,flag_clear3=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,Dibuja=0; 
.................... int8 y=0,tiemporeset=0,Programa=1,Control=0,n=0; 
.................... int8 Menu=0, unidad=1,i=0,j=1,Pausa=0,Pausa_ant=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,ProgramaSeleccionado=0,Alarma=10,m_int=0,m_dec=0,b_int=0,b_dec=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Tp=0,Tc=0,AlTem=20.0,b16=0; 
.................... float PendienteMinutos=0,TempeInicial=20,Tiempo=0,TiempoActual=0,PendienteActual=0,HorasActual=0,MinutosActual=0,TiempoRampa=0; 
.................... float Potencia=0.0,PotenciaEntregada=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,GananciaIn=0,Ganancia=3.0,desvio=3.0,Coeficiente=150.0,resistencia=240.0; 
.................... float Aumento=0.0,Temperatura=0.0,Pendiente=0.0,DifPendiente=0.0,Setpoint=0,Integral=0,Derivativo=0,m=0,b=0,adcSup=0,adcInf=0,Tsup=1250,Tinf=0,penMufla=50; 
.................... float TemperaturaIdeal=0,penInicial=0; 
.................... signed int16 Temperatura1[Pasos*5]; 
.................... signed int16 Horas1[Pasos*5]; 
.................... signed int16 Minutos1[Pasos*5]; 
....................  
.................... #include <Funciones.h> 
.................... //Funciones utilizadas en la Mufla 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
055A2:  MOVLB  5
055A4:  MOVF   x96,W
055A6:  MULLW  04
055A8:  MOVF   FF3,W
055AA:  CLRF   03
055AC:  ADDLW  7F
055AE:  MOVWF  FE9
055B0:  MOVLW  05
055B2:  ADDWFC 03,W
055B4:  MOVWF  FEA
055B6:  MOVFF  62A,FEF
055BA:  MOVFF  62B,FEC
055BE:  MOVFF  62C,FEC
055C2:  MOVFF  62D,FEC
....................    y++; 
055C6:  INCF   x96,F
....................    if(y>=2) 
055C8:  MOVF   x96,W
055CA:  SUBLW  01
055CC:  BTFSC  FD8.0
055CE:  BRA    5876
....................    { 
....................       y=0; 
055D0:  CLRF   x96
....................       Aumento=X[1]-X[0]; 
055D2:  BSF    FD8.1
055D4:  MOVFF  586,875
055D8:  MOVFF  585,874
055DC:  MOVFF  584,873
055E0:  MOVFF  583,872
055E4:  MOVFF  582,879
055E8:  MOVFF  581,878
055EC:  MOVFF  580,877
055F0:  MOVFF  57F,876
055F4:  MOVLB  0
055F6:  CALL   1F68
055FA:  MOVFF  03,629
055FE:  MOVFF  02,628
05602:  MOVFF  01,627
05606:  MOVFF  00,626
....................       HorasActual=(Testerilizacion[3]*10)+Testerilizacion[2]; 
0560A:  MOVFF  5E9,887
0560E:  MOVLW  0A
05610:  MOVLB  8
05612:  MOVWF  x88
05614:  MOVLB  0
05616:  CALL   3ED8
0561A:  MOVLB  5
0561C:  MOVF   xE8,W
0561E:  ADDWF  01,W
05620:  MOVLB  8
05622:  CLRF   x6B
05624:  MOVWF  x6A
05626:  BTFSC  x6A.7
05628:  DECF   x6B,F
0562A:  MOVLB  0
0562C:  CALL   3E88
05630:  MOVFF  03,5D5
05634:  MOVFF  02,5D4
05638:  MOVFF  01,5D3
0563C:  MOVFF  00,5D2
....................       MinutosActual=(Testerilizacion[1]*10)+Testerilizacion[0]; 
05640:  MOVFF  5E7,887
05644:  MOVLW  0A
05646:  MOVLB  8
05648:  MOVWF  x88
0564A:  MOVLB  0
0564C:  CALL   3ED8
05650:  MOVLB  5
05652:  MOVF   xE6,W
05654:  ADDWF  01,W
05656:  MOVLB  8
05658:  CLRF   x6B
0565A:  MOVWF  x6A
0565C:  BTFSC  x6A.7
0565E:  DECF   x6B,F
05660:  MOVLB  0
05662:  CALL   3E88
05666:  MOVFF  03,5D9
0566A:  MOVFF  02,5D8
0566E:  MOVFF  01,5D7
05672:  MOVFF  00,5D6
....................       TiempoActual=Tiempo-((HorasActual*3600)+(MinutosActual*60)+tinicio); 
05676:  MOVFF  5D5,88A
0567A:  MOVFF  5D4,889
0567E:  MOVFF  5D3,888
05682:  MOVFF  5D2,887
05686:  MOVLB  8
05688:  CLRF   x8E
0568A:  CLRF   x8D
0568C:  MOVLW  61
0568E:  MOVWF  x8C
05690:  MOVLW  8A
05692:  MOVWF  x8B
05694:  MOVLB  0
05696:  CALL   32D2
0569A:  MOVFF  00,866
0569E:  MOVFF  01,867
056A2:  MOVFF  02,868
056A6:  MOVFF  03,869
056AA:  MOVFF  5D9,88A
056AE:  MOVFF  5D8,889
056B2:  MOVFF  5D7,888
056B6:  MOVFF  5D6,887
056BA:  MOVLB  8
056BC:  CLRF   x8E
056BE:  CLRF   x8D
056C0:  MOVLW  70
056C2:  MOVWF  x8C
056C4:  MOVLW  84
056C6:  MOVWF  x8B
056C8:  MOVLB  0
056CA:  CALL   32D2
056CE:  BCF    FD8.1
056D0:  MOVFF  869,875
056D4:  MOVFF  868,874
056D8:  MOVFF  867,873
056DC:  MOVFF  866,872
056E0:  MOVFF  03,879
056E4:  MOVFF  02,878
056E8:  MOVFF  01,877
056EC:  MOVFF  00,876
056F0:  CALL   1F68
056F4:  MOVFF  00,866
056F8:  MOVFF  01,867
056FC:  MOVFF  02,868
05700:  MOVFF  03,869
05704:  MOVFF  5B1,873
05708:  MOVFF  5B0,872
0570C:  CALL   1D5A
05710:  BCF    FD8.1
05712:  MOVFF  869,875
05716:  MOVFF  868,874
0571A:  MOVFF  867,873
0571E:  MOVFF  866,872
05722:  MOVFF  03,879
05726:  MOVFF  02,878
0572A:  MOVFF  01,877
0572E:  MOVFF  00,876
05732:  CALL   1F68
05736:  BSF    FD8.1
05738:  MOVFF  5C9,875
0573C:  MOVFF  5C8,874
05740:  MOVFF  5C7,873
05744:  MOVFF  5C6,872
05748:  MOVFF  03,879
0574C:  MOVFF  02,878
05750:  MOVFF  01,877
05754:  MOVFF  00,876
05758:  CALL   1F68
0575C:  MOVFF  03,5CD
05760:  MOVFF  02,5CC
05764:  MOVFF  01,5CB
05768:  MOVFF  00,5CA
....................       PendienteActual=((Setpoint-Temperatura)/TiempoActual); 
0576C:  BSF    FD8.1
0576E:  MOVFF  639,875
05772:  MOVFF  638,874
05776:  MOVFF  637,873
0577A:  MOVFF  636,872
0577E:  MOVFF  62D,879
05782:  MOVFF  62C,878
05786:  MOVFF  62B,877
0578A:  MOVFF  62A,876
0578E:  CALL   1F68
05792:  MOVFF  00,866
05796:  MOVFF  01,867
0579A:  MOVFF  02,868
0579E:  MOVFF  03,869
057A2:  MOVFF  03,86D
057A6:  MOVFF  02,86C
057AA:  MOVFF  01,86B
057AE:  MOVFF  00,86A
057B2:  MOVFF  5CD,871
057B6:  MOVFF  5CC,870
057BA:  MOVFF  5CB,86F
057BE:  MOVFF  5CA,86E
057C2:  CALL   1E0A
057C6:  MOVFF  03,5D1
057CA:  MOVFF  02,5D0
057CE:  MOVFF  01,5CF
057D2:  MOVFF  00,5CE
....................       DifPendiente=(PendienteActual*20)-Aumento; 
057D6:  MOVFF  5D1,88A
057DA:  MOVFF  5D0,889
057DE:  MOVFF  5CF,888
057E2:  MOVFF  5CE,887
057E6:  MOVLB  8
057E8:  CLRF   x8E
057EA:  CLRF   x8D
057EC:  MOVLW  20
057EE:  MOVWF  x8C
057F0:  MOVLW  83
057F2:  MOVWF  x8B
057F4:  MOVLB  0
057F6:  CALL   32D2
057FA:  MOVFF  00,866
057FE:  MOVFF  01,867
05802:  MOVFF  02,868
05806:  MOVFF  03,869
0580A:  BSF    FD8.1
0580C:  MOVFF  03,875
05810:  MOVFF  02,874
05814:  MOVFF  01,873
05818:  MOVFF  00,872
0581C:  MOVFF  629,879
05820:  MOVFF  628,878
05824:  MOVFF  627,877
05828:  MOVFF  626,876
0582C:  CALL   1F68
05830:  MOVFF  03,635
05834:  MOVFF  02,634
05838:  MOVFF  01,633
0583C:  MOVFF  00,632
....................       DifPendiente=DifPendiente*5; 
05840:  MOVFF  635,88A
05844:  MOVFF  634,889
05848:  MOVFF  633,888
0584C:  MOVFF  632,887
05850:  MOVLB  8
05852:  CLRF   x8E
05854:  CLRF   x8D
05856:  MOVLW  20
05858:  MOVWF  x8C
0585A:  MOVLW  81
0585C:  MOVWF  x8B
0585E:  MOVLB  0
05860:  CALL   32D2
05864:  MOVFF  03,635
05868:  MOVFF  02,634
0586C:  MOVFF  01,633
05870:  MOVFF  00,632
05874:  MOVLB  5
....................       //penMufla=(6000*(Aumento/20))/PotenciaEntregada; 
....................    } 
.................... } 
05876:  MOVLB  0
05878:  GOTO   58C4 (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
03258:  MOVLB  8
0325A:  RLCF   x67,W
0325C:  MOVWF  00
0325E:  RLCF   00,F
03260:  MOVLW  FC
03262:  ANDWF  00,F
03264:  MOVFF  00,01
03268:  MOVF   FC2,W
0326A:  ANDLW  C3
0326C:  IORWF  00,W
0326E:  MOVWF  FC2
03270:  MOVLW  01
03272:  MOVWF  x6E
03274:  MOVLB  0
03276:  CALL   13A4
0327A:  BSF    FC2.1
0327C:  BTFSC  FC2.1
0327E:  BRA    327C
03280:  MOVFF  FC4,873
03284:  MOVFF  FC3,872
03288:  MOVLB  0
0328A:  CALL   1D5A
0328E:  MOVFF  03,86B
03292:  MOVFF  02,86A
03296:  MOVFF  01,869
0329A:  MOVFF  00,868
0329E:  MOVFF  868,00
032A2:  MOVFF  869,01
032A6:  MOVFF  86A,02
032AA:  MOVFF  86B,03
.................... } 
032AE:  RETLW  00
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
033C8:  MOVLB  6
033CA:  CLRF   x09
033CC:  CLRF   x08
033CE:  CLRF   x07
033D0:  CLRF   x06
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%)    
033D2:  MOVLB  8
033D4:  CLRF   x67
033D6:  MOVLB  0
033D8:  RCALL  3258
033DA:  MOVFF  03,5F9
033DE:  MOVFF  02,5F8
033E2:  MOVFF  01,5F7
033E6:  MOVFF  00,5F6
....................              
....................    if(l>(media-1)) 
033EA:  MOVLW  01
033EC:  MOVLB  8
033EE:  SUBWF  x66,W
033F0:  MOVLB  5
033F2:  SUBWF  x89,W
033F4:  BZ    33FA
033F6:  BNC   33FA
....................    {l=0;} 
033F8:  CLRF   x89
....................    //promedio[l]=Temperature;l++; 
....................    promedio[l]=V0;l++; 
033FA:  MOVLB  8
033FC:  CLRF   x6B
033FE:  MOVFF  589,86A
03402:  CLRF   x6D
03404:  MOVLW  04
03406:  MOVWF  x6C
03408:  MOVLB  0
0340A:  RCALL  32B0
0340C:  MOVF   01,W
0340E:  ADDLW  17
03410:  MOVWF  FE9
03412:  MOVLW  04
03414:  ADDWFC 02,W
03416:  MOVWF  FEA
03418:  MOVFF  5F6,FEF
0341C:  MOVFF  5F7,FEC
03420:  MOVFF  5F8,FEC
03424:  MOVFF  5F9,FEC
03428:  MOVLB  5
0342A:  INCF   x89,F
....................           
....................    for(h=0;h<media;h++) 
0342C:  CLRF   x88
0342E:  MOVLB  8
03430:  MOVF   x66,W
03432:  MOVLB  5
03434:  SUBWF  x88,W
03436:  BC    34B6
....................    { 
....................       Prom+=promedio[h]; 
03438:  MOVLB  8
0343A:  CLRF   x6B
0343C:  MOVFF  588,86A
03440:  CLRF   x6D
03442:  MOVLW  04
03444:  MOVWF  x6C
03446:  MOVLB  0
03448:  RCALL  32B0
0344A:  MOVFF  02,03
0344E:  MOVF   01,W
03450:  ADDLW  17
03452:  MOVWF  FE9
03454:  MOVLW  04
03456:  ADDWFC 02,W
03458:  MOVWF  FEA
0345A:  MOVFF  FEF,00
0345E:  MOVFF  FEC,01
03462:  MOVFF  FEC,02
03466:  MOVFF  FEC,03
0346A:  MOVFF  FEA,868
0346E:  MOVFF  FE9,867
03472:  BCF    FD8.1
03474:  MOVFF  609,875
03478:  MOVFF  608,874
0347C:  MOVFF  607,873
03480:  MOVFF  606,872
03484:  MOVFF  03,879
03488:  MOVFF  02,878
0348C:  MOVFF  01,877
03490:  MOVFF  00,876
03494:  CALL   1F68
03498:  MOVFF  868,FEA
0349C:  MOVFF  867,FE9
034A0:  MOVFF  03,609
034A4:  MOVFF  02,608
034A8:  MOVFF  01,607
034AC:  MOVFF  00,606
....................    }  
034B0:  MOVLB  5
034B2:  INCF   x88,F
034B4:  BRA    342E
....................    Prom=Prom/media;    
034B6:  MOVLB  8
034B8:  CLRF   x73
034BA:  MOVFF  866,872
034BE:  MOVLB  0
034C0:  CALL   1D5A
034C4:  MOVFF  609,86D
034C8:  MOVFF  608,86C
034CC:  MOVFF  607,86B
034D0:  MOVFF  606,86A
034D4:  MOVFF  03,871
034D8:  MOVFF  02,870
034DC:  MOVFF  01,86F
034E0:  MOVFF  00,86E
034E4:  CALL   1E0A
034E8:  MOVFF  03,609
034EC:  MOVFF  02,608
034F0:  MOVFF  01,607
034F4:  MOVFF  00,606
....................    //Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................    //Temperature=(1.5275*Prom)-299.23; // Recta dada por T 0°C-1200°C y ADC Modo Real    
....................    Temperature=(m*Prom)-b; // Recta dada por T 0°C-1200°C y ADC Modo Real 
034F8:  MOVFF  645,88A
034FC:  MOVFF  644,889
03500:  MOVFF  643,888
03504:  MOVFF  642,887
03508:  MOVFF  609,88E
0350C:  MOVFF  608,88D
03510:  MOVFF  607,88C
03514:  MOVFF  606,88B
03518:  RCALL  32D2
0351A:  MOVFF  00,867
0351E:  MOVFF  01,868
03522:  MOVFF  02,869
03526:  MOVFF  03,86A
0352A:  BSF    FD8.1
0352C:  MOVFF  03,875
03530:  MOVFF  02,874
03534:  MOVFF  01,873
03538:  MOVFF  00,872
0353C:  MOVFF  649,879
03540:  MOVFF  648,878
03544:  MOVFF  647,877
03548:  MOVFF  646,876
0354C:  CALL   1F68
03550:  MOVFF  03,60D
03554:  MOVFF  02,60C
03558:  MOVFF  01,60B
0355C:  MOVFF  00,60A
....................     
....................    Temperature+=((float)Ajuste-(float)Ajusten); 
03560:  MOVLB  8
03562:  CLRF   x73
03564:  MOVFF  58A,872
03568:  MOVLB  0
0356A:  CALL   1D5A
0356E:  MOVFF  00,867
03572:  MOVFF  01,868
03576:  MOVFF  02,869
0357A:  MOVFF  03,86A
0357E:  MOVLB  8
03580:  CLRF   x73
03582:  MOVFF  58B,872
03586:  MOVLB  0
03588:  CALL   1D5A
0358C:  BSF    FD8.1
0358E:  MOVFF  86A,875
03592:  MOVFF  869,874
03596:  MOVFF  868,873
0359A:  MOVFF  867,872
0359E:  MOVFF  03,879
035A2:  MOVFF  02,878
035A6:  MOVFF  01,877
035AA:  MOVFF  00,876
035AE:  CALL   1F68
035B2:  BCF    FD8.1
035B4:  MOVFF  60D,875
035B8:  MOVFF  60C,874
035BC:  MOVFF  60B,873
035C0:  MOVFF  60A,872
035C4:  MOVFF  03,879
035C8:  MOVFF  02,878
035CC:  MOVFF  01,877
035D0:  MOVFF  00,876
035D4:  CALL   1F68
035D8:  MOVFF  03,60D
035DC:  MOVFF  02,60C
035E0:  MOVFF  01,60B
035E4:  MOVFF  00,60A
....................     
....................    //return Prom; 
....................    return Temperature; 
035E8:  MOVFF  60A,00
035EC:  MOVFF  60B,01
035F0:  MOVFF  60C,02
035F4:  MOVFF  60D,03
.................... } 
035F8:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=10) 
*
058B8:  MOVLB  5
058BA:  MOVF   x8D,W
058BC:  SUBLW  09
058BE:  BC    58C8
....................    { 
....................       ActualizaRecta(); 
058C0:  MOVLB  0
058C2:  BRA    55A2
....................       tiemporecta=0; 
058C4:  MOVLB  5
058C6:  CLRF   x8D
....................    } 
....................    
....................    if(Segmento==0){ 
058C8:  MOVF   x93,F
058CA:  BTFSS  FD8.2
058CC:  BRA    5BA2
....................       if(flag_calcula==0){ 
058CE:  BTFSC  x95.1
058D0:  BRA    5BA0
....................          Tiempo=(Horas1[ProgramaSeleccionado*Pasos]*3600)+(Minutos1[ProgramaSeleccionado*Pasos]*60);          
058D2:  MOVF   xA4,W
058D4:  MULLW  10
058D6:  MOVFF  FF3,00
058DA:  BCF    FD8.0
058DC:  RLCF   00,F
058DE:  MOVF   00,W
058E0:  CLRF   03
058E2:  ADDLW  06
058E4:  MOVWF  FE9
058E6:  MOVLW  07
058E8:  ADDWFC 03,W
058EA:  MOVWF  FEA
058EC:  MOVFF  FEC,867
058F0:  MOVF   FED,F
058F2:  MOVFF  FEF,866
058F6:  MOVFF  867,86B
058FA:  MOVFF  866,86A
058FE:  MOVLW  0E
05900:  MOVLB  8
05902:  MOVWF  x6D
05904:  MOVLW  10
05906:  MOVWF  x6C
05908:  MOVLB  0
0590A:  CALL   3E34
0590E:  MOVFF  02,867
05912:  MOVFF  01,866
05916:  MOVLB  5
05918:  MOVF   xA4,W
0591A:  MULLW  10
0591C:  MOVFF  FF3,00
05920:  BCF    FD8.0
05922:  RLCF   00,F
05924:  MOVF   00,W
05926:  CLRF   03
05928:  ADDLW  A6
0592A:  MOVWF  FE9
0592C:  MOVLW  07
0592E:  ADDWFC 03,W
05930:  MOVWF  FEA
05932:  MOVFF  FEC,869
05936:  MOVF   FED,F
05938:  MOVFF  FEF,868
0593C:  MOVFF  869,86B
05940:  MOVFF  868,86A
05944:  MOVLB  8
05946:  CLRF   x6D
05948:  MOVLW  3C
0594A:  MOVWF  x6C
0594C:  MOVLB  0
0594E:  CALL   3E34
05952:  MOVFF  02,03
05956:  MOVF   01,W
05958:  MOVLB  8
0595A:  ADDWF  x66,W
0595C:  MOVWF  01
0595E:  MOVF   x67,W
05960:  ADDWFC 03,F
05962:  MOVFF  01,86A
05966:  MOVFF  03,86B
0596A:  MOVLB  0
0596C:  CALL   3E88
05970:  MOVFF  03,5C9
05974:  MOVFF  02,5C8
05978:  MOVFF  01,5C7
0597C:  MOVFF  00,5C6
....................          Setpoint=Temperatura1[(ProgramaSeleccionado*Pasos)+Segmento]; 
05980:  MOVLB  5
05982:  MOVF   xA4,W
05984:  MULLW  10
05986:  MOVF   FF3,W
05988:  ADDWF  x93,W
0598A:  MOVWF  00
0598C:  BCF    FD8.0
0598E:  RLCF   00,F
05990:  MOVF   00,W
05992:  CLRF   03
05994:  ADDLW  66
05996:  MOVWF  FE9
05998:  MOVLW  06
0599A:  ADDWFC 03,W
0599C:  MOVWF  FEA
0599E:  MOVFF  FEC,03
059A2:  MOVF   FED,F
059A4:  MOVFF  FEF,86A
059A8:  MOVFF  03,86B
059AC:  MOVLB  0
059AE:  CALL   3E88
059B2:  MOVFF  03,639
059B6:  MOVFF  02,638
059BA:  MOVFF  01,637
059BE:  MOVFF  00,636
....................          Pendiente=((Setpoint-TempeInicial)/Tiempo); 
059C2:  BSF    FD8.1
059C4:  MOVFF  639,875
059C8:  MOVFF  638,874
059CC:  MOVFF  637,873
059D0:  MOVFF  636,872
059D4:  MOVFF  5C5,879
059D8:  MOVFF  5C4,878
059DC:  MOVFF  5C3,877
059E0:  MOVFF  5C2,876
059E4:  CALL   1F68
059E8:  MOVFF  00,866
059EC:  MOVFF  01,867
059F0:  MOVFF  02,868
059F4:  MOVFF  03,869
059F8:  MOVFF  03,86D
059FC:  MOVFF  02,86C
05A00:  MOVFF  01,86B
05A04:  MOVFF  00,86A
05A08:  MOVFF  5C9,871
05A0C:  MOVFF  5C8,870
05A10:  MOVFF  5C7,86F
05A14:  MOVFF  5C6,86E
05A18:  CALL   1E0A
05A1C:  MOVFF  03,631
05A20:  MOVFF  02,630
05A24:  MOVFF  01,62F
05A28:  MOVFF  00,62E
....................          Testerilizacionp[3]=(int8)Horas1[(ProgramaSeleccionado*Pasos)+Segmento]/10; 
05A2C:  MOVLB  5
05A2E:  MOVF   xA4,W
05A30:  MULLW  10
05A32:  MOVF   FF3,W
05A34:  ADDWF  x93,W
05A36:  MOVWF  00
05A38:  BCF    FD8.0
05A3A:  RLCF   00,F
05A3C:  MOVF   00,W
05A3E:  CLRF   03
05A40:  ADDLW  06
05A42:  MOVWF  FE9
05A44:  MOVLW  07
05A46:  ADDWFC 03,W
05A48:  MOVWF  FEA
05A4A:  MOVFF  FEF,882
05A4E:  MOVLW  0A
05A50:  MOVLB  8
05A52:  MOVWF  x83
05A54:  MOVLB  0
05A56:  CALL   1B78
05A5A:  MOVFF  01,5ED
05A5E:  MOVLB  5
....................          Testerilizacionp[2]=Horas1[(ProgramaSeleccionado*Pasos)+Segmento]-(Testerilizacionp[3]*10); 
05A60:  MOVF   xA4,W
05A62:  MULLW  10
05A64:  MOVF   FF3,W
05A66:  ADDWF  x93,W
05A68:  MOVWF  00
05A6A:  BCF    FD8.0
05A6C:  RLCF   00,F
05A6E:  MOVF   00,W
05A70:  CLRF   03
05A72:  ADDLW  06
05A74:  MOVWF  FE9
05A76:  MOVLW  07
05A78:  ADDWFC 03,W
05A7A:  MOVWF  FEA
05A7C:  MOVFF  FEC,867
05A80:  MOVF   FED,F
05A82:  MOVFF  FEF,866
05A86:  MOVFF  5ED,887
05A8A:  MOVLW  0A
05A8C:  MOVLB  8
05A8E:  MOVWF  x88
05A90:  MOVLB  0
05A92:  CALL   3ED8
05A96:  MOVF   01,W
05A98:  CLRF   03
05A9A:  MOVWF  00
05A9C:  BTFSC  FE8.7
05A9E:  DECF   03,F
05AA0:  MOVLB  8
05AA2:  SUBWF  x66,W
05AA4:  MOVWF  00
05AA6:  MOVF   03,W
05AA8:  SUBWFB x67,W
05AAA:  MOVFF  00,5EC
05AAE:  MOVLB  5
....................          Testerilizacionp[1]=Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]/10; 
05AB0:  MOVF   xA4,W
05AB2:  MULLW  10
05AB4:  MOVF   FF3,W
05AB6:  ADDWF  x93,W
05AB8:  MOVWF  00
05ABA:  BCF    FD8.0
05ABC:  RLCF   00,F
05ABE:  MOVF   00,W
05AC0:  CLRF   03
05AC2:  ADDLW  A6
05AC4:  MOVWF  FE9
05AC6:  MOVLW  07
05AC8:  ADDWFC 03,W
05ACA:  MOVWF  FEA
05ACC:  MOVFF  FEC,867
05AD0:  MOVF   FED,F
05AD2:  MOVFF  FEF,866
05AD6:  MOVFF  867,869
05ADA:  MOVFF  866,868
05ADE:  MOVLB  8
05AE0:  CLRF   x6B
05AE2:  MOVLW  0A
05AE4:  MOVWF  x6A
05AE6:  MOVLB  0
05AE8:  CALL   3F26
05AEC:  MOVFF  01,5EB
05AF0:  MOVLB  5
....................          Testerilizacionp[0]=Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]-(Testerilizacionp[1]*10); 
05AF2:  MOVF   xA4,W
05AF4:  MULLW  10
05AF6:  MOVF   FF3,W
05AF8:  ADDWF  x93,W
05AFA:  MOVWF  00
05AFC:  BCF    FD8.0
05AFE:  RLCF   00,F
05B00:  MOVF   00,W
05B02:  CLRF   03
05B04:  ADDLW  A6
05B06:  MOVWF  FE9
05B08:  MOVLW  07
05B0A:  ADDWFC 03,W
05B0C:  MOVWF  FEA
05B0E:  MOVFF  FEC,867
05B12:  MOVF   FED,F
05B14:  MOVFF  FEF,866
05B18:  MOVFF  5EB,887
05B1C:  MOVLW  0A
05B1E:  MOVLB  8
05B20:  MOVWF  x88
05B22:  MOVLB  0
05B24:  CALL   3ED8
05B28:  MOVF   01,W
05B2A:  CLRF   03
05B2C:  MOVWF  00
05B2E:  BTFSC  FE8.7
05B30:  DECF   03,F
05B32:  MOVLB  8
05B34:  SUBWF  x66,W
05B36:  MOVWF  00
05B38:  MOVF   03,W
05B3A:  SUBWFB x67,W
05B3C:  MOVFF  00,5EA
05B40:  MOVLB  5
....................          flag_calcula=1; 
05B42:  BSF    x95.1
....................          Ganancia=GananciaIn*(Setpoint/Coeficiente); 
05B44:  MOVFF  639,86D
05B48:  MOVFF  638,86C
05B4C:  MOVFF  637,86B
05B50:  MOVFF  636,86A
05B54:  MOVFF  621,871
05B58:  MOVFF  620,870
05B5C:  MOVFF  61F,86F
05B60:  MOVFF  61E,86E
05B64:  MOVLB  0
05B66:  CALL   1E0A
05B6A:  MOVFF  615,88A
05B6E:  MOVFF  614,889
05B72:  MOVFF  613,888
05B76:  MOVFF  612,887
05B7A:  MOVFF  03,88E
05B7E:  MOVFF  02,88D
05B82:  MOVFF  01,88C
05B86:  MOVFF  00,88B
05B8A:  CALL   32D2
05B8E:  MOVFF  03,619
05B92:  MOVFF  02,618
05B96:  MOVFF  01,617
05B9A:  MOVFF  00,616
05B9E:  MOVLB  5
....................       } 
....................    } 
....................    else{ 
05BA0:  BRA    5EA6
....................       if(flag_calcula==0){ 
05BA2:  BTFSC  x95.1
05BA4:  BRA    5EA6
....................          Tiempo=(Horas1[(ProgramaSeleccionado*Pasos)+Segmento]*3600)+(Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]*60); 
05BA6:  MOVF   xA4,W
05BA8:  MULLW  10
05BAA:  MOVF   FF3,W
05BAC:  ADDWF  x93,W
05BAE:  MOVWF  00
05BB0:  BCF    FD8.0
05BB2:  RLCF   00,F
05BB4:  MOVF   00,W
05BB6:  CLRF   03
05BB8:  ADDLW  06
05BBA:  MOVWF  FE9
05BBC:  MOVLW  07
05BBE:  ADDWFC 03,W
05BC0:  MOVWF  FEA
05BC2:  MOVFF  FEC,867
05BC6:  MOVF   FED,F
05BC8:  MOVFF  FEF,866
05BCC:  MOVFF  867,86B
05BD0:  MOVFF  866,86A
05BD4:  MOVLW  0E
05BD6:  MOVLB  8
05BD8:  MOVWF  x6D
05BDA:  MOVLW  10
05BDC:  MOVWF  x6C
05BDE:  MOVLB  0
05BE0:  CALL   3E34
05BE4:  MOVFF  02,867
05BE8:  MOVFF  01,866
05BEC:  MOVLB  5
05BEE:  MOVF   xA4,W
05BF0:  MULLW  10
05BF2:  MOVF   FF3,W
05BF4:  ADDWF  x93,W
05BF6:  MOVWF  00
05BF8:  BCF    FD8.0
05BFA:  RLCF   00,F
05BFC:  MOVF   00,W
05BFE:  CLRF   03
05C00:  ADDLW  A6
05C02:  MOVWF  FE9
05C04:  MOVLW  07
05C06:  ADDWFC 03,W
05C08:  MOVWF  FEA
05C0A:  MOVFF  FEC,869
05C0E:  MOVF   FED,F
05C10:  MOVFF  FEF,868
05C14:  MOVFF  869,86B
05C18:  MOVFF  868,86A
05C1C:  MOVLB  8
05C1E:  CLRF   x6D
05C20:  MOVLW  3C
05C22:  MOVWF  x6C
05C24:  MOVLB  0
05C26:  CALL   3E34
05C2A:  MOVFF  02,03
05C2E:  MOVF   01,W
05C30:  MOVLB  8
05C32:  ADDWF  x66,W
05C34:  MOVWF  01
05C36:  MOVF   x67,W
05C38:  ADDWFC 03,F
05C3A:  MOVFF  01,86A
05C3E:  MOVFF  03,86B
05C42:  MOVLB  0
05C44:  CALL   3E88
05C48:  MOVFF  03,5C9
05C4C:  MOVFF  02,5C8
05C50:  MOVFF  01,5C7
05C54:  MOVFF  00,5C6
....................          Pendiente=((Temperatura1[(ProgramaSeleccionado*Pasos)+Segmento]-Temperatura1[(ProgramaSeleccionado*Pasos)+Segmento-1])/Tiempo); 
05C58:  MOVLB  5
05C5A:  MOVF   xA4,W
05C5C:  MULLW  10
05C5E:  MOVF   FF3,W
05C60:  ADDWF  x93,W
05C62:  MOVWF  00
05C64:  BCF    FD8.0
05C66:  RLCF   00,F
05C68:  MOVF   00,W
05C6A:  CLRF   03
05C6C:  ADDLW  66
05C6E:  MOVWF  FE9
05C70:  MOVLW  06
05C72:  ADDWFC 03,W
05C74:  MOVWF  FEA
05C76:  MOVFF  FEC,867
05C7A:  MOVF   FED,F
05C7C:  MOVFF  FEF,866
05C80:  MOVF   xA4,W
05C82:  MULLW  10
05C84:  MOVF   FF3,W
05C86:  ADDWF  x93,W
05C88:  ADDLW  FF
05C8A:  MOVWF  00
05C8C:  BCF    FD8.0
05C8E:  RLCF   00,F
05C90:  MOVF   00,W
05C92:  CLRF   03
05C94:  ADDLW  66
05C96:  MOVWF  FE9
05C98:  MOVLW  06
05C9A:  ADDWFC 03,W
05C9C:  MOVWF  FEA
05C9E:  MOVFF  FEC,03
05CA2:  MOVF   FED,F
05CA4:  MOVF   FEF,W
05CA6:  MOVLB  8
05CA8:  SUBWF  x66,F
05CAA:  MOVF   03,W
05CAC:  SUBWFB x67,F
05CAE:  MOVFF  867,86B
05CB2:  MOVFF  866,86A
05CB6:  MOVLB  0
05CB8:  CALL   3E88
05CBC:  MOVFF  03,86D
05CC0:  MOVFF  02,86C
05CC4:  MOVFF  01,86B
05CC8:  MOVFF  00,86A
05CCC:  MOVFF  5C9,871
05CD0:  MOVFF  5C8,870
05CD4:  MOVFF  5C7,86F
05CD8:  MOVFF  5C6,86E
05CDC:  CALL   1E0A
05CE0:  MOVFF  03,631
05CE4:  MOVFF  02,630
05CE8:  MOVFF  01,62F
05CEC:  MOVFF  00,62E
....................          Setpoint=Temperatura1[(ProgramaSeleccionado*Pasos)+Segmento]; 
05CF0:  MOVLB  5
05CF2:  MOVF   xA4,W
05CF4:  MULLW  10
05CF6:  MOVF   FF3,W
05CF8:  ADDWF  x93,W
05CFA:  MOVWF  00
05CFC:  BCF    FD8.0
05CFE:  RLCF   00,F
05D00:  MOVF   00,W
05D02:  CLRF   03
05D04:  ADDLW  66
05D06:  MOVWF  FE9
05D08:  MOVLW  06
05D0A:  ADDWFC 03,W
05D0C:  MOVWF  FEA
05D0E:  MOVFF  FEC,03
05D12:  MOVF   FED,F
05D14:  MOVFF  FEF,86A
05D18:  MOVFF  03,86B
05D1C:  MOVLB  0
05D1E:  CALL   3E88
05D22:  MOVFF  03,639
05D26:  MOVFF  02,638
05D2A:  MOVFF  01,637
05D2E:  MOVFF  00,636
....................          Testerilizacionp[3]=(int8)Horas1[(ProgramaSeleccionado*Pasos)+Segmento]/10; 
05D32:  MOVLB  5
05D34:  MOVF   xA4,W
05D36:  MULLW  10
05D38:  MOVF   FF3,W
05D3A:  ADDWF  x93,W
05D3C:  MOVWF  00
05D3E:  BCF    FD8.0
05D40:  RLCF   00,F
05D42:  MOVF   00,W
05D44:  CLRF   03
05D46:  ADDLW  06
05D48:  MOVWF  FE9
05D4A:  MOVLW  07
05D4C:  ADDWFC 03,W
05D4E:  MOVWF  FEA
05D50:  MOVFF  FEF,882
05D54:  MOVLW  0A
05D56:  MOVLB  8
05D58:  MOVWF  x83
05D5A:  MOVLB  0
05D5C:  CALL   1B78
05D60:  MOVFF  01,5ED
05D64:  MOVLB  5
....................          Testerilizacionp[2]=Horas1[(ProgramaSeleccionado*Pasos)+Segmento]-(Testerilizacionp[3]*10); 
05D66:  MOVF   xA4,W
05D68:  MULLW  10
05D6A:  MOVF   FF3,W
05D6C:  ADDWF  x93,W
05D6E:  MOVWF  00
05D70:  BCF    FD8.0
05D72:  RLCF   00,F
05D74:  MOVF   00,W
05D76:  CLRF   03
05D78:  ADDLW  06
05D7A:  MOVWF  FE9
05D7C:  MOVLW  07
05D7E:  ADDWFC 03,W
05D80:  MOVWF  FEA
05D82:  MOVFF  FEC,867
05D86:  MOVF   FED,F
05D88:  MOVFF  FEF,866
05D8C:  MOVFF  5ED,887
05D90:  MOVLW  0A
05D92:  MOVLB  8
05D94:  MOVWF  x88
05D96:  MOVLB  0
05D98:  CALL   3ED8
05D9C:  MOVF   01,W
05D9E:  CLRF   03
05DA0:  MOVWF  00
05DA2:  BTFSC  FE8.7
05DA4:  DECF   03,F
05DA6:  MOVLB  8
05DA8:  SUBWF  x66,W
05DAA:  MOVWF  00
05DAC:  MOVF   03,W
05DAE:  SUBWFB x67,W
05DB0:  MOVFF  00,5EC
05DB4:  MOVLB  5
....................          Testerilizacionp[1]=Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]/10; 
05DB6:  MOVF   xA4,W
05DB8:  MULLW  10
05DBA:  MOVF   FF3,W
05DBC:  ADDWF  x93,W
05DBE:  MOVWF  00
05DC0:  BCF    FD8.0
05DC2:  RLCF   00,F
05DC4:  MOVF   00,W
05DC6:  CLRF   03
05DC8:  ADDLW  A6
05DCA:  MOVWF  FE9
05DCC:  MOVLW  07
05DCE:  ADDWFC 03,W
05DD0:  MOVWF  FEA
05DD2:  MOVFF  FEC,867
05DD6:  MOVF   FED,F
05DD8:  MOVFF  FEF,866
05DDC:  MOVFF  867,869
05DE0:  MOVFF  866,868
05DE4:  MOVLB  8
05DE6:  CLRF   x6B
05DE8:  MOVLW  0A
05DEA:  MOVWF  x6A
05DEC:  MOVLB  0
05DEE:  CALL   3F26
05DF2:  MOVFF  01,5EB
05DF6:  MOVLB  5
....................          Testerilizacionp[0]=Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]-(Testerilizacionp[1]*10); 
05DF8:  MOVF   xA4,W
05DFA:  MULLW  10
05DFC:  MOVF   FF3,W
05DFE:  ADDWF  x93,W
05E00:  MOVWF  00
05E02:  BCF    FD8.0
05E04:  RLCF   00,F
05E06:  MOVF   00,W
05E08:  CLRF   03
05E0A:  ADDLW  A6
05E0C:  MOVWF  FE9
05E0E:  MOVLW  07
05E10:  ADDWFC 03,W
05E12:  MOVWF  FEA
05E14:  MOVFF  FEC,867
05E18:  MOVF   FED,F
05E1A:  MOVFF  FEF,866
05E1E:  MOVFF  5EB,887
05E22:  MOVLW  0A
05E24:  MOVLB  8
05E26:  MOVWF  x88
05E28:  MOVLB  0
05E2A:  CALL   3ED8
05E2E:  MOVF   01,W
05E30:  CLRF   03
05E32:  MOVWF  00
05E34:  BTFSC  FE8.7
05E36:  DECF   03,F
05E38:  MOVLB  8
05E3A:  SUBWF  x66,W
05E3C:  MOVWF  00
05E3E:  MOVF   03,W
05E40:  SUBWFB x67,W
05E42:  MOVFF  00,5EA
05E46:  MOVLB  5
....................          flag_calcula=1; 
05E48:  BSF    x95.1
....................          Ganancia=GananciaIn*(Setpoint/Coeficiente); 
05E4A:  MOVFF  639,86D
05E4E:  MOVFF  638,86C
05E52:  MOVFF  637,86B
05E56:  MOVFF  636,86A
05E5A:  MOVFF  621,871
05E5E:  MOVFF  620,870
05E62:  MOVFF  61F,86F
05E66:  MOVFF  61E,86E
05E6A:  MOVLB  0
05E6C:  CALL   1E0A
05E70:  MOVFF  615,88A
05E74:  MOVFF  614,889
05E78:  MOVFF  613,888
05E7C:  MOVFF  612,887
05E80:  MOVFF  03,88E
05E84:  MOVFF  02,88D
05E88:  MOVFF  01,88C
05E8C:  MOVFF  00,88B
05E90:  CALL   32D2
05E94:  MOVFF  03,619
05E98:  MOVFF  02,618
05E9C:  MOVFF  01,617
05EA0:  MOVFF  00,616
05EA4:  MOVLB  5
....................       } 
....................    } 
....................     
....................    if(Pendiente==0){// Si Esta realizando una Meseta debe realizar el control JuDifuso 
05EA6:  MOVFF  631,869
05EAA:  MOVFF  630,868
05EAE:  MOVFF  62F,867
05EB2:  MOVFF  62E,866
05EB6:  MOVLB  8
05EB8:  CLRF   x6D
05EBA:  CLRF   x6C
05EBC:  CLRF   x6B
05EBE:  CLRF   x6A
05EC0:  MOVLB  0
05EC2:  CALL   1D90
05EC6:  BTFSS  FD8.2
05EC8:  BRA    6280
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
05ECA:  BCF    FD8.1
05ECC:  MOVFF  61D,875
05ED0:  MOVFF  61C,874
05ED4:  MOVFF  61B,873
05ED8:  MOVFF  61A,872
05EDC:  MOVFF  639,879
05EE0:  MOVFF  638,878
05EE4:  MOVFF  637,877
05EE8:  MOVFF  636,876
05EEC:  CALL   1F68
05EF0:  MOVFF  00,866
05EF4:  MOVFF  01,867
05EF8:  MOVFF  02,868
05EFC:  MOVFF  03,869
05F00:  BSF    FD8.1
05F02:  MOVFF  03,875
05F06:  MOVFF  02,874
05F0A:  MOVFF  01,873
05F0E:  MOVFF  00,872
05F12:  MOVFF  62D,879
05F16:  MOVFF  62C,878
05F1A:  MOVFF  62B,877
05F1E:  MOVFF  62A,876
05F22:  CALL   1F68
05F26:  MOVFF  03,605
05F2A:  MOVFF  02,604
05F2E:  MOVFF  01,603
05F32:  MOVFF  00,602
....................        
....................       if(error>3.0 && Aumento<1) 
05F36:  MOVLB  8
05F38:  CLRF   x69
05F3A:  CLRF   x68
05F3C:  MOVLW  40
05F3E:  MOVWF  x67
05F40:  MOVLW  80
05F42:  MOVWF  x66
05F44:  MOVFF  605,86D
05F48:  MOVFF  604,86C
05F4C:  MOVFF  603,86B
05F50:  MOVFF  602,86A
05F54:  MOVLB  0
05F56:  CALL   1D90
05F5A:  BTFSS  FD8.0
05F5C:  BRA    6120
05F5E:  MOVFF  629,869
05F62:  MOVFF  628,868
05F66:  MOVFF  627,867
05F6A:  MOVFF  626,866
05F6E:  MOVLB  8
05F70:  CLRF   x6D
05F72:  CLRF   x6C
05F74:  CLRF   x6B
05F76:  MOVLW  7F
05F78:  MOVWF  x6A
05F7A:  MOVLB  0
05F7C:  CALL   1D90
05F80:  BTFSS  FD8.0
05F82:  BRA    6120
....................       { 
....................          if(Potencia<90.0) 
05F84:  MOVFF  5E1,869
05F88:  MOVFF  5E0,868
05F8C:  MOVFF  5DF,867
05F90:  MOVFF  5DE,866
05F94:  MOVLB  8
05F96:  CLRF   x6D
05F98:  CLRF   x6C
05F9A:  MOVLW  34
05F9C:  MOVWF  x6B
05F9E:  MOVLW  85
05FA0:  MOVWF  x6A
05FA2:  MOVLB  0
05FA4:  CALL   1D90
05FA8:  BTFSS  FD8.0
05FAA:  BRA    6120
....................          { 
....................             if(TiempoControl>=Derivativo) 
05FAC:  MOVLB  8
05FAE:  CLRF   x73
05FB0:  MOVFF  5A1,872
05FB4:  MOVLB  0
05FB6:  CALL   1D5A
05FBA:  MOVFF  641,869
05FBE:  MOVFF  640,868
05FC2:  MOVFF  63F,867
05FC6:  MOVFF  63E,866
05FCA:  MOVFF  03,86D
05FCE:  MOVFF  02,86C
05FD2:  MOVFF  01,86B
05FD6:  MOVFF  00,86A
05FDA:  CALL   1D90
05FDE:  BC    5FE4
05FE0:  BTFSS  FD8.2
05FE2:  BRA    6120
....................             { 
....................                TiempoControl=0; 
05FE4:  MOVLB  5
05FE6:  CLRF   xA1
....................                if(Aumento<-2) 
05FE8:  MOVFF  629,869
05FEC:  MOVFF  628,868
05FF0:  MOVFF  627,867
05FF4:  MOVFF  626,866
05FF8:  MOVLB  8
05FFA:  CLRF   x6D
05FFC:  CLRF   x6C
05FFE:  MOVLW  80
06000:  MOVWF  x6B
06002:  MOVWF  x6A
06004:  MOVLB  0
06006:  CALL   1D90
0600A:  BNC   6068
....................                { 
....................                   Ganancia+=Integral+1; 
0600C:  BCF    FD8.1
0600E:  MOVFF  63D,875
06012:  MOVFF  63C,874
06016:  MOVFF  63B,873
0601A:  MOVFF  63A,872
0601E:  MOVLB  8
06020:  CLRF   x79
06022:  CLRF   x78
06024:  CLRF   x77
06026:  MOVLW  7F
06028:  MOVWF  x76
0602A:  MOVLB  0
0602C:  CALL   1F68
06030:  BCF    FD8.1
06032:  MOVFF  619,875
06036:  MOVFF  618,874
0603A:  MOVFF  617,873
0603E:  MOVFF  616,872
06042:  MOVFF  03,879
06046:  MOVFF  02,878
0604A:  MOVFF  01,877
0604E:  MOVFF  00,876
06052:  CALL   1F68
06056:  MOVFF  03,619
0605A:  MOVFF  02,618
0605E:  MOVFF  01,617
06062:  MOVFF  00,616
....................                } 
....................                else 
06066:  BRA    6120
....................                { 
....................                   if(Aumento<-1) 
06068:  MOVFF  629,869
0606C:  MOVFF  628,868
06070:  MOVFF  627,867
06074:  MOVFF  626,866
06078:  MOVLB  8
0607A:  CLRF   x6D
0607C:  CLRF   x6C
0607E:  MOVLW  80
06080:  MOVWF  x6B
06082:  MOVLW  7F
06084:  MOVWF  x6A
06086:  MOVLB  0
06088:  CALL   1D90
0608C:  BNC   60C6
....................                   { 
....................                      Ganancia+=Integral; 
0608E:  BCF    FD8.1
06090:  MOVFF  619,875
06094:  MOVFF  618,874
06098:  MOVFF  617,873
0609C:  MOVFF  616,872
060A0:  MOVFF  63D,879
060A4:  MOVFF  63C,878
060A8:  MOVFF  63B,877
060AC:  MOVFF  63A,876
060B0:  CALL   1F68
060B4:  MOVFF  03,619
060B8:  MOVFF  02,618
060BC:  MOVFF  01,617
060C0:  MOVFF  00,616
....................                   }    
....................                   else 
060C4:  BRA    6120
....................                   { 
....................                      Ganancia+=Integral-0.5; 
060C6:  BSF    FD8.1
060C8:  MOVFF  63D,875
060CC:  MOVFF  63C,874
060D0:  MOVFF  63B,873
060D4:  MOVFF  63A,872
060D8:  MOVLB  8
060DA:  CLRF   x79
060DC:  CLRF   x78
060DE:  CLRF   x77
060E0:  MOVLW  7E
060E2:  MOVWF  x76
060E4:  MOVLB  0
060E6:  CALL   1F68
060EA:  BCF    FD8.1
060EC:  MOVFF  619,875
060F0:  MOVFF  618,874
060F4:  MOVFF  617,873
060F8:  MOVFF  616,872
060FC:  MOVFF  03,879
06100:  MOVFF  02,878
06104:  MOVFF  01,877
06108:  MOVFF  00,876
0610C:  CALL   1F68
06110:  MOVFF  03,619
06114:  MOVFF  02,618
06118:  MOVFF  01,617
0611C:  MOVFF  00,616
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       //if(error<-5) 
....................       //{ 
....................       //   Ganancia=6*(Setpoint/100); 
....................       //} 
....................        
....................       if(Ganancia<0.5) 
06120:  MOVFF  619,869
06124:  MOVFF  618,868
06128:  MOVFF  617,867
0612C:  MOVFF  616,866
06130:  MOVLB  8
06132:  CLRF   x6D
06134:  CLRF   x6C
06136:  CLRF   x6B
06138:  MOVLW  7E
0613A:  MOVWF  x6A
0613C:  MOVLB  0
0613E:  CALL   1D90
06142:  BNC   6150
....................       { 
....................          Ganancia=0.5; 
06144:  MOVLB  6
06146:  CLRF   x19
06148:  CLRF   x18
0614A:  CLRF   x17
0614C:  MOVLW  7E
0614E:  MOVWF  x16
....................       } 
....................        
....................        
....................       if(error<0.0)     // Anti Wind_DOWN     
06150:  MOVFF  605,869
06154:  MOVFF  604,868
06158:  MOVFF  603,867
0615C:  MOVFF  602,866
06160:  MOVLB  8
06162:  CLRF   x6D
06164:  CLRF   x6C
06166:  CLRF   x6B
06168:  CLRF   x6A
0616A:  MOVLB  0
0616C:  CALL   1D90
06170:  BNC   617E
....................       { 
....................          error=0.0; 
06172:  MOVLB  6
06174:  CLRF   x05
06176:  CLRF   x04
06178:  CLRF   x03
0617A:  CLRF   x02
0617C:  MOVLB  0
....................       } 
....................     
....................       tmp=error*Ganancia;  // Control Proporcional. 
0617E:  MOVFF  605,88A
06182:  MOVFF  604,889
06186:  MOVFF  603,888
0618A:  MOVFF  602,887
0618E:  MOVFF  619,88E
06192:  MOVFF  618,88D
06196:  MOVFF  617,88C
0619A:  MOVFF  616,88B
0619E:  CALL   32D2
061A2:  MOVFF  03,611
061A6:  MOVFF  02,610
061AA:  MOVFF  01,60F
061AE:  MOVFF  00,60E
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
061B2:  MOVFF  639,869
061B6:  MOVFF  638,868
061BA:  MOVFF  637,867
061BE:  MOVFF  636,866
061C2:  MOVFF  611,86D
061C6:  MOVFF  610,86C
061CA:  MOVFF  60F,86B
061CE:  MOVFF  60E,86A
061D2:  CALL   1D90
061D6:  BNC   61E8
....................       { 
....................          tmp=Setpoint; 
061D8:  MOVFF  639,611
061DC:  MOVFF  638,610
061E0:  MOVFF  637,60F
061E4:  MOVFF  636,60E
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
061E8:  MOVFF  611,869
061EC:  MOVFF  610,868
061F0:  MOVFF  60F,867
061F4:  MOVFF  60E,866
061F8:  MOVLB  8
061FA:  CLRF   x6D
061FC:  CLRF   x6C
061FE:  CLRF   x6B
06200:  CLRF   x6A
06202:  MOVLB  0
06204:  CALL   1D90
06208:  BNC   6216
....................       { 
....................          tmp=0.0; 
0620A:  MOVLB  6
0620C:  CLRF   x11
0620E:  CLRF   x10
06210:  CLRF   x0F
06212:  CLRF   x0E
06214:  MOVLB  0
....................       } 
....................        
....................       // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................       // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................       Tpulso=(tmp/Setpoint)*Tciclo;  
06216:  MOVFF  611,86D
0621A:  MOVFF  610,86C
0621E:  MOVFF  60F,86B
06222:  MOVFF  60E,86A
06226:  MOVFF  639,871
0622A:  MOVFF  638,870
0622E:  MOVFF  637,86F
06232:  MOVFF  636,86E
06236:  CALL   1E0A
0623A:  MOVFF  00,866
0623E:  MOVFF  01,867
06242:  MOVFF  02,868
06246:  MOVFF  03,869
0624A:  MOVFF  03,88A
0624E:  MOVFF  02,889
06252:  MOVFF  01,888
06256:  MOVFF  00,887
0625A:  MOVFF  5FD,88E
0625E:  MOVFF  5FC,88D
06262:  MOVFF  5FB,88C
06266:  MOVFF  5FA,88B
0626A:  CALL   32D2
0626E:  MOVFF  03,601
06272:  MOVFF  02,600
06276:  MOVFF  01,5FF
0627A:  MOVFF  00,5FE
....................    } 
....................    else{// Si Esta realizando una Rampa debe realizar el control de acuerdo a la pendiente de Temperatura. Aprox 10°C * min Maximo Valor de Pendiente. 
0627E:  BRA    6824
....................       PendienteMinutos=PendienteActual*60; 
06280:  MOVFF  5D1,88A
06284:  MOVFF  5D0,889
06288:  MOVFF  5CF,888
0628C:  MOVFF  5CE,887
06290:  MOVLB  8
06292:  CLRF   x8E
06294:  CLRF   x8D
06296:  MOVLW  70
06298:  MOVWF  x8C
0629A:  MOVLW  84
0629C:  MOVWF  x8B
0629E:  MOVLB  0
062A0:  CALL   32D2
062A4:  MOVFF  03,5C1
062A8:  MOVFF  02,5C0
062AC:  MOVFF  01,5BF
062B0:  MOVFF  00,5BE
....................       //PotenciaEntregada=((PendienteMinutos+DifPendiente)*100)/penMufla; 
....................       TiempoRampa=((HorasActual*3600)+(MinutosActual*60)+tinicio); 
062B4:  MOVFF  5D5,88A
062B8:  MOVFF  5D4,889
062BC:  MOVFF  5D3,888
062C0:  MOVFF  5D2,887
062C4:  MOVLB  8
062C6:  CLRF   x8E
062C8:  CLRF   x8D
062CA:  MOVLW  61
062CC:  MOVWF  x8C
062CE:  MOVLW  8A
062D0:  MOVWF  x8B
062D2:  MOVLB  0
062D4:  CALL   32D2
062D8:  MOVFF  00,866
062DC:  MOVFF  01,867
062E0:  MOVFF  02,868
062E4:  MOVFF  03,869
062E8:  MOVFF  5D9,88A
062EC:  MOVFF  5D8,889
062F0:  MOVFF  5D7,888
062F4:  MOVFF  5D6,887
062F8:  MOVLB  8
062FA:  CLRF   x8E
062FC:  CLRF   x8D
062FE:  MOVLW  70
06300:  MOVWF  x8C
06302:  MOVLW  84
06304:  MOVWF  x8B
06306:  MOVLB  0
06308:  CALL   32D2
0630C:  BCF    FD8.1
0630E:  MOVFF  869,875
06312:  MOVFF  868,874
06316:  MOVFF  867,873
0631A:  MOVFF  866,872
0631E:  MOVFF  03,879
06322:  MOVFF  02,878
06326:  MOVFF  01,877
0632A:  MOVFF  00,876
0632E:  CALL   1F68
06332:  MOVFF  00,866
06336:  MOVFF  01,867
0633A:  MOVFF  02,868
0633E:  MOVFF  03,869
06342:  MOVFF  5B1,873
06346:  MOVFF  5B0,872
0634A:  CALL   1D5A
0634E:  BCF    FD8.1
06350:  MOVFF  869,875
06354:  MOVFF  868,874
06358:  MOVFF  867,873
0635C:  MOVFF  866,872
06360:  MOVFF  03,879
06364:  MOVFF  02,878
06368:  MOVFF  01,877
0636C:  MOVFF  00,876
06370:  CALL   1F68
06374:  MOVFF  03,5DD
06378:  MOVFF  02,5DC
0637C:  MOVFF  01,5DB
06380:  MOVFF  00,5DA
....................       if(Segmento==0){ 
06384:  MOVLB  5
06386:  MOVF   x93,F
06388:  BNZ   63FA
....................          TemperaturaIdeal=(Pendiente*TiempoRampa)+TempeInicial; 
0638A:  MOVFF  631,88A
0638E:  MOVFF  630,889
06392:  MOVFF  62F,888
06396:  MOVFF  62E,887
0639A:  MOVFF  5DD,88E
0639E:  MOVFF  5DC,88D
063A2:  MOVFF  5DB,88C
063A6:  MOVFF  5DA,88B
063AA:  MOVLB  0
063AC:  CALL   32D2
063B0:  MOVFF  00,866
063B4:  MOVFF  01,867
063B8:  MOVFF  02,868
063BC:  MOVFF  03,869
063C0:  BCF    FD8.1
063C2:  MOVFF  03,875
063C6:  MOVFF  02,874
063CA:  MOVFF  01,873
063CE:  MOVFF  00,872
063D2:  MOVFF  5C5,879
063D6:  MOVFF  5C4,878
063DA:  MOVFF  5C3,877
063DE:  MOVFF  5C2,876
063E2:  CALL   1F68
063E6:  MOVFF  03,661
063EA:  MOVFF  02,660
063EE:  MOVFF  01,65F
063F2:  MOVFF  00,65E
....................       }else{ 
063F6:  BRA    64AA
063F8:  MOVLB  5
....................          TemperaturaIdeal=(Pendiente*TiempoRampa)+Temperatura1[(ProgramaSeleccionado*Pasos)+Segmento-1]; 
063FA:  MOVFF  631,88A
063FE:  MOVFF  630,889
06402:  MOVFF  62F,888
06406:  MOVFF  62E,887
0640A:  MOVFF  5DD,88E
0640E:  MOVFF  5DC,88D
06412:  MOVFF  5DB,88C
06416:  MOVFF  5DA,88B
0641A:  MOVLB  0
0641C:  CALL   32D2
06420:  MOVFF  00,866
06424:  MOVFF  01,867
06428:  MOVFF  02,868
0642C:  MOVFF  03,869
06430:  MOVLB  5
06432:  MOVF   xA4,W
06434:  MULLW  10
06436:  MOVF   FF3,W
06438:  ADDWF  x93,W
0643A:  ADDLW  FF
0643C:  MOVWF  00
0643E:  BCF    FD8.0
06440:  RLCF   00,F
06442:  MOVF   00,W
06444:  CLRF   03
06446:  ADDLW  66
06448:  MOVWF  FE9
0644A:  MOVLW  06
0644C:  ADDWFC 03,W
0644E:  MOVWF  FEA
06450:  MOVFF  FEC,03
06454:  MOVF   FED,F
06456:  MOVFF  FEF,86A
0645A:  MOVFF  03,86B
0645E:  MOVLB  0
06460:  CALL   3E88
06464:  MOVFF  FEA,86B
06468:  MOVFF  FE9,86A
0646C:  BCF    FD8.1
0646E:  MOVFF  869,875
06472:  MOVFF  868,874
06476:  MOVFF  867,873
0647A:  MOVFF  866,872
0647E:  MOVFF  03,879
06482:  MOVFF  02,878
06486:  MOVFF  01,877
0648A:  MOVFF  00,876
0648E:  CALL   1F68
06492:  MOVFF  86B,FEA
06496:  MOVFF  86A,FE9
0649A:  MOVFF  03,661
0649E:  MOVFF  02,660
064A2:  MOVFF  01,65F
064A6:  MOVFF  00,65E
....................       } 
....................       PotenciaEntregada=((TemperaturaIdeal-Temperatura)*100)/penMufla; 
064AA:  BSF    FD8.1
064AC:  MOVFF  661,875
064B0:  MOVFF  660,874
064B4:  MOVFF  65F,873
064B8:  MOVFF  65E,872
064BC:  MOVFF  62D,879
064C0:  MOVFF  62C,878
064C4:  MOVFF  62B,877
064C8:  MOVFF  62A,876
064CC:  CALL   1F68
064D0:  MOVFF  00,866
064D4:  MOVFF  01,867
064D8:  MOVFF  02,868
064DC:  MOVFF  03,869
064E0:  MOVFF  03,88A
064E4:  MOVFF  02,889
064E8:  MOVFF  01,888
064EC:  MOVFF  00,887
064F0:  MOVLB  8
064F2:  CLRF   x8E
064F4:  CLRF   x8D
064F6:  MOVLW  48
064F8:  MOVWF  x8C
064FA:  MOVLW  85
064FC:  MOVWF  x8B
064FE:  MOVLB  0
06500:  CALL   32D2
06504:  MOVFF  00,866
06508:  MOVFF  01,867
0650C:  MOVFF  02,868
06510:  MOVFF  03,869
06514:  MOVFF  03,86D
06518:  MOVFF  02,86C
0651C:  MOVFF  01,86B
06520:  MOVFF  00,86A
06524:  MOVFF  65D,871
06528:  MOVFF  65C,870
0652C:  MOVFF  65B,86F
06530:  MOVFF  65A,86E
06534:  CALL   1E0A
06538:  MOVFF  03,5E5
0653C:  MOVFF  02,5E4
06540:  MOVFF  01,5E3
06544:  MOVFF  00,5E2
.................... // Pendiente determinar si el comportamiento de la mufla es lineal 10°C/min o si tiene un comportamiento diferente. 
....................           
....................       if(Temperatura<450 && Temperatura>=200) 
06548:  MOVFF  62D,869
0654C:  MOVFF  62C,868
06550:  MOVFF  62B,867
06554:  MOVFF  62A,866
06558:  MOVLB  8
0655A:  CLRF   x6D
0655C:  CLRF   x6C
0655E:  MOVLW  61
06560:  MOVWF  x6B
06562:  MOVLW  87
06564:  MOVWF  x6A
06566:  MOVLB  0
06568:  CALL   1D90
0656C:  BNC   65CA
0656E:  MOVLB  8
06570:  CLRF   x69
06572:  CLRF   x68
06574:  MOVLW  48
06576:  MOVWF  x67
06578:  MOVLW  86
0657A:  MOVWF  x66
0657C:  MOVFF  62D,86D
06580:  MOVFF  62C,86C
06584:  MOVFF  62B,86B
06588:  MOVFF  62A,86A
0658C:  MOVLB  0
0658E:  CALL   1D90
06592:  BC    6596
06594:  BNZ   65CA
....................          penMufla=penInicial*0.9; 
06596:  MOVFF  665,88A
0659A:  MOVFF  664,889
0659E:  MOVFF  663,888
065A2:  MOVFF  662,887
065A6:  MOVLW  66
065A8:  MOVLB  8
065AA:  MOVWF  x8E
065AC:  MOVWF  x8D
065AE:  MOVWF  x8C
065B0:  MOVLW  7E
065B2:  MOVWF  x8B
065B4:  MOVLB  0
065B6:  CALL   32D2
065BA:  MOVFF  03,65D
065BE:  MOVFF  02,65C
065C2:  MOVFF  01,65B
065C6:  MOVFF  00,65A
....................           
....................       if(Temperatura<600 && Temperatura>=450) 
065CA:  MOVFF  62D,869
065CE:  MOVFF  62C,868
065D2:  MOVFF  62B,867
065D6:  MOVFF  62A,866
065DA:  MOVLB  8
065DC:  CLRF   x6D
065DE:  CLRF   x6C
065E0:  MOVLW  16
065E2:  MOVWF  x6B
065E4:  MOVLW  88
065E6:  MOVWF  x6A
065E8:  MOVLB  0
065EA:  CALL   1D90
065EE:  BNC   6650
065F0:  MOVLB  8
065F2:  CLRF   x69
065F4:  CLRF   x68
065F6:  MOVLW  61
065F8:  MOVWF  x67
065FA:  MOVLW  87
065FC:  MOVWF  x66
065FE:  MOVFF  62D,86D
06602:  MOVFF  62C,86C
06606:  MOVFF  62B,86B
0660A:  MOVFF  62A,86A
0660E:  MOVLB  0
06610:  CALL   1D90
06614:  BC    6618
06616:  BNZ   6650
....................          penMufla=penInicial*0.8; 
06618:  MOVFF  665,88A
0661C:  MOVFF  664,889
06620:  MOVFF  663,888
06624:  MOVFF  662,887
06628:  MOVLW  CD
0662A:  MOVLB  8
0662C:  MOVWF  x8E
0662E:  MOVLW  CC
06630:  MOVWF  x8D
06632:  MOVLW  4C
06634:  MOVWF  x8C
06636:  MOVLW  7E
06638:  MOVWF  x8B
0663A:  MOVLB  0
0663C:  CALL   32D2
06640:  MOVFF  03,65D
06644:  MOVFF  02,65C
06648:  MOVFF  01,65B
0664C:  MOVFF  00,65A
....................           
....................       if(Temperatura<900 && Temperatura>=600) 
06650:  MOVFF  62D,869
06654:  MOVFF  62C,868
06658:  MOVFF  62B,867
0665C:  MOVFF  62A,866
06660:  MOVLB  8
06662:  CLRF   x6D
06664:  CLRF   x6C
06666:  MOVLW  61
06668:  MOVWF  x6B
0666A:  MOVLW  88
0666C:  MOVWF  x6A
0666E:  MOVLB  0
06670:  CALL   1D90
06674:  BNC   66D2
06676:  MOVLB  8
06678:  CLRF   x69
0667A:  CLRF   x68
0667C:  MOVLW  16
0667E:  MOVWF  x67
06680:  MOVLW  88
06682:  MOVWF  x66
06684:  MOVFF  62D,86D
06688:  MOVFF  62C,86C
0668C:  MOVFF  62B,86B
06690:  MOVFF  62A,86A
06694:  MOVLB  0
06696:  CALL   1D90
0669A:  BC    669E
0669C:  BNZ   66D2
....................          penMufla=penInicial*0.7;   
0669E:  MOVFF  665,88A
066A2:  MOVFF  664,889
066A6:  MOVFF  663,888
066AA:  MOVFF  662,887
066AE:  MOVLW  33
066B0:  MOVLB  8
066B2:  MOVWF  x8E
066B4:  MOVWF  x8D
066B6:  MOVWF  x8C
066B8:  MOVLW  7E
066BA:  MOVWF  x8B
066BC:  MOVLB  0
066BE:  CALL   32D2
066C2:  MOVFF  03,65D
066C6:  MOVFF  02,65C
066CA:  MOVFF  01,65B
066CE:  MOVFF  00,65A
....................           
....................       if(Temperatura<=1200 && Temperatura>=900) 
066D2:  MOVFF  62D,869
066D6:  MOVFF  62C,868
066DA:  MOVFF  62B,867
066DE:  MOVFF  62A,866
066E2:  MOVLB  8
066E4:  CLRF   x6D
066E6:  CLRF   x6C
066E8:  MOVLW  16
066EA:  MOVWF  x6B
066EC:  MOVLW  89
066EE:  MOVWF  x6A
066F0:  MOVLB  0
066F2:  CALL   1D90
066F6:  BC    66FA
066F8:  BNZ   675A
066FA:  MOVLB  8
066FC:  CLRF   x69
066FE:  CLRF   x68
06700:  MOVLW  61
06702:  MOVWF  x67
06704:  MOVLW  88
06706:  MOVWF  x66
06708:  MOVFF  62D,86D
0670C:  MOVFF  62C,86C
06710:  MOVFF  62B,86B
06714:  MOVFF  62A,86A
06718:  MOVLB  0
0671A:  CALL   1D90
0671E:  BC    6722
06720:  BNZ   675A
....................          penMufla=penInicial*0.6;    
06722:  MOVFF  665,88A
06726:  MOVFF  664,889
0672A:  MOVFF  663,888
0672E:  MOVFF  662,887
06732:  MOVLW  9A
06734:  MOVLB  8
06736:  MOVWF  x8E
06738:  MOVLW  99
0673A:  MOVWF  x8D
0673C:  MOVLW  19
0673E:  MOVWF  x8C
06740:  MOVLW  7E
06742:  MOVWF  x8B
06744:  MOVLB  0
06746:  CALL   32D2
0674A:  MOVFF  03,65D
0674E:  MOVFF  02,65C
06752:  MOVFF  01,65B
06756:  MOVFF  00,65A
....................        
....................       if(PotenciaEntregada>100.0){ 
0675A:  MOVLB  8
0675C:  CLRF   x69
0675E:  CLRF   x68
06760:  MOVLW  48
06762:  MOVWF  x67
06764:  MOVLW  85
06766:  MOVWF  x66
06768:  MOVFF  5E5,86D
0676C:  MOVFF  5E4,86C
06770:  MOVFF  5E3,86B
06774:  MOVFF  5E2,86A
06778:  MOVLB  0
0677A:  CALL   1D90
0677E:  BNC   678E
....................          PotenciaEntregada=100.0; 
06780:  MOVLB  5
06782:  CLRF   xE5
06784:  CLRF   xE4
06786:  MOVLW  48
06788:  MOVWF  xE3
0678A:  MOVLW  85
0678C:  MOVWF  xE2
....................       } 
....................        
....................       if(PotenciaEntregada<0){ 
0678E:  MOVFF  5E5,869
06792:  MOVFF  5E4,868
06796:  MOVFF  5E3,867
0679A:  MOVFF  5E2,866
0679E:  MOVLB  8
067A0:  CLRF   x6D
067A2:  CLRF   x6C
067A4:  CLRF   x6B
067A6:  CLRF   x6A
067A8:  MOVLB  0
067AA:  CALL   1D90
067AE:  BNC   67BC
....................          PotenciaEntregada=0; 
067B0:  MOVLB  5
067B2:  CLRF   xE5
067B4:  CLRF   xE4
067B6:  CLRF   xE3
067B8:  CLRF   xE2
067BA:  MOVLB  0
....................       } 
....................        
....................       Tpulso=(PotenciaEntregada*Tciclo)/100; 
067BC:  MOVFF  5E5,88A
067C0:  MOVFF  5E4,889
067C4:  MOVFF  5E3,888
067C8:  MOVFF  5E2,887
067CC:  MOVFF  5FD,88E
067D0:  MOVFF  5FC,88D
067D4:  MOVFF  5FB,88C
067D8:  MOVFF  5FA,88B
067DC:  CALL   32D2
067E0:  MOVFF  00,866
067E4:  MOVFF  01,867
067E8:  MOVFF  02,868
067EC:  MOVFF  03,869
067F0:  MOVFF  03,86D
067F4:  MOVFF  02,86C
067F8:  MOVFF  01,86B
067FC:  MOVFF  00,86A
06800:  MOVLB  8
06802:  CLRF   x71
06804:  CLRF   x70
06806:  MOVLW  48
06808:  MOVWF  x6F
0680A:  MOVLW  85
0680C:  MOVWF  x6E
0680E:  MOVLB  0
06810:  CALL   1E0A
06814:  MOVFF  03,601
06818:  MOVFF  02,600
0681C:  MOVFF  01,5FF
06820:  MOVFF  00,5FE
....................    } 
....................    Tp=(int16)(Tpulso/0.005); 
06824:  MOVFF  601,86D
06828:  MOVFF  600,86C
0682C:  MOVFF  5FF,86B
06830:  MOVFF  5FE,86A
06834:  MOVLW  0A
06836:  MOVLB  8
06838:  MOVWF  x71
0683A:  MOVLW  D7
0683C:  MOVWF  x70
0683E:  MOVLW  23
06840:  MOVWF  x6F
06842:  MOVLW  77
06844:  MOVWF  x6E
06846:  MOVLB  0
06848:  CALL   1E0A
0684C:  MOVFF  03,875
06850:  MOVFF  02,874
06854:  MOVFF  01,873
06858:  MOVFF  00,872
0685C:  CALL   587C
06860:  MOVFF  02,5B7
06864:  MOVFF  01,5B6
....................    Tc=(int16)(Tciclo/0.005); 
06868:  MOVFF  5FD,86D
0686C:  MOVFF  5FC,86C
06870:  MOVFF  5FB,86B
06874:  MOVFF  5FA,86A
06878:  MOVLW  0A
0687A:  MOVLB  8
0687C:  MOVWF  x71
0687E:  MOVLW  D7
06880:  MOVWF  x70
06882:  MOVLW  23
06884:  MOVWF  x6F
06886:  MOVLW  77
06888:  MOVWF  x6E
0688A:  MOVLB  0
0688C:  CALL   1E0A
06890:  MOVFF  03,875
06894:  MOVFF  02,874
06898:  MOVFF  01,873
0689C:  MOVFF  00,872
068A0:  CALL   587C
068A4:  MOVFF  02,5B9
068A8:  MOVFF  01,5B8
....................           
.................... //--------------------------------------------------------------------------------------------------------------------//    
.................... } 
068AC:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
01A52:  MOVLB  8
01A54:  MOVFF  86D,01
01A58:  MOVFF  86E,03
01A5C:  MOVFF  86D,873
01A60:  MOVFF  86E,874
01A64:  MOVLW  08
01A66:  MOVWF  FEA
01A68:  MOVLW  46
01A6A:  MOVWF  FE9
01A6C:  MOVFF  86E,FE2
01A70:  MOVFF  86D,FE1
01A74:  MOVF   FE7,F
01A76:  MOVFF  FE6,FEE
01A7A:  BNZ   1A74
....................     
....................    if(sombreado==3) 
01A7C:  MOVF   x71,W
01A7E:  SUBLW  03
01A80:  BNZ   1AA8
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
01A82:  MOVLW  01
01A84:  ADDWF  x6F,W
01A86:  MOVWF  x73
01A88:  MOVLW  01
01A8A:  ADDWF  x70,W
01A8C:  MOVWF  x74
01A8E:  MOVFF  873,87E
01A92:  MOVWF  x7F
01A94:  MOVLW  08
01A96:  MOVWF  x81
01A98:  MOVLW  46
01A9A:  MOVWF  x80
01A9C:  MOVFF  872,882
01AA0:  CLRF   x83
01AA2:  MOVLB  0
01AA4:  RCALL  189A
01AA6:  MOVLB  8
....................    if(sombreado==2) 
01AA8:  MOVF   x71,W
01AAA:  SUBLW  02
01AAC:  BNZ   1AD6
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
01AAE:  MOVLW  01
01AB0:  ADDWF  x6F,W
01AB2:  MOVWF  x73
01AB4:  MOVLW  01
01AB6:  ADDWF  x70,W
01AB8:  MOVWF  x74
01ABA:  MOVFF  873,87E
01ABE:  MOVWF  x7F
01AC0:  MOVLW  08
01AC2:  MOVWF  x81
01AC4:  MOVLW  46
01AC6:  MOVWF  x80
01AC8:  MOVFF  872,882
01ACC:  MOVLW  01
01ACE:  MOVWF  x83
01AD0:  MOVLB  0
01AD2:  RCALL  189A
01AD4:  MOVLB  8
....................    if(sombreado==1) 
01AD6:  DECFSZ x71,W
01AD8:  BRA    1B24
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
01ADA:  MOVF   x72,W
01ADC:  MULLW  08
01ADE:  MOVF   FF3,W
01AE0:  ADDWF  x70,W
01AE2:  MOVWF  x73
01AE4:  CLRF   x7E
01AE6:  MOVFF  870,87F
01AEA:  MOVLW  7F
01AEC:  MOVWF  x80
01AEE:  MOVFF  873,881
01AF2:  MOVLW  01
01AF4:  MOVWF  x82
01AF6:  MOVWF  x83
01AF8:  MOVLB  0
01AFA:  RCALL  17D8
01AFC:  MOVLW  01
01AFE:  MOVLB  8
01B00:  ADDWF  x6F,W
01B02:  MOVWF  x73
01B04:  MOVLW  01
01B06:  ADDWF  x70,W
01B08:  MOVWF  x74
01B0A:  MOVFF  873,87E
01B0E:  MOVWF  x7F
01B10:  MOVLW  08
01B12:  MOVWF  x81
01B14:  MOVLW  46
01B16:  MOVWF  x80
01B18:  MOVFF  872,882
01B1C:  CLRF   x83
01B1E:  MOVLB  0
01B20:  RCALL  189A
01B22:  MOVLB  8
....................    if(sombreado==0) 
01B24:  MOVF   x71,F
01B26:  BNZ   1B72
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
01B28:  MOVF   x72,W
01B2A:  MULLW  08
01B2C:  MOVF   FF3,W
01B2E:  ADDWF  x70,W
01B30:  MOVWF  x73
01B32:  CLRF   x7E
01B34:  MOVFF  870,87F
01B38:  MOVLW  7F
01B3A:  MOVWF  x80
01B3C:  MOVFF  873,881
01B40:  MOVLW  01
01B42:  MOVWF  x82
01B44:  CLRF   x83
01B46:  MOVLB  0
01B48:  RCALL  17D8
01B4A:  MOVLW  01
01B4C:  MOVLB  8
01B4E:  ADDWF  x6F,W
01B50:  MOVWF  x73
01B52:  MOVLW  01
01B54:  ADDWF  x70,W
01B56:  MOVWF  x74
01B58:  MOVFF  873,87E
01B5C:  MOVWF  x7F
01B5E:  MOVLW  08
01B60:  MOVWF  x81
01B62:  MOVLW  46
01B64:  MOVWF  x80
01B66:  MOVFF  872,882
01B6A:  MOVLW  01
01B6C:  MOVWF  x83
01B6E:  MOVLB  0
01B70:  RCALL  189A
....................    glcd_update(); 
01B72:  MOVLB  0
01B74:  RCALL  147E
.................... } 
01B76:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==11) 
*
0443E:  MOVLB  8
04440:  MOVF   x71,W
04442:  SUBLW  0B
04444:  BNZ   4504
....................    { 
....................       sprintf(voltage, "%02Lu", digito); 
04446:  MOVLW  08
04448:  MOVWF  x65
0444A:  MOVLW  73
0444C:  MOVWF  x64
0444E:  MOVLW  0B
04450:  MOVWF  FE9
04452:  MOVFF  86E,87D
04456:  MOVFF  86D,87C
0445A:  MOVLB  0
0445C:  RCALL  3F9E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
0445E:  MOVLW  02
04460:  MOVLB  8
04462:  SUBWF  x70,W
04464:  MOVWF  x7C
04466:  MOVF   x72,W
04468:  MULLW  08
0446A:  MOVF   FF3,W
0446C:  ADDWF  x70,W
0446E:  MOVWF  x7D
04470:  CLRF   x7E
04472:  MOVFF  87C,87F
04476:  MOVLW  7F
04478:  MOVWF  x80
0447A:  MOVFF  87D,881
0447E:  MOVLW  01
04480:  MOVWF  x82
04482:  MOVWF  x83
04484:  MOVLB  0
04486:  CALL   17D8
....................       strcpy(Menus.Letra,palabra); 
0448A:  MOVLB  8
0448C:  MOVFF  86B,01
04490:  MOVFF  86C,03
04494:  MOVFF  86B,87C
04498:  MOVFF  86C,87D
0449C:  MOVLW  08
0449E:  MOVWF  FEA
044A0:  MOVLW  46
044A2:  MOVWF  FE9
044A4:  MOVFF  86C,FE2
044A8:  MOVFF  86B,FE1
044AC:  MOVF   FE7,F
044AE:  MOVFF  FE6,FEE
044B2:  BNZ   44AC
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
044B4:  MOVLW  5A
044B6:  ADDWF  x6F,W
044B8:  MOVWF  x7C
044BA:  MOVLW  01
044BC:  ADDWF  x70,W
044BE:  MOVWF  x7D
044C0:  MOVFF  87C,87E
044C4:  MOVWF  x7F
044C6:  MOVLW  08
044C8:  MOVWF  x81
044CA:  MOVLW  73
044CC:  MOVWF  x80
044CE:  MOVFF  872,882
044D2:  CLRF   x83
044D4:  MOVLB  0
044D6:  CALL   189A
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
044DA:  MOVLW  01
044DC:  MOVLB  8
044DE:  ADDWF  x6F,W
044E0:  MOVWF  x7C
044E2:  MOVLW  01
044E4:  ADDWF  x70,W
044E6:  MOVWF  x7D
044E8:  MOVFF  87C,87E
044EC:  MOVWF  x7F
044EE:  MOVLW  08
044F0:  MOVWF  x81
044F2:  MOVLW  46
044F4:  MOVWF  x80
044F6:  MOVFF  872,882
044FA:  CLRF   x83
044FC:  MOVLB  0
044FE:  CALL   189A
04502:  MOVLB  8
....................    } 
....................    if(sombreado==10) 
04504:  MOVF   x71,W
04506:  SUBLW  0A
04508:  BNZ   45CC
....................    { 
....................       sprintf(voltage, "%02Lu", digito); 
0450A:  MOVLW  08
0450C:  MOVWF  x65
0450E:  MOVLW  73
04510:  MOVWF  x64
04512:  MOVLW  0B
04514:  MOVWF  FE9
04516:  MOVFF  86E,87D
0451A:  MOVFF  86D,87C
0451E:  MOVLB  0
04520:  RCALL  3F9E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
04522:  MOVLW  02
04524:  MOVLB  8
04526:  SUBWF  x70,W
04528:  MOVWF  x7C
0452A:  MOVF   x72,W
0452C:  MULLW  08
0452E:  MOVF   FF3,W
04530:  ADDWF  x70,W
04532:  MOVWF  x7D
04534:  CLRF   x7E
04536:  MOVFF  87C,87F
0453A:  MOVLW  7F
0453C:  MOVWF  x80
0453E:  MOVFF  87D,881
04542:  MOVLW  01
04544:  MOVWF  x82
04546:  CLRF   x83
04548:  MOVLB  0
0454A:  CALL   17D8
....................       strcpy(Menus.Letra,palabra); 
0454E:  MOVLB  8
04550:  MOVFF  86B,01
04554:  MOVFF  86C,03
04558:  MOVFF  86B,87C
0455C:  MOVFF  86C,87D
04560:  MOVLW  08
04562:  MOVWF  FEA
04564:  MOVLW  46
04566:  MOVWF  FE9
04568:  MOVFF  86C,FE2
0456C:  MOVFF  86B,FE1
04570:  MOVF   FE7,F
04572:  MOVFF  FE6,FEE
04576:  BNZ   4570
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
04578:  MOVLW  5A
0457A:  ADDWF  x6F,W
0457C:  MOVWF  x7C
0457E:  MOVLW  01
04580:  ADDWF  x70,W
04582:  MOVWF  x7D
04584:  MOVFF  87C,87E
04588:  MOVWF  x7F
0458A:  MOVLW  08
0458C:  MOVWF  x81
0458E:  MOVLW  73
04590:  MOVWF  x80
04592:  MOVFF  872,882
04596:  MOVLW  01
04598:  MOVWF  x83
0459A:  MOVLB  0
0459C:  CALL   189A
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
045A0:  MOVLW  01
045A2:  MOVLB  8
045A4:  ADDWF  x6F,W
045A6:  MOVWF  x7C
045A8:  MOVLW  01
045AA:  ADDWF  x70,W
045AC:  MOVWF  x7D
045AE:  MOVFF  87C,87E
045B2:  MOVWF  x7F
045B4:  MOVLW  08
045B6:  MOVWF  x81
045B8:  MOVLW  46
045BA:  MOVWF  x80
045BC:  MOVFF  872,882
045C0:  MOVLW  01
045C2:  MOVWF  x83
045C4:  MOVLB  0
045C6:  CALL   189A
045CA:  MOVLB  8
....................    } 
....................     
....................    if(sombreado==1) 
045CC:  DECFSZ x71,W
045CE:  BRA    46FA
....................    { 
....................       sprintf(voltage, "%04Lu", digito); 
045D0:  MOVLW  08
045D2:  MOVWF  x65
045D4:  MOVLW  73
045D6:  MOVWF  x64
045D8:  MOVLW  09
045DA:  MOVWF  FE9
045DC:  MOVFF  86E,87D
045E0:  MOVFF  86D,87C
045E4:  MOVLB  0
045E6:  RCALL  3F9E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
045E8:  MOVLW  02
045EA:  MOVLB  8
045EC:  SUBWF  x70,W
045EE:  MOVWF  x7C
045F0:  MOVF   x72,W
045F2:  MULLW  08
045F4:  MOVF   FF3,W
045F6:  ADDWF  x70,W
045F8:  MOVWF  x7D
045FA:  CLRF   x7E
045FC:  MOVFF  87C,87F
04600:  MOVLW  7F
04602:  MOVWF  x80
04604:  MOVFF  87D,881
04608:  MOVLW  01
0460A:  MOVWF  x82
0460C:  MOVWF  x83
0460E:  MOVLB  0
04610:  CALL   17D8
....................       strcpy(Menus.Letra,palabra); 
04614:  MOVLB  8
04616:  MOVFF  86B,01
0461A:  MOVFF  86C,03
0461E:  MOVFF  86B,87C
04622:  MOVFF  86C,87D
04626:  MOVLW  08
04628:  MOVWF  FEA
0462A:  MOVLW  46
0462C:  MOVWF  FE9
0462E:  MOVFF  86C,FE2
04632:  MOVFF  86B,FE1
04636:  MOVF   FE7,F
04638:  MOVFF  FE6,FEE
0463C:  BNZ   4636
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
0463E:  MOVLW  5A
04640:  ADDWF  x6F,W
04642:  MOVWF  x7C
04644:  MOVLW  01
04646:  ADDWF  x70,W
04648:  MOVWF  x7D
0464A:  MOVFF  87C,87E
0464E:  MOVWF  x7F
04650:  MOVLW  08
04652:  MOVWF  x81
04654:  MOVLW  73
04656:  MOVWF  x80
04658:  MOVFF  872,882
0465C:  CLRF   x83
0465E:  MOVLB  0
04660:  CALL   189A
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
04664:  MOVLW  01
04666:  MOVLB  8
04668:  ADDWF  x6F,W
0466A:  MOVWF  x7C
0466C:  MOVLW  01
0466E:  ADDWF  x70,W
04670:  MOVWF  x7D
04672:  MOVFF  87C,87E
04676:  MOVWF  x7F
04678:  MOVLW  08
0467A:  MOVWF  x81
0467C:  MOVLW  46
0467E:  MOVWF  x80
04680:  MOVFF  872,882
04684:  CLRF   x83
04686:  MOVLB  0
04688:  CALL   189A
....................       strcpy(Menus.Letra,"C"); 
0468C:  MOVLW  08
0468E:  MOVWF  FEA
04690:  MOVLW  46
04692:  MOVWF  FE9
04694:  MOVFF  FF2,87C
04698:  BCF    FF2.7
0469A:  MOVLW  00
0469C:  CALL   06D2
046A0:  TBLRD*-
046A2:  TBLRD*+
046A4:  MOVF   FF5,W
046A6:  MOVWF  FEE
046A8:  IORLW  00
046AA:  BNZ   46A2
046AC:  MOVLB  8
046AE:  BTFSC  x7C.7
046B0:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
046B2:  MOVLW  78
046B4:  ADDWF  x6F,W
046B6:  MOVWF  x7C
046B8:  MOVLW  01
046BA:  ADDWF  x70,W
046BC:  MOVWF  x7D
046BE:  MOVFF  87C,87E
046C2:  MOVWF  x7F
046C4:  MOVLW  08
046C6:  MOVWF  x81
046C8:  MOVLW  46
046CA:  MOVWF  x80
046CC:  MOVFF  872,882
046D0:  CLRF   x83
046D2:  MOVLB  0
046D4:  CALL   189A
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
046D8:  MOVLW  73
046DA:  MOVLB  8
046DC:  ADDWF  x6F,W
046DE:  MOVWF  x7C
046E0:  MOVLW  01
046E2:  SUBWF  x70,W
046E4:  MOVWF  x7D
046E6:  MOVFF  87C,87E
046EA:  MOVWF  x7F
046EC:  MOVLW  01
046EE:  MOVWF  x80
046F0:  CLRF   x81
046F2:  CLRF   x82
046F4:  MOVLB  0
046F6:  RCALL  4214
046F8:  MOVLB  8
....................    } 
....................    if(sombreado==0) 
046FA:  MOVF   x71,F
046FC:  BTFSS  FD8.2
046FE:  BRA    482E
....................    { 
....................       sprintf(voltage, "%04Lu", digito); 
04700:  MOVLW  08
04702:  MOVWF  x65
04704:  MOVLW  73
04706:  MOVWF  x64
04708:  MOVLW  09
0470A:  MOVWF  FE9
0470C:  MOVFF  86E,87D
04710:  MOVFF  86D,87C
04714:  MOVLB  0
04716:  RCALL  3F9E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
04718:  MOVLW  02
0471A:  MOVLB  8
0471C:  SUBWF  x70,W
0471E:  MOVWF  x7C
04720:  MOVF   x72,W
04722:  MULLW  08
04724:  MOVF   FF3,W
04726:  ADDWF  x70,W
04728:  MOVWF  x7D
0472A:  CLRF   x7E
0472C:  MOVFF  87C,87F
04730:  MOVLW  7F
04732:  MOVWF  x80
04734:  MOVFF  87D,881
04738:  MOVLW  01
0473A:  MOVWF  x82
0473C:  CLRF   x83
0473E:  MOVLB  0
04740:  CALL   17D8
....................       strcpy(Menus.Letra,palabra); 
04744:  MOVLB  8
04746:  MOVFF  86B,01
0474A:  MOVFF  86C,03
0474E:  MOVFF  86B,87C
04752:  MOVFF  86C,87D
04756:  MOVLW  08
04758:  MOVWF  FEA
0475A:  MOVLW  46
0475C:  MOVWF  FE9
0475E:  MOVFF  86C,FE2
04762:  MOVFF  86B,FE1
04766:  MOVF   FE7,F
04768:  MOVFF  FE6,FEE
0476C:  BNZ   4766
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
0476E:  MOVLW  5A
04770:  ADDWF  x6F,W
04772:  MOVWF  x7C
04774:  MOVLW  01
04776:  ADDWF  x70,W
04778:  MOVWF  x7D
0477A:  MOVFF  87C,87E
0477E:  MOVWF  x7F
04780:  MOVLW  08
04782:  MOVWF  x81
04784:  MOVLW  73
04786:  MOVWF  x80
04788:  MOVFF  872,882
0478C:  MOVLW  01
0478E:  MOVWF  x83
04790:  MOVLB  0
04792:  CALL   189A
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
04796:  MOVLW  01
04798:  MOVLB  8
0479A:  ADDWF  x6F,W
0479C:  MOVWF  x7C
0479E:  MOVLW  01
047A0:  ADDWF  x70,W
047A2:  MOVWF  x7D
047A4:  MOVFF  87C,87E
047A8:  MOVWF  x7F
047AA:  MOVLW  08
047AC:  MOVWF  x81
047AE:  MOVLW  46
047B0:  MOVWF  x80
047B2:  MOVFF  872,882
047B6:  MOVLW  01
047B8:  MOVWF  x83
047BA:  MOVLB  0
047BC:  CALL   189A
....................       strcpy(Menus.Letra,"C"); 
047C0:  MOVLW  08
047C2:  MOVWF  FEA
047C4:  MOVLW  46
047C6:  MOVWF  FE9
047C8:  MOVFF  FF2,87C
047CC:  BCF    FF2.7
047CE:  MOVLW  00
047D0:  CALL   06D2
047D4:  TBLRD*-
047D6:  TBLRD*+
047D8:  MOVF   FF5,W
047DA:  MOVWF  FEE
047DC:  IORLW  00
047DE:  BNZ   47D6
047E0:  MOVLB  8
047E2:  BTFSC  x7C.7
047E4:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
047E6:  MOVLW  78
047E8:  ADDWF  x6F,W
047EA:  MOVWF  x7C
047EC:  MOVLW  01
047EE:  ADDWF  x70,W
047F0:  MOVWF  x7D
047F2:  MOVFF  87C,87E
047F6:  MOVWF  x7F
047F8:  MOVLW  08
047FA:  MOVWF  x81
047FC:  MOVLW  46
047FE:  MOVWF  x80
04800:  MOVFF  872,882
04804:  MOVLW  01
04806:  MOVWF  x83
04808:  MOVLB  0
0480A:  CALL   189A
....................       glcd_circle(x+115,y-1,1,NO,ON); 
0480E:  MOVLW  73
04810:  MOVLB  8
04812:  ADDWF  x6F,W
04814:  MOVWF  x7C
04816:  MOVLW  01
04818:  SUBWF  x70,W
0481A:  MOVWF  x7D
0481C:  MOVFF  87C,87E
04820:  MOVWF  x7F
04822:  MOVLW  01
04824:  MOVWF  x80
04826:  CLRF   x81
04828:  MOVWF  x82
0482A:  MOVLB  0
0482C:  RCALL  4214
....................    } 
....................    glcd_update(); 
0482E:  MOVLB  0
04830:  CALL   147E
.................... } 
04834:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
03C6E:  MOVLB  8
03C70:  MOVF   x6C,W
03C72:  SUBLW  02
03C74:  BNZ   3CE6
....................    { 
....................       sprintf(voltage, "%03u", digito); 
03C76:  MOVLW  08
03C78:  MOVWF  x65
03C7A:  MOVLW  6E
03C7C:  MOVWF  x64
03C7E:  MOVFF  869,877
03C82:  MOVLW  03
03C84:  MOVWF  x78
03C86:  MOVLB  0
03C88:  RCALL  3BE8
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
03C8A:  MOVLB  8
03C8C:  MOVF   x6D,W
03C8E:  MULLW  12
03C90:  MOVF   FF3,W
03C92:  ADDWF  x6A,W
03C94:  MOVWF  x77
03C96:  MOVF   x6D,W
03C98:  MULLW  08
03C9A:  MOVF   FF3,W
03C9C:  ADDWF  x6B,W
03C9E:  MOVWF  x78
03CA0:  MOVFF  86A,87E
03CA4:  MOVFF  86B,87F
03CA8:  MOVFF  877,880
03CAC:  MOVWF  x81
03CAE:  MOVLW  01
03CB0:  MOVWF  x82
03CB2:  MOVWF  x83
03CB4:  MOVLB  0
03CB6:  CALL   17D8
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
03CBA:  MOVLW  01
03CBC:  MOVLB  8
03CBE:  ADDWF  x6A,W
03CC0:  MOVWF  x77
03CC2:  MOVLW  01
03CC4:  ADDWF  x6B,W
03CC6:  MOVWF  x78
03CC8:  MOVFF  877,87E
03CCC:  MOVWF  x7F
03CCE:  MOVLW  08
03CD0:  MOVWF  x81
03CD2:  MOVLW  6E
03CD4:  MOVWF  x80
03CD6:  MOVFF  86D,882
03CDA:  CLRF   x83
03CDC:  MOVLB  0
03CDE:  CALL   189A
....................    } 
....................    else 
03CE2:  BRA    3E2A
03CE4:  MOVLB  8
....................    { 
....................       if(sombreado==3) 
03CE6:  MOVF   x6C,W
03CE8:  SUBLW  03
03CEA:  BNZ   3D5C
....................       { 
....................          sprintf(voltage, "%03u", digito); 
03CEC:  MOVLW  08
03CEE:  MOVWF  x65
03CF0:  MOVLW  6E
03CF2:  MOVWF  x64
03CF4:  MOVFF  869,877
03CF8:  MOVLW  03
03CFA:  MOVWF  x78
03CFC:  MOVLB  0
03CFE:  RCALL  3BE8
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
03D00:  MOVLB  8
03D02:  MOVF   x6D,W
03D04:  MULLW  12
03D06:  MOVF   FF3,W
03D08:  ADDWF  x6A,W
03D0A:  MOVWF  x77
03D0C:  MOVF   x6D,W
03D0E:  MULLW  08
03D10:  MOVF   FF3,W
03D12:  ADDWF  x6B,W
03D14:  MOVWF  x78
03D16:  MOVFF  86A,87E
03D1A:  MOVFF  86B,87F
03D1E:  MOVFF  877,880
03D22:  MOVWF  x81
03D24:  MOVLW  01
03D26:  MOVWF  x82
03D28:  CLRF   x83
03D2A:  MOVLB  0
03D2C:  CALL   17D8
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
03D30:  MOVLW  01
03D32:  MOVLB  8
03D34:  ADDWF  x6A,W
03D36:  MOVWF  x77
03D38:  MOVLW  01
03D3A:  ADDWF  x6B,W
03D3C:  MOVWF  x78
03D3E:  MOVFF  877,87E
03D42:  MOVWF  x7F
03D44:  MOVLW  08
03D46:  MOVWF  x81
03D48:  MOVLW  6E
03D4A:  MOVWF  x80
03D4C:  MOVFF  86D,882
03D50:  MOVLW  01
03D52:  MOVWF  x83
03D54:  MOVLB  0
03D56:  CALL   189A
03D5A:  MOVLB  8
....................       } 
....................       sprintf(voltage, "%u", digito); 
03D5C:  MOVLW  08
03D5E:  MOVWF  x65
03D60:  MOVLW  6E
03D62:  MOVWF  x64
03D64:  MOVFF  869,877
03D68:  MOVLW  1B
03D6A:  MOVWF  x78
03D6C:  MOVLB  0
03D6E:  RCALL  3BE8
....................       if(sombreado==1) 
03D70:  MOVLB  8
03D72:  DECFSZ x6C,W
03D74:  BRA    3DCE
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
03D76:  MOVF   x6D,W
03D78:  MULLW  05
03D7A:  MOVF   FF3,W
03D7C:  ADDWF  x6A,W
03D7E:  MOVWF  x77
03D80:  MOVF   x6D,W
03D82:  MULLW  08
03D84:  MOVF   FF3,W
03D86:  ADDWF  x6B,W
03D88:  MOVWF  x78
03D8A:  MOVFF  86A,87E
03D8E:  MOVFF  86B,87F
03D92:  MOVFF  877,880
03D96:  MOVWF  x81
03D98:  MOVLW  01
03D9A:  MOVWF  x82
03D9C:  MOVWF  x83
03D9E:  MOVLB  0
03DA0:  CALL   17D8
03DA4:  MOVLW  01
03DA6:  MOVLB  8
03DA8:  ADDWF  x6A,W
03DAA:  MOVWF  x77
03DAC:  MOVLW  01
03DAE:  ADDWF  x6B,W
03DB0:  MOVWF  x78
03DB2:  MOVFF  877,87E
03DB6:  MOVWF  x7F
03DB8:  MOVLW  08
03DBA:  MOVWF  x81
03DBC:  MOVLW  6E
03DBE:  MOVWF  x80
03DC0:  MOVFF  86D,882
03DC4:  CLRF   x83
03DC6:  MOVLB  0
03DC8:  CALL   189A
03DCC:  MOVLB  8
....................       if(sombreado==0) 
03DCE:  MOVF   x6C,F
03DD0:  BNZ   3E2C
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
03DD2:  MOVF   x6D,W
03DD4:  MULLW  05
03DD6:  MOVF   FF3,W
03DD8:  ADDWF  x6A,W
03DDA:  MOVWF  x77
03DDC:  MOVF   x6D,W
03DDE:  MULLW  08
03DE0:  MOVF   FF3,W
03DE2:  ADDWF  x6B,W
03DE4:  MOVWF  x78
03DE6:  MOVFF  86A,87E
03DEA:  MOVFF  86B,87F
03DEE:  MOVFF  877,880
03DF2:  MOVWF  x81
03DF4:  MOVLW  01
03DF6:  MOVWF  x82
03DF8:  CLRF   x83
03DFA:  MOVLB  0
03DFC:  CALL   17D8
03E00:  MOVLW  01
03E02:  MOVLB  8
03E04:  ADDWF  x6A,W
03E06:  MOVWF  x77
03E08:  MOVLW  01
03E0A:  ADDWF  x6B,W
03E0C:  MOVWF  x78
03E0E:  MOVFF  877,87E
03E12:  MOVWF  x7F
03E14:  MOVLW  08
03E16:  MOVWF  x81
03E18:  MOVLW  6E
03E1A:  MOVWF  x80
03E1C:  MOVFF  86D,882
03E20:  MOVLW  01
03E22:  MOVWF  x83
03E24:  MOVLB  0
03E26:  CALL   189A
03E2A:  MOVLB  8
....................    } 
....................    glcd_update(); 
03E2C:  MOVLB  0
03E2E:  CALL   147E
.................... } 
03E32:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
0405C:  MOVLB  8
0405E:  MOVF   x6F,W
04060:  SUBLW  02
04062:  BNZ   40D8
....................    { 
....................       sprintf(voltage, "%04Lu", digito); 
04064:  MOVLW  08
04066:  MOVWF  x65
04068:  MOVLW  71
0406A:  MOVWF  x64
0406C:  MOVLW  09
0406E:  MOVWF  FE9
04070:  MOVFF  86C,87D
04074:  MOVFF  86B,87C
04078:  MOVLB  0
0407A:  RCALL  3F9E
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
0407C:  MOVLB  8
0407E:  MOVF   x70,W
04080:  MULLW  12
04082:  MOVF   FF3,W
04084:  ADDWF  x6D,W
04086:  MOVWF  x7A
04088:  MOVF   x70,W
0408A:  MULLW  08
0408C:  MOVF   FF3,W
0408E:  ADDWF  x6E,W
04090:  MOVWF  x7B
04092:  MOVFF  86D,87E
04096:  MOVFF  86E,87F
0409A:  MOVFF  87A,880
0409E:  MOVWF  x81
040A0:  MOVLW  01
040A2:  MOVWF  x82
040A4:  MOVWF  x83
040A6:  MOVLB  0
040A8:  CALL   17D8
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
040AC:  MOVLW  01
040AE:  MOVLB  8
040B0:  ADDWF  x6D,W
040B2:  MOVWF  x7A
040B4:  MOVLW  01
040B6:  ADDWF  x6E,W
040B8:  MOVWF  x7B
040BA:  MOVFF  87A,87E
040BE:  MOVWF  x7F
040C0:  MOVLW  08
040C2:  MOVWF  x81
040C4:  MOVLW  71
040C6:  MOVWF  x80
040C8:  MOVFF  870,882
040CC:  CLRF   x83
040CE:  MOVLB  0
040D0:  CALL   189A
....................    } 
....................    else 
040D4:  BRA    420A
040D6:  MOVLB  8
....................    { 
....................       sprintf(voltage, "%04Lu", digito); 
040D8:  MOVLW  08
040DA:  MOVWF  x65
040DC:  MOVLW  71
040DE:  MOVWF  x64
040E0:  MOVLW  09
040E2:  MOVWF  FE9
040E4:  MOVFF  86C,87D
040E8:  MOVFF  86B,87C
040EC:  MOVLB  0
040EE:  RCALL  3F9E
....................     
....................       if(sombreado==4) 
040F0:  MOVLB  8
040F2:  MOVF   x6F,W
040F4:  SUBLW  04
040F6:  BNZ   4152
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
040F8:  MOVF   x70,W
040FA:  MULLW  10
040FC:  MOVF   FF3,W
040FE:  ADDWF  x6D,W
04100:  MOVWF  x7A
04102:  MOVF   x70,W
04104:  MULLW  08
04106:  MOVF   FF3,W
04108:  ADDWF  x6E,W
0410A:  MOVWF  x7B
0410C:  MOVFF  86D,87E
04110:  MOVFF  86E,87F
04114:  MOVFF  87A,880
04118:  MOVWF  x81
0411A:  MOVLW  01
0411C:  MOVWF  x82
0411E:  CLRF   x83
04120:  MOVLB  0
04122:  CALL   17D8
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
04126:  MOVLW  01
04128:  MOVLB  8
0412A:  ADDWF  x6D,W
0412C:  MOVWF  x7A
0412E:  MOVLW  01
04130:  ADDWF  x6E,W
04132:  MOVWF  x7B
04134:  MOVFF  87A,87E
04138:  MOVWF  x7F
0413A:  MOVLW  08
0413C:  MOVWF  x81
0413E:  MOVLW  71
04140:  MOVWF  x80
04142:  MOVFF  870,882
04146:  MOVLW  01
04148:  MOVWF  x83
0414A:  MOVLB  0
0414C:  CALL   189A
04150:  MOVLB  8
....................       } 
....................       if(sombreado==1) 
04152:  DECFSZ x6F,W
04154:  BRA    41AE
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
04156:  MOVF   x70,W
04158:  MULLW  05
0415A:  MOVF   FF3,W
0415C:  ADDWF  x6D,W
0415E:  MOVWF  x7A
04160:  MOVF   x70,W
04162:  MULLW  08
04164:  MOVF   FF3,W
04166:  ADDWF  x6E,W
04168:  MOVWF  x7B
0416A:  MOVFF  86D,87E
0416E:  MOVFF  86E,87F
04172:  MOVFF  87A,880
04176:  MOVWF  x81
04178:  MOVLW  01
0417A:  MOVWF  x82
0417C:  MOVWF  x83
0417E:  MOVLB  0
04180:  CALL   17D8
04184:  MOVLW  01
04186:  MOVLB  8
04188:  ADDWF  x6D,W
0418A:  MOVWF  x7A
0418C:  MOVLW  01
0418E:  ADDWF  x6E,W
04190:  MOVWF  x7B
04192:  MOVFF  87A,87E
04196:  MOVWF  x7F
04198:  MOVLW  08
0419A:  MOVWF  x81
0419C:  MOVLW  71
0419E:  MOVWF  x80
041A0:  MOVFF  870,882
041A4:  CLRF   x83
041A6:  MOVLB  0
041A8:  CALL   189A
041AC:  MOVLB  8
....................       if(sombreado==0) 
041AE:  MOVF   x6F,F
041B0:  BNZ   420C
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
041B2:  MOVF   x70,W
041B4:  MULLW  05
041B6:  MOVF   FF3,W
041B8:  ADDWF  x6D,W
041BA:  MOVWF  x7A
041BC:  MOVF   x70,W
041BE:  MULLW  08
041C0:  MOVF   FF3,W
041C2:  ADDWF  x6E,W
041C4:  MOVWF  x7B
041C6:  MOVFF  86D,87E
041CA:  MOVFF  86E,87F
041CE:  MOVFF  87A,880
041D2:  MOVWF  x81
041D4:  MOVLW  01
041D6:  MOVWF  x82
041D8:  CLRF   x83
041DA:  MOVLB  0
041DC:  CALL   17D8
041E0:  MOVLW  01
041E2:  MOVLB  8
041E4:  ADDWF  x6D,W
041E6:  MOVWF  x7A
041E8:  MOVLW  01
041EA:  ADDWF  x6E,W
041EC:  MOVWF  x7B
041EE:  MOVFF  87A,87E
041F2:  MOVWF  x7F
041F4:  MOVLW  08
041F6:  MOVWF  x81
041F8:  MOVLW  71
041FA:  MOVWF  x80
041FC:  MOVFF  870,882
04200:  MOVLW  01
04202:  MOVWF  x83
04204:  MOVLB  0
04206:  CALL   189A
0420A:  MOVLB  8
....................    } 
....................    glcd_update(); 
0420C:  MOVLB  0
0420E:  CALL   147E
.................... } 
04212:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
054F0:  MOVLB  8
054F2:  MOVF   x66,W
054F4:  SUBLW  05
054F6:  BNZ   559C
....................    for( i = 0 ; i < 64 ; i ++ ) 
054F8:  CLRF   x67
054FA:  MOVF   x67,W
054FC:  SUBLW  3F
054FE:  BNC   559C
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
05500:  CLRF   x68
05502:  MOVF   x68,W
05504:  SUBLW  0F
05506:  BNC   5598
....................       {     
....................          for(k=7;k>-1;k--) 
05508:  MOVLW  07
0550A:  MOVWF  x69
0550C:  MOVF   x69,W
0550E:  XORLW  80
05510:  SUBLW  7F
05512:  BC    5594
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
05514:  CLRF   x6B
05516:  MOVFF  867,86A
0551A:  CLRF   x6D
0551C:  MOVLW  10
0551E:  MOVWF  x6C
05520:  MOVLB  0
05522:  CALL   32B0
05526:  MOVFF  02,86B
0552A:  MOVFF  01,86A
0552E:  MOVLB  8
05530:  MOVF   x68,W
05532:  ADDWF  01,W
05534:  MOVWF  01
05536:  MOVLW  00
05538:  ADDWFC 02,W
0553A:  MOVWF  03
0553C:  MOVF   01,W
0553E:  MOVFF  FF2,86A
05542:  BCF    FF2.7
05544:  MOVFF  03,FF7
05548:  MOVLB  0
0554A:  CALL   02B6
0554E:  MOVLB  8
05550:  BTFSC  x6A.7
05552:  BSF    FF2.7
05554:  MOVWF  x6A
05556:  MOVLW  07
05558:  BSF    FD8.0
0555A:  SUBFWB x69,W
0555C:  MOVWF  x6B
0555E:  MOVFF  86A,00
05562:  MOVF   x6B,W
05564:  MOVWF  01
05566:  BZ    5570
05568:  BCF    FD8.0
0556A:  RRCF   00,F
0556C:  DECFSZ 01,F
0556E:  BRA    5568
05570:  BTFSS  00.0
05572:  BRA    5590
....................                glcd_pixel( j*8+k,i, ON ); 
05574:  MOVF   x68,W
05576:  MULLW  08
05578:  MOVF   FF3,W
0557A:  ADDWF  x69,W
0557C:  MOVWF  x6A
0557E:  MOVWF  x9A
05580:  MOVFF  867,89B
05584:  MOVLW  01
05586:  MOVWF  x9C
05588:  MOVLB  0
0558A:  CALL   15DE
0558E:  MOVLB  8
....................          }   
05590:  DECF   x69,F
05592:  BRA    550C
....................       } 
05594:  INCF   x68,F
05596:  BRA    5502
....................    } 
05598:  INCF   x67,F
0559A:  BRA    54FA
....................    } 
....................     
.................... } 
0559C:  MOVLB  0
0559E:  GOTO   9AA2 (RETURN)
....................     
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(int16 adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%04Lu",adc); // Converts adc to text 
*
068AE:  MOVLW  08
068B0:  MOVLB  8
068B2:  MOVWF  x65
068B4:  MOVLW  6D
068B6:  MOVWF  x64
068B8:  MOVLW  09
068BA:  MOVWF  FE9
068BC:  MOVFF  869,87D
068C0:  MOVFF  868,87C
068C4:  MOVLB  0
068C6:  CALL   3F9E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
068CA:  MOVLB  8
068CC:  MOVF   x6C,W
068CE:  MULLW  1B
068D0:  MOVF   FF3,W
068D2:  ADDWF  x6A,W
068D4:  MOVWF  x76
068D6:  MOVF   x6C,W
068D8:  MULLW  08
068DA:  MOVF   FF3,W
068DC:  ADDWF  x6B,W
068DE:  MOVWF  x77
068E0:  MOVFF  86A,87E
068E4:  MOVFF  86B,87F
068E8:  MOVFF  876,880
068EC:  MOVWF  x81
068EE:  MOVLW  01
068F0:  MOVWF  x82
068F2:  CLRF   x83
068F4:  MOVLB  0
068F6:  CALL   17D8
....................    glcd_text57(x, y, voltage, w, ON); 
068FA:  MOVFF  86A,87E
068FE:  MOVFF  86B,87F
06902:  MOVLW  08
06904:  MOVLB  8
06906:  MOVWF  x81
06908:  MOVLW  6D
0690A:  MOVWF  x80
0690C:  MOVFF  86C,882
06910:  MOVLW  01
06912:  MOVWF  x83
06914:  MOVLB  0
06916:  CALL   189A
.................... } 
0691A:  GOTO   A450 (RETURN)
....................  
.................... void displayFloat(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.2f",adc); // Converts adc to text 
*
06B98:  MOVLW  08
06B9A:  MOVLB  8
06B9C:  MOVWF  x65
06B9E:  MOVLW  71
06BA0:  MOVWF  x64
06BA2:  MOVLW  42
06BA4:  MOVWF  FE9
06BA6:  MOVFF  86D,87D
06BAA:  MOVFF  86C,87C
06BAE:  MOVFF  86B,87B
06BB2:  MOVFF  86A,87A
06BB6:  MOVLW  02
06BB8:  MOVWF  x7E
06BBA:  MOVLB  0
06BBC:  BRA    69E2
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
06BBE:  MOVLB  8
06BC0:  MOVF   x70,W
06BC2:  MULLW  1B
06BC4:  MOVF   FF3,W
06BC6:  ADDWF  x6E,W
06BC8:  MOVWF  x7A
06BCA:  MOVF   x70,W
06BCC:  MULLW  08
06BCE:  MOVF   FF3,W
06BD0:  ADDWF  x6F,W
06BD2:  MOVWF  x7B
06BD4:  MOVFF  86E,87E
06BD8:  MOVFF  86F,87F
06BDC:  MOVFF  87A,880
06BE0:  MOVWF  x81
06BE2:  MOVLW  01
06BE4:  MOVWF  x82
06BE6:  CLRF   x83
06BE8:  MOVLB  0
06BEA:  CALL   17D8
....................    glcd_text57(x, y, voltage, w, ON); 
06BEE:  MOVFF  86E,87E
06BF2:  MOVFF  86F,87F
06BF6:  MOVLW  08
06BF8:  MOVLB  8
06BFA:  MOVWF  x81
06BFC:  MOVLW  71
06BFE:  MOVWF  x80
06C00:  MOVFF  870,882
06C04:  MOVLW  01
06C06:  MOVWF  x83
06C08:  MOVLB  0
06C0A:  CALL   189A
.................... } 
06C0E:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
01CA4:  MOVLW  08
01CA6:  MOVLB  8
01CA8:  MOVWF  x65
01CAA:  MOVLW  73
01CAC:  MOVWF  x64
01CAE:  MOVFF  86F,87C
01CB2:  MOVLW  1F
01CB4:  MOVWF  x7D
01CB6:  MOVLB  0
01CB8:  BRA    1BC4
....................     
....................    if(sombreado==1) 
01CBA:  MOVLB  8
01CBC:  DECFSZ x72,W
01CBE:  BRA    1D0E
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
01CC0:  MOVLW  12
01CC2:  ADDWF  x70,W
01CC4:  MOVWF  x7C
01CC6:  MOVLW  18
01CC8:  ADDWF  x71,W
01CCA:  MOVWF  x7D
01CCC:  MOVFF  870,87E
01CD0:  MOVFF  871,87F
01CD4:  MOVFF  87C,880
01CD8:  MOVWF  x81
01CDA:  MOVLW  01
01CDC:  MOVWF  x82
01CDE:  MOVWF  x83
01CE0:  MOVLB  0
01CE2:  RCALL  17D8
01CE4:  MOVLW  02
01CE6:  MOVLB  8
01CE8:  ADDWF  x70,W
01CEA:  MOVWF  x7C
01CEC:  MOVLW  01
01CEE:  ADDWF  x71,W
01CF0:  MOVWF  x7D
01CF2:  MOVFF  87C,87E
01CF6:  MOVWF  x7F
01CF8:  MOVLW  08
01CFA:  MOVWF  x81
01CFC:  MOVLW  73
01CFE:  MOVWF  x80
01D00:  MOVLW  02
01D02:  MOVWF  x82
01D04:  CLRF   x83
01D06:  MOVLB  0
01D08:  RCALL  189A
....................    else    
01D0A:  BRA    1D58
01D0C:  MOVLB  8
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
01D0E:  MOVLW  12
01D10:  ADDWF  x70,W
01D12:  MOVWF  x7C
01D14:  MOVLW  18
01D16:  ADDWF  x71,W
01D18:  MOVWF  x7D
01D1A:  MOVFF  870,87E
01D1E:  MOVFF  871,87F
01D22:  MOVFF  87C,880
01D26:  MOVWF  x81
01D28:  CLRF   x82
01D2A:  CLRF   x83
01D2C:  MOVLB  0
01D2E:  RCALL  17D8
01D30:  MOVLW  02
01D32:  MOVLB  8
01D34:  ADDWF  x70,W
01D36:  MOVWF  x7C
01D38:  MOVLW  01
01D3A:  ADDWF  x71,W
01D3C:  MOVWF  x7D
01D3E:  MOVFF  87C,87E
01D42:  MOVWF  x7F
01D44:  MOVLW  08
01D46:  MOVWF  x81
01D48:  MOVLW  73
01D4A:  MOVWF  x80
01D4C:  MOVLW  02
01D4E:  MOVWF  x82
01D50:  MOVLW  01
01D52:  MOVWF  x83
01D54:  MOVLB  0
01D56:  RCALL  189A
....................  
.................... } 
01D58:  RETLW  00
....................  
.................... void displayTiempos(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
....................    { 
....................       sprintf(voltage, "%02d", digito); 
....................       glcd_rect(x, y, x+(tamano*12), y+(tamano*8), YES, OFF); 
....................       glcd_text57(x+1, y+1, voltage, tamano, ON); 
....................    } 
....................    else 
....................    { 
....................       if(sombreado==3) 
....................       { 
....................          sprintf(voltage, "%03u", digito); 
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
....................       } 
....................       sprintf(voltage, "%u", digito); 
....................       if(sombreado==1) 
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
....................       if(sombreado==0) 
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
....................    } 
....................    glcd_update(); 
.................... } 
....................  
.................... void MuestraSegmento(int8 Opcio,int8 l,int8 Prog ){ 
....................          if(Temperatura1[l+((Prog-1)*Pasos)]>1200) 
*
04836:  MOVLW  01
04838:  MOVLB  8
0483A:  SUBWF  x68,W
0483C:  MULLW  10
0483E:  MOVF   FF3,W
04840:  ADDWF  x67,W
04842:  MOVWF  00
04844:  BCF    FD8.0
04846:  RLCF   00,F
04848:  MOVF   00,W
0484A:  CLRF   03
0484C:  ADDLW  66
0484E:  MOVWF  FE9
04850:  MOVLW  06
04852:  ADDWFC 03,W
04854:  MOVWF  FEA
04856:  MOVFF  FEC,86A
0485A:  MOVF   FED,F
0485C:  MOVFF  FEF,869
04860:  BTFSC  x6A.7
04862:  BRA    4898
04864:  MOVF   x6A,W
04866:  SUBLW  03
04868:  BC    4898
0486A:  XORLW  FF
0486C:  BNZ   4874
0486E:  MOVF   x69,W
04870:  SUBLW  B0
04872:  BC    4898
....................             Temperatura1[l+((Prog-1)*Pasos)]=0; 
04874:  MOVLW  01
04876:  SUBWF  x68,W
04878:  MULLW  10
0487A:  MOVF   FF3,W
0487C:  ADDWF  x67,W
0487E:  MOVWF  00
04880:  BCF    FD8.0
04882:  RLCF   00,F
04884:  MOVF   00,W
04886:  CLRF   03
04888:  ADDLW  66
0488A:  MOVWF  FE9
0488C:  MOVLW  06
0488E:  ADDWFC 03,W
04890:  MOVWF  FEA
04892:  CLRF   FEC
04894:  MOVF   FED,F
04896:  CLRF   FEF
....................           
....................          if(Temperatura1[l+((Prog-1)*Pasos)]<0) 
04898:  MOVLW  01
0489A:  SUBWF  x68,W
0489C:  MULLW  10
0489E:  MOVF   FF3,W
048A0:  ADDWF  x67,W
048A2:  MOVWF  00
048A4:  BCF    FD8.0
048A6:  RLCF   00,F
048A8:  MOVF   00,W
048AA:  CLRF   03
048AC:  ADDLW  66
048AE:  MOVWF  FE9
048B0:  MOVLW  06
048B2:  ADDWFC 03,W
048B4:  MOVWF  FEA
048B6:  MOVFF  FEC,86A
048BA:  MOVF   FED,F
048BC:  MOVFF  FEF,869
048C0:  BTFSC  x6A.7
048C2:  BRA    48C6
048C4:  BRA    48EE
....................             Temperatura1[l+((Prog-1)*Pasos)]=1200; 
048C6:  MOVLW  01
048C8:  SUBWF  x68,W
048CA:  MULLW  10
048CC:  MOVF   FF3,W
048CE:  ADDWF  x67,W
048D0:  MOVWF  00
048D2:  BCF    FD8.0
048D4:  RLCF   00,F
048D6:  MOVF   00,W
048D8:  CLRF   03
048DA:  ADDLW  66
048DC:  MOVWF  FE9
048DE:  MOVLW  06
048E0:  ADDWFC 03,W
048E2:  MOVWF  FEA
048E4:  MOVLW  04
048E6:  MOVWF  FEC
048E8:  MOVF   FED,F
048EA:  MOVLW  B0
048EC:  MOVWF  FEF
....................           
....................          if(Temperatura1[l+((Prog-1)*Pasos)]>1100) 
048EE:  MOVLW  01
048F0:  SUBWF  x68,W
048F2:  MULLW  10
048F4:  MOVF   FF3,W
048F6:  ADDWF  x67,W
048F8:  MOVWF  00
048FA:  BCF    FD8.0
048FC:  RLCF   00,F
048FE:  MOVF   00,W
04900:  CLRF   03
04902:  ADDLW  66
04904:  MOVWF  FE9
04906:  MOVLW  06
04908:  ADDWFC 03,W
0490A:  MOVWF  FEA
0490C:  MOVFF  FEC,86A
04910:  MOVF   FED,F
04912:  MOVFF  FEF,869
04916:  BTFSC  x6A.7
04918:  BRA    494E
0491A:  MOVF   x6A,W
0491C:  SUBLW  03
0491E:  BC    494E
04920:  XORLW  FF
04922:  BNZ   492A
04924:  MOVF   x69,W
04926:  SUBLW  4C
04928:  BC    494E
....................             Horas1[l+((Prog-1)*Pasos)]=0; 
0492A:  MOVLW  01
0492C:  SUBWF  x68,W
0492E:  MULLW  10
04930:  MOVF   FF3,W
04932:  ADDWF  x67,W
04934:  MOVWF  00
04936:  BCF    FD8.0
04938:  RLCF   00,F
0493A:  MOVF   00,W
0493C:  CLRF   03
0493E:  ADDLW  06
04940:  MOVWF  FE9
04942:  MOVLW  07
04944:  ADDWFC 03,W
04946:  MOVWF  FEA
04948:  CLRF   FEC
0494A:  MOVF   FED,F
0494C:  CLRF   FEF
....................           
....................          strcpy(Menus.Letra,"P 0"); 
0494E:  MOVLW  08
04950:  MOVWF  FEA
04952:  MOVLW  46
04954:  MOVWF  FE9
04956:  MOVFF  FF2,869
0495A:  BCF    FF2.7
0495C:  MOVLW  00
0495E:  MOVLB  0
04960:  CALL   06F2
04964:  TBLRD*-
04966:  TBLRD*+
04968:  MOVF   FF5,W
0496A:  MOVWF  FEE
0496C:  IORLW  00
0496E:  BNZ   4966
04970:  MOVLB  8
04972:  BTFSC  x69.7
04974:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
04976:  MOVLW  08
04978:  MOVWF  x6E
0497A:  MOVLW  46
0497C:  MOVWF  x6D
0497E:  MOVLW  1E
04980:  MOVWF  x6F
04982:  CLRF   x70
04984:  MOVLW  01
04986:  MOVWF  x71
04988:  MOVLW  02
0498A:  MOVWF  x72
0498C:  MOVLB  0
0498E:  CALL   1A52
....................          displayTiempo(Prog,68,0,1,2); 
04992:  MOVFF  868,869
04996:  MOVLW  44
04998:  MOVLB  8
0499A:  MOVWF  x6A
0499C:  CLRF   x6B
0499E:  MOVLW  01
049A0:  MOVWF  x6C
049A2:  MOVLW  02
049A4:  MOVWF  x6D
049A6:  MOVLB  0
049A8:  CALL   3C6E
....................           
....................          strcpy(Menus.Letra,"Segmento "); 
049AC:  MOVLW  08
049AE:  MOVWF  FEA
049B0:  MOVLW  46
049B2:  MOVWF  FE9
049B4:  MOVFF  FF2,869
049B8:  BCF    FF2.7
049BA:  MOVLW  00
049BC:  CALL   0714
049C0:  TBLRD*-
049C2:  TBLRD*+
049C4:  MOVF   FF5,W
049C6:  MOVWF  FEE
049C8:  IORLW  00
049CA:  BNZ   49C2
049CC:  MOVLB  8
049CE:  BTFSC  x69.7
049D0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,20,1,1); 
049D2:  MOVLW  08
049D4:  MOVWF  x6E
049D6:  MOVLW  46
049D8:  MOVWF  x6D
049DA:  CLRF   x6F
049DC:  MOVLW  14
049DE:  MOVWF  x70
049E0:  MOVLW  01
049E2:  MOVWF  x71
049E4:  MOVWF  x72
049E6:  MOVLB  0
049E8:  CALL   1A52
....................          displayTiempo(l,63,20,1,1); 
049EC:  MOVFF  867,869
049F0:  MOVLW  3F
049F2:  MOVLB  8
049F4:  MOVWF  x6A
049F6:  MOVLW  14
049F8:  MOVWF  x6B
049FA:  MOVLW  01
049FC:  MOVWF  x6C
049FE:  MOVWF  x6D
04A00:  MOVLB  0
04A02:  CALL   3C6E
....................           
....................          strcpy(Menus.Letra,"TA:"); 
04A06:  MOVLW  08
04A08:  MOVWF  FEA
04A0A:  MOVLW  46
04A0C:  MOVWF  FE9
04A0E:  MOVFF  FF2,869
04A12:  BCF    FF2.7
04A14:  MOVLW  00
04A16:  CALL   073C
04A1A:  TBLRD*-
04A1C:  TBLRD*+
04A1E:  MOVF   FF5,W
04A20:  MOVWF  FEE
04A22:  IORLW  00
04A24:  BNZ   4A1C
04A26:  MOVLB  8
04A28:  BTFSC  x69.7
04A2A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,80,20,3,1); 
04A2C:  MOVLW  08
04A2E:  MOVWF  x6E
04A30:  MOVLW  46
04A32:  MOVWF  x6D
04A34:  MOVLW  50
04A36:  MOVWF  x6F
04A38:  MOVLW  14
04A3A:  MOVWF  x70
04A3C:  MOVLW  03
04A3E:  MOVWF  x71
04A40:  MOVLW  01
04A42:  MOVWF  x72
04A44:  MOVLB  0
04A46:  CALL   1A52
....................           
....................          if(l>0) 
04A4A:  MOVLB  8
04A4C:  MOVF   x67,F
04A4E:  BZ    4A9C
....................             displayTemperatura(Temperatura1[l-1+((Prog-1)*Pasos)],100,20,1,1); 
04A50:  MOVLW  01
04A52:  SUBWF  x67,W
04A54:  MOVWF  x69
04A56:  MOVLW  01
04A58:  SUBWF  x68,W
04A5A:  MULLW  10
04A5C:  MOVF   FF3,W
04A5E:  ADDWF  x69,W
04A60:  MOVWF  00
04A62:  BCF    FD8.0
04A64:  RLCF   00,F
04A66:  MOVF   00,W
04A68:  CLRF   03
04A6A:  ADDLW  66
04A6C:  MOVWF  FE9
04A6E:  MOVLW  06
04A70:  ADDWFC 03,W
04A72:  MOVWF  FEA
04A74:  MOVFF  FEC,86A
04A78:  MOVF   FED,F
04A7A:  MOVFF  FEF,869
04A7E:  MOVFF  86A,86C
04A82:  MOVFF  869,86B
04A86:  MOVLW  64
04A88:  MOVWF  x6D
04A8A:  MOVLW  14
04A8C:  MOVWF  x6E
04A8E:  MOVLW  01
04A90:  MOVWF  x6F
04A92:  MOVWF  x70
04A94:  MOVLB  0
04A96:  CALL   405C
04A9A:  MOVLB  8
....................           
....................          if(Opcio==1){ 
04A9C:  DECFSZ x66,W
04A9E:  BRA    4E8E
....................             strcpy(Menus.Letra,"Temperatura:"); 
04AA0:  MOVLW  08
04AA2:  MOVWF  FEA
04AA4:  MOVLW  46
04AA6:  MOVWF  FE9
04AA8:  MOVFF  FF2,869
04AAC:  BCF    FF2.7
04AAE:  MOVLW  00
04AB0:  MOVLB  0
04AB2:  CALL   075E
04AB6:  TBLRD*-
04AB8:  TBLRD*+
04ABA:  MOVF   FF5,W
04ABC:  MOVWF  FEE
04ABE:  IORLW  00
04AC0:  BNZ   4AB8
04AC2:  MOVLB  8
04AC4:  BTFSC  x69.7
04AC6:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1[l+((Prog-1)*Pasos)],0,32,1,1); 
04AC8:  MOVLW  01
04ACA:  SUBWF  x68,W
04ACC:  MULLW  10
04ACE:  MOVF   FF3,W
04AD0:  ADDWF  x67,W
04AD2:  MOVWF  00
04AD4:  BCF    FD8.0
04AD6:  RLCF   00,F
04AD8:  MOVF   00,W
04ADA:  CLRF   03
04ADC:  ADDLW  66
04ADE:  MOVWF  FE9
04AE0:  MOVLW  06
04AE2:  ADDWFC 03,W
04AE4:  MOVWF  FEA
04AE6:  MOVFF  FEC,86A
04AEA:  MOVF   FED,F
04AEC:  MOVFF  FEF,869
04AF0:  MOVLW  08
04AF2:  MOVWF  x6C
04AF4:  MOVLW  46
04AF6:  MOVWF  x6B
04AF8:  MOVFF  86A,86E
04AFC:  MOVFF  869,86D
04B00:  CLRF   x6F
04B02:  MOVLW  20
04B04:  MOVWF  x70
04B06:  MOVLW  01
04B08:  MOVWF  x71
04B0A:  MOVWF  x72
04B0C:  MOVLB  0
04B0E:  RCALL  443E
....................             strcpy(Menus.Letra,"Horas:"); 
04B10:  MOVLW  08
04B12:  MOVWF  FEA
04B14:  MOVLW  46
04B16:  MOVWF  FE9
04B18:  MOVFF  FF2,869
04B1C:  BCF    FF2.7
04B1E:  MOVLW  00
04B20:  CALL   078A
04B24:  TBLRD*-
04B26:  TBLRD*+
04B28:  MOVF   FF5,W
04B2A:  MOVWF  FEE
04B2C:  IORLW  00
04B2E:  BNZ   4B26
04B30:  MOVLB  8
04B32:  BTFSC  x69.7
04B34:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Horas1[l+((Prog-1)*Pasos)],0,44,10,1); 
04B36:  MOVLW  01
04B38:  SUBWF  x68,W
04B3A:  MULLW  10
04B3C:  MOVF   FF3,W
04B3E:  ADDWF  x67,W
04B40:  MOVWF  00
04B42:  BCF    FD8.0
04B44:  RLCF   00,F
04B46:  MOVF   00,W
04B48:  CLRF   03
04B4A:  ADDLW  06
04B4C:  MOVWF  FE9
04B4E:  MOVLW  07
04B50:  ADDWFC 03,W
04B52:  MOVWF  FEA
04B54:  MOVFF  FEC,86A
04B58:  MOVF   FED,F
04B5A:  MOVFF  FEF,869
04B5E:  MOVLW  08
04B60:  MOVWF  x6C
04B62:  MOVLW  46
04B64:  MOVWF  x6B
04B66:  MOVFF  86A,86E
04B6A:  MOVFF  869,86D
04B6E:  CLRF   x6F
04B70:  MOVLW  2C
04B72:  MOVWF  x70
04B74:  MOVLW  0A
04B76:  MOVWF  x71
04B78:  MOVLW  01
04B7A:  MOVWF  x72
04B7C:  MOVLB  0
04B7E:  RCALL  443E
....................             strcpy(Menus.Letra,"Minutos:"); 
04B80:  MOVLW  08
04B82:  MOVWF  FEA
04B84:  MOVLW  46
04B86:  MOVWF  FE9
04B88:  MOVFF  FF2,869
04B8C:  BCF    FF2.7
04B8E:  MOVLW  00
04B90:  CALL   07B0
04B94:  TBLRD*-
04B96:  TBLRD*+
04B98:  MOVF   FF5,W
04B9A:  MOVWF  FEE
04B9C:  IORLW  00
04B9E:  BNZ   4B96
04BA0:  MOVLB  8
04BA2:  BTFSC  x69.7
04BA4:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Minutos1[l+((Prog-1)*Pasos)],0,55,10,1); 
04BA6:  MOVLW  01
04BA8:  SUBWF  x68,W
04BAA:  MULLW  10
04BAC:  MOVF   FF3,W
04BAE:  ADDWF  x67,W
04BB0:  MOVWF  00
04BB2:  BCF    FD8.0
04BB4:  RLCF   00,F
04BB6:  MOVF   00,W
04BB8:  CLRF   03
04BBA:  ADDLW  A6
04BBC:  MOVWF  FE9
04BBE:  MOVLW  07
04BC0:  ADDWFC 03,W
04BC2:  MOVWF  FEA
04BC4:  MOVFF  FEC,86A
04BC8:  MOVF   FED,F
04BCA:  MOVFF  FEF,869
04BCE:  MOVLW  08
04BD0:  MOVWF  x6C
04BD2:  MOVLW  46
04BD4:  MOVWF  x6B
04BD6:  MOVFF  86A,86E
04BDA:  MOVFF  869,86D
04BDE:  CLRF   x6F
04BE0:  MOVLW  37
04BE2:  MOVWF  x70
04BE4:  MOVLW  0A
04BE6:  MOVWF  x71
04BE8:  MOVLW  01
04BEA:  MOVWF  x72
04BEC:  MOVLB  0
04BEE:  RCALL  443E
....................             if(UP)//Si oprime hacia arriba 
04BF0:  BSF    F92.5
04BF2:  BTFSC  F80.5
04BF4:  BRA    4D3E
....................             { 
....................                Buzz_on;delay_ms(10);Buzz_off; 
04BF6:  BSF    F8B.4
04BF8:  BCF    F94.4
04BFA:  MOVLW  0A
04BFC:  MOVLB  8
04BFE:  MOVWF  x6E
04C00:  MOVLB  0
04C02:  CALL   13A4
04C06:  BCF    F8B.4
04C08:  BCF    F94.4
....................                if(tiempoup<4){ 
04C0A:  MOVLB  5
04C0C:  MOVF   x90,W
04C0E:  SUBLW  03
04C10:  BNC   4C40
....................                   flagup=1; 
04C12:  BSF    x87.0
....................                   Temperatura1[l+((Prog-1)*Pasos)]++; 
04C14:  MOVLW  01
04C16:  MOVLB  8
04C18:  SUBWF  x68,W
04C1A:  MULLW  10
04C1C:  MOVF   FF3,W
04C1E:  ADDWF  x67,W
04C20:  MOVWF  00
04C22:  BCF    FD8.0
04C24:  RLCF   00,F
04C26:  MOVF   00,W
04C28:  CLRF   03
04C2A:  ADDLW  66
04C2C:  MOVWF  FE9
04C2E:  MOVLW  06
04C30:  ADDWFC 03,W
04C32:  MOVWF  FEA
04C34:  MOVLW  01
04C36:  ADDWF  FEE,F
04C38:  BNC   4C3C
04C3A:  INCF   FEF,F
....................                } 
....................                else{ 
04C3C:  BRA    4C74
04C3E:  MOVLB  5
....................                   flagup=0; 
04C40:  BCF    x87.0
....................                   Temperatura1[l+((Prog-1)*Pasos)]+=10; 
04C42:  MOVLW  01
04C44:  MOVLB  8
04C46:  SUBWF  x68,W
04C48:  MULLW  10
04C4A:  MOVF   FF3,W
04C4C:  ADDWF  x67,W
04C4E:  MOVWF  00
04C50:  BCF    FD8.0
04C52:  RLCF   00,F
04C54:  MOVF   00,W
04C56:  CLRF   03
04C58:  ADDLW  66
04C5A:  MOVWF  FE9
04C5C:  MOVLW  06
04C5E:  ADDWFC 03,W
04C60:  MOVWF  FEA
04C62:  MOVLW  0A
04C64:  ADDWF  FEF,W
04C66:  MOVWF  01
04C68:  MOVLW  00
04C6A:  ADDWFC FEC,W
04C6C:  MOVF   FED,F
04C6E:  MOVFF  01,FEF
04C72:  MOVWF  FEC
....................                }  
....................                if(l<Pasos-1) 
04C74:  MOVF   x67,W
04C76:  SUBLW  0E
04C78:  BNC   4CDA
....................                   Temperatura1[l+1+((Prog-1)*Pasos)]=Temperatura1[l+((Prog-1)*Pasos)];  
04C7A:  MOVLW  01
04C7C:  ADDWF  x67,W
04C7E:  MOVWF  x69
04C80:  MOVLW  01
04C82:  SUBWF  x68,W
04C84:  MULLW  10
04C86:  MOVF   FF3,W
04C88:  ADDWF  x69,W
04C8A:  MOVWF  00
04C8C:  BCF    FD8.0
04C8E:  RLCF   00,F
04C90:  MOVF   00,W
04C92:  CLRF   03
04C94:  ADDLW  66
04C96:  MOVWF  01
04C98:  MOVLW  06
04C9A:  ADDWFC 03,F
04C9C:  MOVFF  03,86A
04CA0:  MOVLW  01
04CA2:  SUBWF  x68,W
04CA4:  MULLW  10
04CA6:  MOVF   FF3,W
04CA8:  ADDWF  x67,W
04CAA:  MOVWF  00
04CAC:  BCF    FD8.0
04CAE:  RLCF   00,F
04CB0:  MOVF   00,W
04CB2:  CLRF   03
04CB4:  ADDLW  66
04CB6:  MOVWF  FE9
04CB8:  MOVLW  06
04CBA:  ADDWFC 03,W
04CBC:  MOVWF  FEA
04CBE:  MOVFF  FEC,03
04CC2:  MOVF   FED,F
04CC4:  MOVFF  FEF,86B
04CC8:  MOVFF  86A,FEA
04CCC:  MOVFF  01,FE9
04CD0:  MOVFF  03,FEC
04CD4:  MOVF   FED,F
04CD6:  MOVFF  86B,FEF
....................                    
....................                if(Temperatura1[l+((Prog-1)*Pasos)]>1200) 
04CDA:  MOVLW  01
04CDC:  SUBWF  x68,W
04CDE:  MULLW  10
04CE0:  MOVF   FF3,W
04CE2:  ADDWF  x67,W
04CE4:  MOVWF  00
04CE6:  BCF    FD8.0
04CE8:  RLCF   00,F
04CEA:  MOVF   00,W
04CEC:  CLRF   03
04CEE:  ADDLW  66
04CF0:  MOVWF  FE9
04CF2:  MOVLW  06
04CF4:  ADDWFC 03,W
04CF6:  MOVWF  FEA
04CF8:  MOVFF  FEC,86A
04CFC:  MOVF   FED,F
04CFE:  MOVFF  FEF,869
04D02:  BTFSC  x6A.7
04D04:  BRA    4D3A
04D06:  MOVF   x6A,W
04D08:  SUBLW  03
04D0A:  BC    4D3A
04D0C:  XORLW  FF
04D0E:  BNZ   4D16
04D10:  MOVF   x69,W
04D12:  SUBLW  B0
04D14:  BC    4D3A
....................                   Temperatura1[l+((Prog-1)*Pasos)]=0; 
04D16:  MOVLW  01
04D18:  SUBWF  x68,W
04D1A:  MULLW  10
04D1C:  MOVF   FF3,W
04D1E:  ADDWF  x67,W
04D20:  MOVWF  00
04D22:  BCF    FD8.0
04D24:  RLCF   00,F
04D26:  MOVF   00,W
04D28:  CLRF   03
04D2A:  ADDLW  66
04D2C:  MOVWF  FE9
04D2E:  MOVLW  06
04D30:  ADDWFC 03,W
04D32:  MOVWF  FEA
04D34:  CLRF   FEC
04D36:  MOVF   FED,F
04D38:  CLRF   FEF
....................             } 
....................             else 
04D3A:  BRA    4D46
04D3C:  MOVLB  0
....................             { 
....................                flagup=0;tiempoup=0; 
04D3E:  MOVLB  5
04D40:  BCF    x87.0
04D42:  CLRF   x90
04D44:  MOVLB  8
....................             } 
....................                       
....................             if(DOWN)//Si oprime hacia abajo 
04D46:  BSF    F96.0
04D48:  BTFSC  F84.0
04D4A:  BRA    4E86
....................             { 
....................                Buzz_on;delay_ms(10);Buzz_off; 
04D4C:  BSF    F8B.4
04D4E:  BCF    F94.4
04D50:  MOVLW  0A
04D52:  MOVWF  x6E
04D54:  MOVLB  0
04D56:  CALL   13A4
04D5A:  BCF    F8B.4
04D5C:  BCF    F94.4
....................                if(tiempodn<4){ 
04D5E:  MOVLB  5
04D60:  MOVF   x91,W
04D62:  SUBLW  03
04D64:  BNC   4D96
....................                   flagdn=1; 
04D66:  BSF    x87.1
....................                   Temperatura1[l+((Prog-1)*Pasos)]--; 
04D68:  MOVLW  01
04D6A:  MOVLB  8
04D6C:  SUBWF  x68,W
04D6E:  MULLW  10
04D70:  MOVF   FF3,W
04D72:  ADDWF  x67,W
04D74:  MOVWF  00
04D76:  BCF    FD8.0
04D78:  RLCF   00,F
04D7A:  MOVF   00,W
04D7C:  CLRF   03
04D7E:  ADDLW  66
04D80:  MOVWF  FE9
04D82:  MOVLW  06
04D84:  ADDWFC 03,W
04D86:  MOVWF  FEA
04D88:  MOVLW  FF
04D8A:  ADDWF  FEF,F
04D8C:  BC    4D92
04D8E:  MOVF   FEE,F
04D90:  DECF   FED,F
....................                } 
....................                else{ 
04D92:  BRA    4DCE
04D94:  MOVLB  5
....................                   flagdn=0; 
04D96:  BCF    x87.1
....................                   Temperatura1[l+((Prog-1)*Pasos)]-=10; 
04D98:  MOVLW  01
04D9A:  MOVLB  8
04D9C:  SUBWF  x68,W
04D9E:  MULLW  10
04DA0:  MOVF   FF3,W
04DA2:  ADDWF  x67,W
04DA4:  MOVWF  00
04DA6:  BCF    FD8.0
04DA8:  RLCF   00,F
04DAA:  MOVF   00,W
04DAC:  CLRF   03
04DAE:  ADDLW  66
04DB0:  MOVWF  FE9
04DB2:  MOVLW  06
04DB4:  ADDWFC 03,W
04DB6:  MOVWF  FEA
04DB8:  MOVLW  0A
04DBA:  SUBWF  FEF,W
04DBC:  MOVWF  00
04DBE:  MOVLW  00
04DC0:  SUBWFB FEC,W
04DC2:  MOVWF  03
04DC4:  MOVF   00,W
04DC6:  MOVF   FED,F
04DC8:  MOVWF  FEF
04DCA:  MOVFF  03,FEC
....................                } 
....................                Temperatura1[l+1+((Prog-1)*Pasos)]=Temperatura1[l+((Prog-1)*Pasos)];  
04DCE:  MOVLW  01
04DD0:  ADDWF  x67,W
04DD2:  MOVWF  x69
04DD4:  MOVLW  01
04DD6:  SUBWF  x68,W
04DD8:  MULLW  10
04DDA:  MOVF   FF3,W
04DDC:  ADDWF  x69,W
04DDE:  MOVWF  00
04DE0:  BCF    FD8.0
04DE2:  RLCF   00,F
04DE4:  MOVF   00,W
04DE6:  CLRF   03
04DE8:  ADDLW  66
04DEA:  MOVWF  01
04DEC:  MOVLW  06
04DEE:  ADDWFC 03,F
04DF0:  MOVFF  03,86A
04DF4:  MOVLW  01
04DF6:  SUBWF  x68,W
04DF8:  MULLW  10
04DFA:  MOVF   FF3,W
04DFC:  ADDWF  x67,W
04DFE:  MOVWF  00
04E00:  BCF    FD8.0
04E02:  RLCF   00,F
04E04:  MOVF   00,W
04E06:  CLRF   03
04E08:  ADDLW  66
04E0A:  MOVWF  FE9
04E0C:  MOVLW  06
04E0E:  ADDWFC 03,W
04E10:  MOVWF  FEA
04E12:  MOVFF  FEC,03
04E16:  MOVF   FED,F
04E18:  MOVFF  FEF,86B
04E1C:  MOVFF  86A,FEA
04E20:  MOVFF  01,FE9
04E24:  MOVFF  03,FEC
04E28:  MOVF   FED,F
04E2A:  MOVFF  86B,FEF
....................                 
....................                if(Temperatura1[l+((Prog-1)*Pasos)]<0) 
04E2E:  MOVLW  01
04E30:  SUBWF  x68,W
04E32:  MULLW  10
04E34:  MOVF   FF3,W
04E36:  ADDWF  x67,W
04E38:  MOVWF  00
04E3A:  BCF    FD8.0
04E3C:  RLCF   00,F
04E3E:  MOVF   00,W
04E40:  CLRF   03
04E42:  ADDLW  66
04E44:  MOVWF  FE9
04E46:  MOVLW  06
04E48:  ADDWFC 03,W
04E4A:  MOVWF  FEA
04E4C:  MOVFF  FEC,86A
04E50:  MOVF   FED,F
04E52:  MOVFF  FEF,869
04E56:  BTFSC  x6A.7
04E58:  BRA    4E5C
04E5A:  BRA    4E84
....................                   Temperatura1[l+((Prog-1)*Pasos)]=1200; 
04E5C:  MOVLW  01
04E5E:  SUBWF  x68,W
04E60:  MULLW  10
04E62:  MOVF   FF3,W
04E64:  ADDWF  x67,W
04E66:  MOVWF  00
04E68:  BCF    FD8.0
04E6A:  RLCF   00,F
04E6C:  MOVF   00,W
04E6E:  CLRF   03
04E70:  ADDLW  66
04E72:  MOVWF  FE9
04E74:  MOVLW  06
04E76:  ADDWFC 03,W
04E78:  MOVWF  FEA
04E7A:  MOVLW  04
04E7C:  MOVWF  FEC
04E7E:  MOVF   FED,F
04E80:  MOVLW  B0
04E82:  MOVWF  FEF
....................             } 
....................             else{ 
04E84:  BRA    4E8E
....................                flagdn=0;tiempodn=0; 
04E86:  MOVLB  5
04E88:  BCF    x87.1
04E8A:  CLRF   x91
04E8C:  MOVLB  8
....................             } 
....................          } 
....................           
....................          if(Opcio==2){ 
04E8E:  MOVF   x66,W
04E90:  SUBLW  02
04E92:  BTFSS  FD8.2
04E94:  BRA    51BC
....................             strcpy(Menus.Letra,"Temperatura:"); 
04E96:  MOVLW  08
04E98:  MOVWF  FEA
04E9A:  MOVLW  46
04E9C:  MOVWF  FE9
04E9E:  MOVFF  FF2,869
04EA2:  BCF    FF2.7
04EA4:  MOVLW  00
04EA6:  MOVLB  0
04EA8:  CALL   075E
04EAC:  TBLRD*-
04EAE:  TBLRD*+
04EB0:  MOVF   FF5,W
04EB2:  MOVWF  FEE
04EB4:  IORLW  00
04EB6:  BNZ   4EAE
04EB8:  MOVLB  8
04EBA:  BTFSC  x69.7
04EBC:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1[l+((Prog-1)*Pasos)],0,32,0,1); 
04EBE:  MOVLW  01
04EC0:  SUBWF  x68,W
04EC2:  MULLW  10
04EC4:  MOVF   FF3,W
04EC6:  ADDWF  x67,W
04EC8:  MOVWF  00
04ECA:  BCF    FD8.0
04ECC:  RLCF   00,F
04ECE:  MOVF   00,W
04ED0:  CLRF   03
04ED2:  ADDLW  66
04ED4:  MOVWF  FE9
04ED6:  MOVLW  06
04ED8:  ADDWFC 03,W
04EDA:  MOVWF  FEA
04EDC:  MOVFF  FEC,86A
04EE0:  MOVF   FED,F
04EE2:  MOVFF  FEF,869
04EE6:  MOVLW  08
04EE8:  MOVWF  x6C
04EEA:  MOVLW  46
04EEC:  MOVWF  x6B
04EEE:  MOVFF  86A,86E
04EF2:  MOVFF  869,86D
04EF6:  CLRF   x6F
04EF8:  MOVLW  20
04EFA:  MOVWF  x70
04EFC:  CLRF   x71
04EFE:  MOVLW  01
04F00:  MOVWF  x72
04F02:  MOVLB  0
04F04:  CALL   443E
....................             strcpy(Menus.Letra,"Horas:"); 
04F08:  MOVLW  08
04F0A:  MOVWF  FEA
04F0C:  MOVLW  46
04F0E:  MOVWF  FE9
04F10:  MOVFF  FF2,869
04F14:  BCF    FF2.7
04F16:  MOVLW  00
04F18:  CALL   078A
04F1C:  TBLRD*-
04F1E:  TBLRD*+
04F20:  MOVF   FF5,W
04F22:  MOVWF  FEE
04F24:  IORLW  00
04F26:  BNZ   4F1E
04F28:  MOVLB  8
04F2A:  BTFSC  x69.7
04F2C:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Horas1[l+((Prog-1)*Pasos)],0,44,11,1); 
04F2E:  MOVLW  01
04F30:  SUBWF  x68,W
04F32:  MULLW  10
04F34:  MOVF   FF3,W
04F36:  ADDWF  x67,W
04F38:  MOVWF  00
04F3A:  BCF    FD8.0
04F3C:  RLCF   00,F
04F3E:  MOVF   00,W
04F40:  CLRF   03
04F42:  ADDLW  06
04F44:  MOVWF  FE9
04F46:  MOVLW  07
04F48:  ADDWFC 03,W
04F4A:  MOVWF  FEA
04F4C:  MOVFF  FEC,86A
04F50:  MOVF   FED,F
04F52:  MOVFF  FEF,869
04F56:  MOVLW  08
04F58:  MOVWF  x6C
04F5A:  MOVLW  46
04F5C:  MOVWF  x6B
04F5E:  MOVFF  86A,86E
04F62:  MOVFF  869,86D
04F66:  CLRF   x6F
04F68:  MOVLW  2C
04F6A:  MOVWF  x70
04F6C:  MOVLW  0B
04F6E:  MOVWF  x71
04F70:  MOVLW  01
04F72:  MOVWF  x72
04F74:  MOVLB  0
04F76:  CALL   443E
....................             strcpy(Menus.Letra,"Minutos:"); 
04F7A:  MOVLW  08
04F7C:  MOVWF  FEA
04F7E:  MOVLW  46
04F80:  MOVWF  FE9
04F82:  MOVFF  FF2,869
04F86:  BCF    FF2.7
04F88:  MOVLW  00
04F8A:  CALL   07B0
04F8E:  TBLRD*-
04F90:  TBLRD*+
04F92:  MOVF   FF5,W
04F94:  MOVWF  FEE
04F96:  IORLW  00
04F98:  BNZ   4F90
04F9A:  MOVLB  8
04F9C:  BTFSC  x69.7
04F9E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Minutos1[l+((Prog-1)*Pasos)],0,55,10,1); 
04FA0:  MOVLW  01
04FA2:  SUBWF  x68,W
04FA4:  MULLW  10
04FA6:  MOVF   FF3,W
04FA8:  ADDWF  x67,W
04FAA:  MOVWF  00
04FAC:  BCF    FD8.0
04FAE:  RLCF   00,F
04FB0:  MOVF   00,W
04FB2:  CLRF   03
04FB4:  ADDLW  A6
04FB6:  MOVWF  FE9
04FB8:  MOVLW  07
04FBA:  ADDWFC 03,W
04FBC:  MOVWF  FEA
04FBE:  MOVFF  FEC,86A
04FC2:  MOVF   FED,F
04FC4:  MOVFF  FEF,869
04FC8:  MOVLW  08
04FCA:  MOVWF  x6C
04FCC:  MOVLW  46
04FCE:  MOVWF  x6B
04FD0:  MOVFF  86A,86E
04FD4:  MOVFF  869,86D
04FD8:  CLRF   x6F
04FDA:  MOVLW  37
04FDC:  MOVWF  x70
04FDE:  MOVLW  0A
04FE0:  MOVWF  x71
04FE2:  MOVLW  01
04FE4:  MOVWF  x72
04FE6:  MOVLB  0
04FE8:  CALL   443E
....................             if(UP)//Si oprime hacia arriba 
04FEC:  BSF    F92.5
04FEE:  BTFSC  F80.5
04FF0:  BRA    50CE
....................             { 
....................                Buzz_on;delay_ms(10);Buzz_off; 
04FF2:  BSF    F8B.4
04FF4:  BCF    F94.4
04FF6:  MOVLW  0A
04FF8:  MOVLB  8
04FFA:  MOVWF  x6E
04FFC:  MOVLB  0
04FFE:  CALL   13A4
05002:  BCF    F8B.4
05004:  BCF    F94.4
....................                if(tiempoup<4){ 
05006:  MOVLB  5
05008:  MOVF   x90,W
0500A:  SUBLW  03
0500C:  BNC   503C
....................                   flagup=1; 
0500E:  BSF    x87.0
....................                   Horas1[l+((Prog-1)*Pasos)]++; 
05010:  MOVLW  01
05012:  MOVLB  8
05014:  SUBWF  x68,W
05016:  MULLW  10
05018:  MOVF   FF3,W
0501A:  ADDWF  x67,W
0501C:  MOVWF  00
0501E:  BCF    FD8.0
05020:  RLCF   00,F
05022:  MOVF   00,W
05024:  CLRF   03
05026:  ADDLW  06
05028:  MOVWF  FE9
0502A:  MOVLW  07
0502C:  ADDWFC 03,W
0502E:  MOVWF  FEA
05030:  MOVLW  01
05032:  ADDWF  FEE,F
05034:  BNC   5038
05036:  INCF   FEF,F
....................                } 
....................                else{ 
05038:  BRA    5070
0503A:  MOVLB  5
....................                   flagup=0; 
0503C:  BCF    x87.0
....................                   Horas1[l+((Prog-1)*Pasos)]+=10; 
0503E:  MOVLW  01
05040:  MOVLB  8
05042:  SUBWF  x68,W
05044:  MULLW  10
05046:  MOVF   FF3,W
05048:  ADDWF  x67,W
0504A:  MOVWF  00
0504C:  BCF    FD8.0
0504E:  RLCF   00,F
05050:  MOVF   00,W
05052:  CLRF   03
05054:  ADDLW  06
05056:  MOVWF  FE9
05058:  MOVLW  07
0505A:  ADDWFC 03,W
0505C:  MOVWF  FEA
0505E:  MOVLW  0A
05060:  ADDWF  FEF,W
05062:  MOVWF  01
05064:  MOVLW  00
05066:  ADDWFC FEC,W
05068:  MOVF   FED,F
0506A:  MOVFF  01,FEF
0506E:  MOVWF  FEC
....................                } 
....................                if(Horas1[l+((Prog-1)*Pasos)]>99) 
05070:  MOVLW  01
05072:  SUBWF  x68,W
05074:  MULLW  10
05076:  MOVF   FF3,W
05078:  ADDWF  x67,W
0507A:  MOVWF  00
0507C:  BCF    FD8.0
0507E:  RLCF   00,F
05080:  MOVF   00,W
05082:  CLRF   03
05084:  ADDLW  06
05086:  MOVWF  FE9
05088:  MOVLW  07
0508A:  ADDWFC 03,W
0508C:  MOVWF  FEA
0508E:  MOVFF  FEC,86A
05092:  MOVF   FED,F
05094:  MOVFF  FEF,869
05098:  BTFSC  x6A.7
0509A:  BRA    50CA
0509C:  MOVF   x6A,F
0509E:  BNZ   50A6
050A0:  MOVF   x69,W
050A2:  SUBLW  63
050A4:  BC    50CA
....................                   Horas1[l+((Prog-1)*Pasos)]=0; 
050A6:  MOVLW  01
050A8:  SUBWF  x68,W
050AA:  MULLW  10
050AC:  MOVF   FF3,W
050AE:  ADDWF  x67,W
050B0:  MOVWF  00
050B2:  BCF    FD8.0
050B4:  RLCF   00,F
050B6:  MOVF   00,W
050B8:  CLRF   03
050BA:  ADDLW  06
050BC:  MOVWF  FE9
050BE:  MOVLW  07
050C0:  ADDWFC 03,W
050C2:  MOVWF  FEA
050C4:  CLRF   FEC
050C6:  MOVF   FED,F
050C8:  CLRF   FEF
....................             } 
....................             else{ 
050CA:  BRA    50D6
050CC:  MOVLB  0
....................                flagup=0;tiempoup=0; 
050CE:  MOVLB  5
050D0:  BCF    x87.0
050D2:  CLRF   x90
050D4:  MOVLB  8
....................             } 
....................                       
....................             if(DOWN)//Si oprime hacia abajo 
050D6:  BSF    F96.0
050D8:  BTFSC  F84.0
050DA:  BRA    51B4
....................             { 
....................                Buzz_on;delay_ms(10);Buzz_off; 
050DC:  BSF    F8B.4
050DE:  BCF    F94.4
050E0:  MOVLW  0A
050E2:  MOVWF  x6E
050E4:  MOVLB  0
050E6:  CALL   13A4
050EA:  BCF    F8B.4
050EC:  BCF    F94.4
....................                if(tiempodn<4){ 
050EE:  MOVLB  5
050F0:  MOVF   x91,W
050F2:  SUBLW  03
050F4:  BNC   5126
....................                   flagdn=1; 
050F6:  BSF    x87.1
....................                   Horas1[l+((Prog-1)*Pasos)]--; 
050F8:  MOVLW  01
050FA:  MOVLB  8
050FC:  SUBWF  x68,W
050FE:  MULLW  10
05100:  MOVF   FF3,W
05102:  ADDWF  x67,W
05104:  MOVWF  00
05106:  BCF    FD8.0
05108:  RLCF   00,F
0510A:  MOVF   00,W
0510C:  CLRF   03
0510E:  ADDLW  06
05110:  MOVWF  FE9
05112:  MOVLW  07
05114:  ADDWFC 03,W
05116:  MOVWF  FEA
05118:  MOVLW  FF
0511A:  ADDWF  FEF,F
0511C:  BC    5122
0511E:  MOVF   FEE,F
05120:  DECF   FED,F
....................                } 
....................                else{ 
05122:  BRA    515E
05124:  MOVLB  5
....................                   flagdn=0; 
05126:  BCF    x87.1
....................                   Horas1[l+((Prog-1)*Pasos)]-=10; 
05128:  MOVLW  01
0512A:  MOVLB  8
0512C:  SUBWF  x68,W
0512E:  MULLW  10
05130:  MOVF   FF3,W
05132:  ADDWF  x67,W
05134:  MOVWF  00
05136:  BCF    FD8.0
05138:  RLCF   00,F
0513A:  MOVF   00,W
0513C:  CLRF   03
0513E:  ADDLW  06
05140:  MOVWF  FE9
05142:  MOVLW  07
05144:  ADDWFC 03,W
05146:  MOVWF  FEA
05148:  MOVLW  0A
0514A:  SUBWF  FEF,W
0514C:  MOVWF  00
0514E:  MOVLW  00
05150:  SUBWFB FEC,W
05152:  MOVWF  03
05154:  MOVF   00,W
05156:  MOVF   FED,F
05158:  MOVWF  FEF
0515A:  MOVFF  03,FEC
....................                } 
....................                if(Horas1[l+((Prog-1)*Pasos)]<0) 
0515E:  MOVLW  01
05160:  SUBWF  x68,W
05162:  MULLW  10
05164:  MOVF   FF3,W
05166:  ADDWF  x67,W
05168:  MOVWF  00
0516A:  BCF    FD8.0
0516C:  RLCF   00,F
0516E:  MOVF   00,W
05170:  CLRF   03
05172:  ADDLW  06
05174:  MOVWF  FE9
05176:  MOVLW  07
05178:  ADDWFC 03,W
0517A:  MOVWF  FEA
0517C:  MOVFF  FEC,86A
05180:  MOVF   FED,F
05182:  MOVFF  FEF,869
05186:  BTFSC  x6A.7
05188:  BRA    518C
0518A:  BRA    51B2
....................                   Horas1[l+((Prog-1)*Pasos)]=99; 
0518C:  MOVLW  01
0518E:  SUBWF  x68,W
05190:  MULLW  10
05192:  MOVF   FF3,W
05194:  ADDWF  x67,W
05196:  MOVWF  00
05198:  BCF    FD8.0
0519A:  RLCF   00,F
0519C:  MOVF   00,W
0519E:  CLRF   03
051A0:  ADDLW  06
051A2:  MOVWF  FE9
051A4:  MOVLW  07
051A6:  ADDWFC 03,W
051A8:  MOVWF  FEA
051AA:  CLRF   FEC
051AC:  MOVF   FED,F
051AE:  MOVLW  63
051B0:  MOVWF  FEF
....................             } 
....................             else{ 
051B2:  BRA    51BC
....................                flagdn=0;tiempodn=0; 
051B4:  MOVLB  5
051B6:  BCF    x87.1
051B8:  CLRF   x91
051BA:  MOVLB  8
....................             } 
....................          } 
....................           
....................          if(Opcio==3){ 
051BC:  MOVF   x66,W
051BE:  SUBLW  03
051C0:  BTFSS  FD8.2
051C2:  BRA    54EA
....................             strcpy(Menus.Letra,"Temperatura:"); 
051C4:  MOVLW  08
051C6:  MOVWF  FEA
051C8:  MOVLW  46
051CA:  MOVWF  FE9
051CC:  MOVFF  FF2,869
051D0:  BCF    FF2.7
051D2:  MOVLW  00
051D4:  MOVLB  0
051D6:  CALL   075E
051DA:  TBLRD*-
051DC:  TBLRD*+
051DE:  MOVF   FF5,W
051E0:  MOVWF  FEE
051E2:  IORLW  00
051E4:  BNZ   51DC
051E6:  MOVLB  8
051E8:  BTFSC  x69.7
051EA:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1[l+((Prog-1)*Pasos)],0,32,0,1); 
051EC:  MOVLW  01
051EE:  SUBWF  x68,W
051F0:  MULLW  10
051F2:  MOVF   FF3,W
051F4:  ADDWF  x67,W
051F6:  MOVWF  00
051F8:  BCF    FD8.0
051FA:  RLCF   00,F
051FC:  MOVF   00,W
051FE:  CLRF   03
05200:  ADDLW  66
05202:  MOVWF  FE9
05204:  MOVLW  06
05206:  ADDWFC 03,W
05208:  MOVWF  FEA
0520A:  MOVFF  FEC,86A
0520E:  MOVF   FED,F
05210:  MOVFF  FEF,869
05214:  MOVLW  08
05216:  MOVWF  x6C
05218:  MOVLW  46
0521A:  MOVWF  x6B
0521C:  MOVFF  86A,86E
05220:  MOVFF  869,86D
05224:  CLRF   x6F
05226:  MOVLW  20
05228:  MOVWF  x70
0522A:  CLRF   x71
0522C:  MOVLW  01
0522E:  MOVWF  x72
05230:  MOVLB  0
05232:  CALL   443E
....................             strcpy(Menus.Letra,"Horas:"); 
05236:  MOVLW  08
05238:  MOVWF  FEA
0523A:  MOVLW  46
0523C:  MOVWF  FE9
0523E:  MOVFF  FF2,869
05242:  BCF    FF2.7
05244:  MOVLW  00
05246:  CALL   078A
0524A:  TBLRD*-
0524C:  TBLRD*+
0524E:  MOVF   FF5,W
05250:  MOVWF  FEE
05252:  IORLW  00
05254:  BNZ   524C
05256:  MOVLB  8
05258:  BTFSC  x69.7
0525A:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Horas1[l+((Prog-1)*Pasos)],0,44,10,1); 
0525C:  MOVLW  01
0525E:  SUBWF  x68,W
05260:  MULLW  10
05262:  MOVF   FF3,W
05264:  ADDWF  x67,W
05266:  MOVWF  00
05268:  BCF    FD8.0
0526A:  RLCF   00,F
0526C:  MOVF   00,W
0526E:  CLRF   03
05270:  ADDLW  06
05272:  MOVWF  FE9
05274:  MOVLW  07
05276:  ADDWFC 03,W
05278:  MOVWF  FEA
0527A:  MOVFF  FEC,86A
0527E:  MOVF   FED,F
05280:  MOVFF  FEF,869
05284:  MOVLW  08
05286:  MOVWF  x6C
05288:  MOVLW  46
0528A:  MOVWF  x6B
0528C:  MOVFF  86A,86E
05290:  MOVFF  869,86D
05294:  CLRF   x6F
05296:  MOVLW  2C
05298:  MOVWF  x70
0529A:  MOVLW  0A
0529C:  MOVWF  x71
0529E:  MOVLW  01
052A0:  MOVWF  x72
052A2:  MOVLB  0
052A4:  CALL   443E
....................             strcpy(Menus.Letra,"Minutos:"); 
052A8:  MOVLW  08
052AA:  MOVWF  FEA
052AC:  MOVLW  46
052AE:  MOVWF  FE9
052B0:  MOVFF  FF2,869
052B4:  BCF    FF2.7
052B6:  MOVLW  00
052B8:  CALL   07B0
052BC:  TBLRD*-
052BE:  TBLRD*+
052C0:  MOVF   FF5,W
052C2:  MOVWF  FEE
052C4:  IORLW  00
052C6:  BNZ   52BE
052C8:  MOVLB  8
052CA:  BTFSC  x69.7
052CC:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Minutos1[l+((Prog-1)*Pasos)],0,55,11,1); 
052CE:  MOVLW  01
052D0:  SUBWF  x68,W
052D2:  MULLW  10
052D4:  MOVF   FF3,W
052D6:  ADDWF  x67,W
052D8:  MOVWF  00
052DA:  BCF    FD8.0
052DC:  RLCF   00,F
052DE:  MOVF   00,W
052E0:  CLRF   03
052E2:  ADDLW  A6
052E4:  MOVWF  FE9
052E6:  MOVLW  07
052E8:  ADDWFC 03,W
052EA:  MOVWF  FEA
052EC:  MOVFF  FEC,86A
052F0:  MOVF   FED,F
052F2:  MOVFF  FEF,869
052F6:  MOVLW  08
052F8:  MOVWF  x6C
052FA:  MOVLW  46
052FC:  MOVWF  x6B
052FE:  MOVFF  86A,86E
05302:  MOVFF  869,86D
05306:  CLRF   x6F
05308:  MOVLW  37
0530A:  MOVWF  x70
0530C:  MOVLW  0B
0530E:  MOVWF  x71
05310:  MOVLW  01
05312:  MOVWF  x72
05314:  MOVLB  0
05316:  CALL   443E
....................             if(UP)//Si oprime hacia arriba 
0531A:  BSF    F92.5
0531C:  BTFSC  F80.5
0531E:  BRA    53FC
....................             { 
....................                Buzz_on;delay_ms(10);Buzz_off; 
05320:  BSF    F8B.4
05322:  BCF    F94.4
05324:  MOVLW  0A
05326:  MOVLB  8
05328:  MOVWF  x6E
0532A:  MOVLB  0
0532C:  CALL   13A4
05330:  BCF    F8B.4
05332:  BCF    F94.4
....................                if(tiempoup<4){ 
05334:  MOVLB  5
05336:  MOVF   x90,W
05338:  SUBLW  03
0533A:  BNC   536A
....................                   flagup=1; 
0533C:  BSF    x87.0
....................                   Minutos1[l+((Prog-1)*Pasos)]++; 
0533E:  MOVLW  01
05340:  MOVLB  8
05342:  SUBWF  x68,W
05344:  MULLW  10
05346:  MOVF   FF3,W
05348:  ADDWF  x67,W
0534A:  MOVWF  00
0534C:  BCF    FD8.0
0534E:  RLCF   00,F
05350:  MOVF   00,W
05352:  CLRF   03
05354:  ADDLW  A6
05356:  MOVWF  FE9
05358:  MOVLW  07
0535A:  ADDWFC 03,W
0535C:  MOVWF  FEA
0535E:  MOVLW  01
05360:  ADDWF  FEE,F
05362:  BNC   5366
05364:  INCF   FEF,F
....................                }   
....................                else{ 
05366:  BRA    539E
05368:  MOVLB  5
....................                   flagup=0; 
0536A:  BCF    x87.0
....................                   Minutos1[l+((Prog-1)*Pasos)]+=10; 
0536C:  MOVLW  01
0536E:  MOVLB  8
05370:  SUBWF  x68,W
05372:  MULLW  10
05374:  MOVF   FF3,W
05376:  ADDWF  x67,W
05378:  MOVWF  00
0537A:  BCF    FD8.0
0537C:  RLCF   00,F
0537E:  MOVF   00,W
05380:  CLRF   03
05382:  ADDLW  A6
05384:  MOVWF  FE9
05386:  MOVLW  07
05388:  ADDWFC 03,W
0538A:  MOVWF  FEA
0538C:  MOVLW  0A
0538E:  ADDWF  FEF,W
05390:  MOVWF  01
05392:  MOVLW  00
05394:  ADDWFC FEC,W
05396:  MOVF   FED,F
05398:  MOVFF  01,FEF
0539C:  MOVWF  FEC
....................                } 
....................                if(Minutos1[l+((Prog-1)*Pasos)]>59) 
0539E:  MOVLW  01
053A0:  SUBWF  x68,W
053A2:  MULLW  10
053A4:  MOVF   FF3,W
053A6:  ADDWF  x67,W
053A8:  MOVWF  00
053AA:  BCF    FD8.0
053AC:  RLCF   00,F
053AE:  MOVF   00,W
053B0:  CLRF   03
053B2:  ADDLW  A6
053B4:  MOVWF  FE9
053B6:  MOVLW  07
053B8:  ADDWFC 03,W
053BA:  MOVWF  FEA
053BC:  MOVFF  FEC,86A
053C0:  MOVF   FED,F
053C2:  MOVFF  FEF,869
053C6:  BTFSC  x6A.7
053C8:  BRA    53F8
053CA:  MOVF   x6A,F
053CC:  BNZ   53D4
053CE:  MOVF   x69,W
053D0:  SUBLW  3B
053D2:  BC    53F8
....................                   Minutos1[l+((Prog-1)*Pasos)]=0; 
053D4:  MOVLW  01
053D6:  SUBWF  x68,W
053D8:  MULLW  10
053DA:  MOVF   FF3,W
053DC:  ADDWF  x67,W
053DE:  MOVWF  00
053E0:  BCF    FD8.0
053E2:  RLCF   00,F
053E4:  MOVF   00,W
053E6:  CLRF   03
053E8:  ADDLW  A6
053EA:  MOVWF  FE9
053EC:  MOVLW  07
053EE:  ADDWFC 03,W
053F0:  MOVWF  FEA
053F2:  CLRF   FEC
053F4:  MOVF   FED,F
053F6:  CLRF   FEF
....................             } 
....................             else{ 
053F8:  BRA    5404
053FA:  MOVLB  0
....................                flagup=0;tiempoup=0; 
053FC:  MOVLB  5
053FE:  BCF    x87.0
05400:  CLRF   x90
05402:  MOVLB  8
....................             } 
....................                       
....................             if(DOWN)//Si oprime hacia abajo 
05404:  BSF    F96.0
05406:  BTFSC  F84.0
05408:  BRA    54E2
....................             { 
....................                Buzz_on;delay_ms(10);Buzz_off; 
0540A:  BSF    F8B.4
0540C:  BCF    F94.4
0540E:  MOVLW  0A
05410:  MOVWF  x6E
05412:  MOVLB  0
05414:  CALL   13A4
05418:  BCF    F8B.4
0541A:  BCF    F94.4
....................                if(tiempodn<4){ 
0541C:  MOVLB  5
0541E:  MOVF   x91,W
05420:  SUBLW  03
05422:  BNC   5454
....................                   flagdn=1; 
05424:  BSF    x87.1
....................                   Minutos1[l+((Prog-1)*Pasos)]--; 
05426:  MOVLW  01
05428:  MOVLB  8
0542A:  SUBWF  x68,W
0542C:  MULLW  10
0542E:  MOVF   FF3,W
05430:  ADDWF  x67,W
05432:  MOVWF  00
05434:  BCF    FD8.0
05436:  RLCF   00,F
05438:  MOVF   00,W
0543A:  CLRF   03
0543C:  ADDLW  A6
0543E:  MOVWF  FE9
05440:  MOVLW  07
05442:  ADDWFC 03,W
05444:  MOVWF  FEA
05446:  MOVLW  FF
05448:  ADDWF  FEF,F
0544A:  BC    5450
0544C:  MOVF   FEE,F
0544E:  DECF   FED,F
....................                } 
....................                else{ 
05450:  BRA    548C
05452:  MOVLB  5
....................                   flagdn=0; 
05454:  BCF    x87.1
....................                   Minutos1[l+((Prog-1)*Pasos)]-=10; 
05456:  MOVLW  01
05458:  MOVLB  8
0545A:  SUBWF  x68,W
0545C:  MULLW  10
0545E:  MOVF   FF3,W
05460:  ADDWF  x67,W
05462:  MOVWF  00
05464:  BCF    FD8.0
05466:  RLCF   00,F
05468:  MOVF   00,W
0546A:  CLRF   03
0546C:  ADDLW  A6
0546E:  MOVWF  FE9
05470:  MOVLW  07
05472:  ADDWFC 03,W
05474:  MOVWF  FEA
05476:  MOVLW  0A
05478:  SUBWF  FEF,W
0547A:  MOVWF  00
0547C:  MOVLW  00
0547E:  SUBWFB FEC,W
05480:  MOVWF  03
05482:  MOVF   00,W
05484:  MOVF   FED,F
05486:  MOVWF  FEF
05488:  MOVFF  03,FEC
....................                } 
....................                if(Minutos1[l+((Prog-1)*Pasos)]<0) 
0548C:  MOVLW  01
0548E:  SUBWF  x68,W
05490:  MULLW  10
05492:  MOVF   FF3,W
05494:  ADDWF  x67,W
05496:  MOVWF  00
05498:  BCF    FD8.0
0549A:  RLCF   00,F
0549C:  MOVF   00,W
0549E:  CLRF   03
054A0:  ADDLW  A6
054A2:  MOVWF  FE9
054A4:  MOVLW  07
054A6:  ADDWFC 03,W
054A8:  MOVWF  FEA
054AA:  MOVFF  FEC,86A
054AE:  MOVF   FED,F
054B0:  MOVFF  FEF,869
054B4:  BTFSC  x6A.7
054B6:  BRA    54BA
054B8:  BRA    54E0
....................                   Minutos1[l+((Prog-1)*Pasos)]=59; 
054BA:  MOVLW  01
054BC:  SUBWF  x68,W
054BE:  MULLW  10
054C0:  MOVF   FF3,W
054C2:  ADDWF  x67,W
054C4:  MOVWF  00
054C6:  BCF    FD8.0
054C8:  RLCF   00,F
054CA:  MOVF   00,W
054CC:  CLRF   03
054CE:  ADDLW  A6
054D0:  MOVWF  FE9
054D2:  MOVLW  07
054D4:  ADDWFC 03,W
054D6:  MOVWF  FEA
054D8:  CLRF   FEC
054DA:  MOVF   FED,F
054DC:  MOVLW  3B
054DE:  MOVWF  FEF
....................             } 
....................             else{ 
054E0:  BRA    54EA
....................                flagdn=0;tiempodn=0; 
054E2:  MOVLB  5
054E4:  BCF    x87.1
054E6:  CLRF   x91
054E8:  MOVLB  8
....................             } 
....................          } 
.................... } 
054EA:  MOVLB  0
054EC:  GOTO   9806 (RETURN)
....................  
.................... int8 extraeDecimal(float data){ 
*
06C10:  MOVLB  8
06C12:  CLRF   x6D
06C14:  CLRF   x6C
06C16:  CLRF   x6B
06C18:  CLRF   x6A
06C1A:  CLRF   x71
06C1C:  CLRF   x70
06C1E:  CLRF   x6F
06C20:  CLRF   x6E
....................    float entero=0; 
....................    float tmp=0.0; 
....................     
....................    entero=(int8)data; 
06C22:  MOVFF  869,875
06C26:  MOVFF  868,874
06C2A:  MOVFF  867,873
06C2E:  MOVFF  866,872
06C32:  MOVLB  0
06C34:  CALL   587C
06C38:  MOVLB  8
06C3A:  CLRF   x73
06C3C:  MOVFF  01,872
06C40:  MOVLB  0
06C42:  CALL   1D5A
06C46:  MOVFF  03,86D
06C4A:  MOVFF  02,86C
06C4E:  MOVFF  01,86B
06C52:  MOVFF  00,86A
....................    tmp=(data-entero)*100; 
06C56:  BSF    FD8.1
06C58:  MOVFF  869,875
06C5C:  MOVFF  868,874
06C60:  MOVFF  867,873
06C64:  MOVFF  866,872
06C68:  MOVFF  86D,879
06C6C:  MOVFF  86C,878
06C70:  MOVFF  86B,877
06C74:  MOVFF  86A,876
06C78:  CALL   1F68
06C7C:  MOVFF  00,872
06C80:  MOVFF  01,873
06C84:  MOVFF  02,874
06C88:  MOVFF  03,875
06C8C:  MOVFF  03,88A
06C90:  MOVFF  02,889
06C94:  MOVFF  01,888
06C98:  MOVFF  00,887
06C9C:  MOVLB  8
06C9E:  CLRF   x8E
06CA0:  CLRF   x8D
06CA2:  MOVLW  48
06CA4:  MOVWF  x8C
06CA6:  MOVLW  85
06CA8:  MOVWF  x8B
06CAA:  MOVLB  0
06CAC:  CALL   32D2
06CB0:  MOVFF  03,871
06CB4:  MOVFF  02,870
06CB8:  MOVFF  01,86F
06CBC:  MOVFF  00,86E
....................    return (int8)tmp; 
06CC0:  MOVFF  871,875
06CC4:  MOVFF  870,874
06CC8:  MOVFF  86F,873
06CCC:  MOVFF  86E,872
06CD0:  CALL   587C
06CD4:  MOVF   01,W
.................... } 
06CD6:  RETLW  00
....................  
.................... float inttofloat(int8 decimal){ 
....................    float tmp; 
....................    tmp=decimal; 
....................    return tmp/100; 
.................... } 
....................  
.................... void ConfigInicial(){ 
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
*
013CC:  MOVLW  85
013CE:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
013D0:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN2); 
013D2:  MOVF   FC1,W
013D4:  ANDLW  C0
013D6:  IORLW  0C
013D8:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
013DA:  MOVF   FC0,W
013DC:  ANDLW  C0
013DE:  IORLW  06
013E0:  MOVWF  FC0
013E2:  BSF    FC0.7
013E4:  BSF    FC2.0
....................    enable_interrupts(global); 
013E6:  MOVLW  C0
013E8:  IORWF  FF2,F
.................... } 
013EA:  GOTO   7200 (RETURN)
....................  
.................... void LeeEEPROM(){  
....................    for(j=1;j<6;j++){ 
*
021E0:  MOVLW  01
021E2:  MOVLB  5
021E4:  MOVWF  x9E
021E6:  MOVF   x9E,W
021E8:  SUBLW  05
021EA:  BTFSS  FD8.0
021EC:  BRA    25D2
....................       for(i=0;i<Pasos;i++){ 
021EE:  CLRF   x9D
021F0:  MOVF   x9D,W
021F2:  SUBLW  0F
021F4:  BTFSS  FD8.0
021F6:  BRA    25CE
....................          delay_ms(10);  
021F8:  MOVLW  0A
021FA:  MOVLB  8
021FC:  MOVWF  x6E
021FE:  MOVLB  0
02200:  CALL   13A4
....................          Temperatura1[i+((j-1)*Pasos)]=make16(read_eeprom((i*2)+1+((j-1)*(Pasos*4))),read_eeprom((i*2)+((j-1)*(Pasos*4)))); 
02204:  MOVLW  01
02206:  MOVLB  5
02208:  SUBWF  x9E,W
0220A:  MULLW  10
0220C:  MOVF   FF3,W
0220E:  ADDWF  x9D,W
02210:  MOVWF  00
02212:  BCF    FD8.0
02214:  RLCF   00,F
02216:  MOVF   00,W
02218:  CLRF   03
0221A:  ADDLW  66
0221C:  MOVWF  FE9
0221E:  MOVLW  06
02220:  ADDWFC 03,W
02222:  MOVWF  FEA
02224:  BCF    FD8.0
02226:  RLCF   x9D,W
02228:  ADDLW  01
0222A:  MOVLB  8
0222C:  MOVWF  x68
0222E:  MOVLW  01
02230:  MOVLB  5
02232:  SUBWF  x9E,W
02234:  MULLW  40
02236:  MOVF   FF3,W
02238:  MOVLB  8
0223A:  ADDWF  x68,F
0223C:  MOVFF  FF2,869
02240:  BCF    FF2.7
02242:  CLRF   FAA
02244:  MOVFF  868,FA9
02248:  BCF    FA6.6
0224A:  BCF    FA6.7
0224C:  BSF    FA6.0
0224E:  MOVF   FA8,W
02250:  BTFSC  x69.7
02252:  BSF    FF2.7
02254:  MOVWF  x68
02256:  BCF    FD8.0
02258:  MOVLB  5
0225A:  RLCF   x9D,W
0225C:  MOVLB  8
0225E:  MOVWF  x6A
02260:  MOVLW  01
02262:  MOVLB  5
02264:  SUBWF  x9E,W
02266:  MULLW  40
02268:  MOVF   FF3,W
0226A:  MOVLB  8
0226C:  ADDWF  x6A,F
0226E:  MOVFF  FF2,86B
02272:  BCF    FF2.7
02274:  CLRF   FAA
02276:  MOVFF  86A,FA9
0227A:  BCF    FA6.6
0227C:  BCF    FA6.7
0227E:  BSF    FA6.0
02280:  MOVF   FA8,W
02282:  BTFSC  x6B.7
02284:  BSF    FF2.7
02286:  MOVWF  x6A
02288:  MOVFF  868,FEC
0228C:  MOVF   FED,F
0228E:  MOVFF  86A,FEF
....................          if(Temperatura1[i+((j-1)*Pasos)]>1200 || Temperatura1[i+((j-1)*Pasos)]<0){ 
02292:  MOVLW  01
02294:  MOVLB  5
02296:  SUBWF  x9E,W
02298:  MULLW  10
0229A:  MOVF   FF3,W
0229C:  ADDWF  x9D,W
0229E:  MOVWF  00
022A0:  BCF    FD8.0
022A2:  RLCF   00,F
022A4:  MOVF   00,W
022A6:  CLRF   03
022A8:  ADDLW  66
022AA:  MOVWF  FE9
022AC:  MOVLW  06
022AE:  ADDWFC 03,W
022B0:  MOVWF  FEA
022B2:  MOVFF  FEC,867
022B6:  MOVF   FED,F
022B8:  MOVFF  FEF,866
022BC:  MOVLB  8
022BE:  BTFSC  x67.7
022C0:  BRA    22D2
022C2:  MOVF   x67,W
022C4:  SUBLW  03
022C6:  BC    22D2
022C8:  XORLW  FF
022CA:  BNZ   2304
022CC:  MOVF   x66,W
022CE:  SUBLW  B0
022D0:  BNC   2304
022D2:  MOVLW  01
022D4:  MOVLB  5
022D6:  SUBWF  x9E,W
022D8:  MULLW  10
022DA:  MOVF   FF3,W
022DC:  ADDWF  x9D,W
022DE:  MOVWF  00
022E0:  BCF    FD8.0
022E2:  RLCF   00,F
022E4:  MOVF   00,W
022E6:  CLRF   03
022E8:  ADDLW  66
022EA:  MOVWF  FE9
022EC:  MOVLW  06
022EE:  ADDWFC 03,W
022F0:  MOVWF  FEA
022F2:  MOVFF  FEC,867
022F6:  MOVF   FED,F
022F8:  MOVFF  FEF,866
022FC:  MOVLB  8
022FE:  BTFSC  x67.7
02300:  BRA    2304
02302:  BRA    23C8
....................             Temperatura1[i+((j-1)*Pasos)]=0; 
02304:  MOVLW  01
02306:  MOVLB  5
02308:  SUBWF  x9E,W
0230A:  MULLW  10
0230C:  MOVF   FF3,W
0230E:  ADDWF  x9D,W
02310:  MOVWF  00
02312:  BCF    FD8.0
02314:  RLCF   00,F
02316:  MOVF   00,W
02318:  CLRF   03
0231A:  ADDLW  66
0231C:  MOVWF  FE9
0231E:  MOVLW  06
02320:  ADDWFC 03,W
02322:  MOVWF  FEA
02324:  CLRF   FEC
02326:  MOVF   FED,F
02328:  CLRF   FEF
....................             write_eeprom((i*2)+1+((j-1)*(Pasos*4)),0); 
0232A:  BCF    FD8.0
0232C:  RLCF   x9D,W
0232E:  ADDLW  01
02330:  MOVLB  8
02332:  MOVWF  x66
02334:  MOVLW  01
02336:  MOVLB  5
02338:  SUBWF  x9E,W
0233A:  MULLW  40
0233C:  MOVF   FF3,W
0233E:  MOVLB  8
02340:  ADDWF  x66,F
02342:  CLRF   FAA
02344:  MOVFF  866,FA9
02348:  CLRF   FA8
0234A:  BCF    FA6.6
0234C:  BCF    FA6.7
0234E:  BSF    FA6.2
02350:  MOVF   FF2,W
02352:  MOVWF  00
02354:  BCF    FF2.7
02356:  MOVLB  F
02358:  MOVLW  55
0235A:  MOVWF  FA7
0235C:  MOVLW  AA
0235E:  MOVWF  FA7
02360:  BSF    FA6.1
02362:  BTFSC  FA6.1
02364:  BRA    2362
02366:  BCF    FA6.2
02368:  MOVF   00,W
0236A:  IORWF  FF2,F
....................             delay_ms(20); 
0236C:  MOVLW  14
0236E:  MOVLB  8
02370:  MOVWF  x6E
02372:  MOVLB  0
02374:  CALL   13A4
....................             write_eeprom((i*2)+((j-1)*(Pasos*4)),0); 
02378:  BCF    FD8.0
0237A:  MOVLB  5
0237C:  RLCF   x9D,W
0237E:  MOVLB  8
02380:  MOVWF  x66
02382:  MOVLW  01
02384:  MOVLB  5
02386:  SUBWF  x9E,W
02388:  MULLW  40
0238A:  MOVF   FF3,W
0238C:  MOVLB  8
0238E:  ADDWF  x66,F
02390:  CLRF   FAA
02392:  MOVFF  866,FA9
02396:  CLRF   FA8
02398:  BCF    FA6.6
0239A:  BCF    FA6.7
0239C:  BSF    FA6.2
0239E:  MOVF   FF2,W
023A0:  MOVWF  00
023A2:  BCF    FF2.7
023A4:  MOVLB  F
023A6:  MOVLW  55
023A8:  MOVWF  FA7
023AA:  MOVLW  AA
023AC:  MOVWF  FA7
023AE:  BSF    FA6.1
023B0:  BTFSC  FA6.1
023B2:  BRA    23B0
023B4:  BCF    FA6.2
023B6:  MOVF   00,W
023B8:  IORWF  FF2,F
....................             delay_ms(20); 
023BA:  MOVLW  14
023BC:  MOVLB  8
023BE:  MOVWF  x6E
023C0:  MOVLB  0
023C2:  CALL   13A4
023C6:  MOVLB  8
....................          } 
....................          delay_ms(10); 
023C8:  MOVLW  0A
023CA:  MOVWF  x6E
023CC:  MOVLB  0
023CE:  CALL   13A4
....................          Horas1[i+((j-1)*Pasos)]=read_eeprom(i+(((Pasos*4)*j)-(Pasos*2)));      
023D2:  MOVLW  01
023D4:  MOVLB  5
023D6:  SUBWF  x9E,W
023D8:  MULLW  10
023DA:  MOVF   FF3,W
023DC:  ADDWF  x9D,W
023DE:  MOVWF  00
023E0:  BCF    FD8.0
023E2:  RLCF   00,F
023E4:  MOVF   00,W
023E6:  CLRF   03
023E8:  ADDLW  06
023EA:  MOVWF  FE9
023EC:  MOVLW  07
023EE:  ADDWFC 03,W
023F0:  MOVWF  FEA
023F2:  MOVF   x9E,W
023F4:  MULLW  40
023F6:  MOVF   FF3,W
023F8:  ADDLW  E0
023FA:  ADDWF  x9D,W
023FC:  MOVLB  8
023FE:  MOVWF  x68
02400:  MOVFF  FF2,869
02404:  BCF    FF2.7
02406:  CLRF   FAA
02408:  MOVFF  868,FA9
0240C:  BCF    FA6.6
0240E:  BCF    FA6.7
02410:  BSF    FA6.0
02412:  MOVF   FA8,W
02414:  BTFSC  x69.7
02416:  BSF    FF2.7
02418:  CLRF   03
0241A:  MOVWF  FEF
0241C:  MOVFF  03,FEC
02420:  MOVF   FED,F
....................          if(Horas1[i+((j-1)*Pasos)]>99){ 
02422:  MOVLW  01
02424:  MOVLB  5
02426:  SUBWF  x9E,W
02428:  MULLW  10
0242A:  MOVF   FF3,W
0242C:  ADDWF  x9D,W
0242E:  MOVWF  00
02430:  BCF    FD8.0
02432:  RLCF   00,F
02434:  MOVF   00,W
02436:  CLRF   03
02438:  ADDLW  06
0243A:  MOVWF  FE9
0243C:  MOVLW  07
0243E:  ADDWFC 03,W
02440:  MOVWF  FEA
02442:  MOVFF  FEC,867
02446:  MOVF   FED,F
02448:  MOVFF  FEF,866
0244C:  MOVLB  8
0244E:  BTFSC  x67.7
02450:  BRA    24C8
02452:  MOVF   x67,F
02454:  BNZ   245C
02456:  MOVF   x66,W
02458:  SUBLW  63
0245A:  BC    24C8
....................             Horas1[i+((j-1)*Pasos)]=0; 
0245C:  MOVLW  01
0245E:  MOVLB  5
02460:  SUBWF  x9E,W
02462:  MULLW  10
02464:  MOVF   FF3,W
02466:  ADDWF  x9D,W
02468:  MOVWF  00
0246A:  BCF    FD8.0
0246C:  RLCF   00,F
0246E:  MOVF   00,W
02470:  CLRF   03
02472:  ADDLW  06
02474:  MOVWF  FE9
02476:  MOVLW  07
02478:  ADDWFC 03,W
0247A:  MOVWF  FEA
0247C:  CLRF   FEC
0247E:  MOVF   FED,F
02480:  CLRF   FEF
....................             write_eeprom(i+(((Pasos*4)*j)-(Pasos*2)),0); 
02482:  MOVF   x9E,W
02484:  MULLW  40
02486:  MOVF   FF3,W
02488:  ADDLW  E0
0248A:  ADDWF  x9D,W
0248C:  MOVLB  8
0248E:  MOVWF  x66
02490:  CLRF   FAA
02492:  MOVFF  866,FA9
02496:  CLRF   FA8
02498:  BCF    FA6.6
0249A:  BCF    FA6.7
0249C:  BSF    FA6.2
0249E:  MOVF   FF2,W
024A0:  MOVWF  00
024A2:  BCF    FF2.7
024A4:  MOVLB  F
024A6:  MOVLW  55
024A8:  MOVWF  FA7
024AA:  MOVLW  AA
024AC:  MOVWF  FA7
024AE:  BSF    FA6.1
024B0:  BTFSC  FA6.1
024B2:  BRA    24B0
024B4:  BCF    FA6.2
024B6:  MOVF   00,W
024B8:  IORWF  FF2,F
....................             delay_ms(20); 
024BA:  MOVLW  14
024BC:  MOVLB  8
024BE:  MOVWF  x6E
024C0:  MOVLB  0
024C2:  CALL   13A4
024C6:  MOVLB  8
....................          } 
....................          delay_ms(10);     
024C8:  MOVLW  0A
024CA:  MOVWF  x6E
024CC:  MOVLB  0
024CE:  CALL   13A4
....................          Minutos1[i+((j-1)*Pasos)]=read_eeprom(i+(((Pasos*4)*j)-Pasos)); 
024D2:  MOVLW  01
024D4:  MOVLB  5
024D6:  SUBWF  x9E,W
024D8:  MULLW  10
024DA:  MOVF   FF3,W
024DC:  ADDWF  x9D,W
024DE:  MOVWF  00
024E0:  BCF    FD8.0
024E2:  RLCF   00,F
024E4:  MOVF   00,W
024E6:  CLRF   03
024E8:  ADDLW  A6
024EA:  MOVWF  FE9
024EC:  MOVLW  07
024EE:  ADDWFC 03,W
024F0:  MOVWF  FEA
024F2:  MOVF   x9E,W
024F4:  MULLW  40
024F6:  MOVF   FF3,W
024F8:  ADDLW  F0
024FA:  ADDWF  x9D,W
024FC:  MOVLB  8
024FE:  MOVWF  x68
02500:  MOVFF  FF2,869
02504:  BCF    FF2.7
02506:  CLRF   FAA
02508:  MOVFF  868,FA9
0250C:  BCF    FA6.6
0250E:  BCF    FA6.7
02510:  BSF    FA6.0
02512:  MOVF   FA8,W
02514:  BTFSC  x69.7
02516:  BSF    FF2.7
02518:  CLRF   03
0251A:  MOVWF  FEF
0251C:  MOVFF  03,FEC
02520:  MOVF   FED,F
....................          if(Minutos1[i+((j-1)*Pasos)]>59){ 
02522:  MOVLW  01
02524:  MOVLB  5
02526:  SUBWF  x9E,W
02528:  MULLW  10
0252A:  MOVF   FF3,W
0252C:  ADDWF  x9D,W
0252E:  MOVWF  00
02530:  BCF    FD8.0
02532:  RLCF   00,F
02534:  MOVF   00,W
02536:  CLRF   03
02538:  ADDLW  A6
0253A:  MOVWF  FE9
0253C:  MOVLW  07
0253E:  ADDWFC 03,W
02540:  MOVWF  FEA
02542:  MOVFF  FEC,867
02546:  MOVF   FED,F
02548:  MOVFF  FEF,866
0254C:  MOVLB  8
0254E:  BTFSC  x67.7
02550:  BRA    25C8
02552:  MOVF   x67,F
02554:  BNZ   255C
02556:  MOVF   x66,W
02558:  SUBLW  3B
0255A:  BC    25C8
....................             Minutos1[i+((j-1)*Pasos)]=0; 
0255C:  MOVLW  01
0255E:  MOVLB  5
02560:  SUBWF  x9E,W
02562:  MULLW  10
02564:  MOVF   FF3,W
02566:  ADDWF  x9D,W
02568:  MOVWF  00
0256A:  BCF    FD8.0
0256C:  RLCF   00,F
0256E:  MOVF   00,W
02570:  CLRF   03
02572:  ADDLW  A6
02574:  MOVWF  FE9
02576:  MOVLW  07
02578:  ADDWFC 03,W
0257A:  MOVWF  FEA
0257C:  CLRF   FEC
0257E:  MOVF   FED,F
02580:  CLRF   FEF
....................             write_eeprom(i+(((Pasos*4)*j)-Pasos),0); 
02582:  MOVF   x9E,W
02584:  MULLW  40
02586:  MOVF   FF3,W
02588:  ADDLW  F0
0258A:  ADDWF  x9D,W
0258C:  MOVLB  8
0258E:  MOVWF  x66
02590:  CLRF   FAA
02592:  MOVFF  866,FA9
02596:  CLRF   FA8
02598:  BCF    FA6.6
0259A:  BCF    FA6.7
0259C:  BSF    FA6.2
0259E:  MOVF   FF2,W
025A0:  MOVWF  00
025A2:  BCF    FF2.7
025A4:  MOVLB  F
025A6:  MOVLW  55
025A8:  MOVWF  FA7
025AA:  MOVLW  AA
025AC:  MOVWF  FA7
025AE:  BSF    FA6.1
025B0:  BTFSC  FA6.1
025B2:  BRA    25B0
025B4:  BCF    FA6.2
025B6:  MOVF   00,W
025B8:  IORWF  FF2,F
....................             delay_ms(20); 
025BA:  MOVLW  14
025BC:  MOVLB  8
025BE:  MOVWF  x6E
025C0:  MOVLB  0
025C2:  CALL   13A4
025C6:  MOVLB  8
....................          } 
....................           
....................       } 
025C8:  MOVLB  5
025CA:  INCF   x9D,F
025CC:  BRA    21F0
....................    } 
025CE:  INCF   x9E,F
025D0:  BRA    21E6
....................     
....................    delay_ms(50);    
025D2:  MOVLW  32
025D4:  MOVLB  8
025D6:  MOVWF  x6E
025D8:  MOVLB  0
025DA:  CALL   13A4
....................    Ganancia=read_eeprom(450); 
025DE:  MOVFF  FF2,866
025E2:  BCF    FF2.7
025E4:  MOVLW  01
025E6:  MOVWF  FAA
025E8:  MOVLW  C2
025EA:  MOVWF  FA9
025EC:  BCF    FA6.6
025EE:  BCF    FA6.7
025F0:  BSF    FA6.0
025F2:  MOVF   FA8,W
025F4:  MOVLB  8
025F6:  BTFSC  x66.7
025F8:  BSF    FF2.7
025FA:  CLRF   x73
025FC:  MOVWF  x72
025FE:  MOVLB  0
02600:  CALL   1D5A
02604:  MOVFF  03,619
02608:  MOVFF  02,618
0260C:  MOVFF  01,617
02610:  MOVFF  00,616
....................    delay_ms(50);    
02614:  MOVLW  32
02616:  MOVLB  8
02618:  MOVWF  x6E
0261A:  MOVLB  0
0261C:  CALL   13A4
....................    if(Ganancia>10){ 
02620:  MOVLB  8
02622:  CLRF   x69
02624:  CLRF   x68
02626:  MOVLW  20
02628:  MOVWF  x67
0262A:  MOVLW  82
0262C:  MOVWF  x66
0262E:  MOVFF  619,86D
02632:  MOVFF  618,86C
02636:  MOVFF  617,86B
0263A:  MOVFF  616,86A
0263E:  MOVLB  0
02640:  CALL   1D90
02644:  BNC   268E
....................       Ganancia=3; 
02646:  MOVLB  6
02648:  CLRF   x19
0264A:  CLRF   x18
0264C:  MOVLW  40
0264E:  MOVWF  x17
02650:  MOVLW  80
02652:  MOVWF  x16
....................       write_eeprom(450,3); 
02654:  MOVLW  01
02656:  MOVWF  FAA
02658:  MOVLW  C2
0265A:  MOVWF  FA9
0265C:  MOVLW  03
0265E:  MOVWF  FA8
02660:  BCF    FA6.6
02662:  BCF    FA6.7
02664:  BSF    FA6.2
02666:  MOVF   FF2,W
02668:  MOVWF  00
0266A:  BCF    FF2.7
0266C:  MOVLB  F
0266E:  MOVLW  55
02670:  MOVWF  FA7
02672:  MOVLW  AA
02674:  MOVWF  FA7
02676:  BSF    FA6.1
02678:  BTFSC  FA6.1
0267A:  BRA    2678
0267C:  BCF    FA6.2
0267E:  MOVF   00,W
02680:  IORWF  FF2,F
....................       delay_ms(20); 
02682:  MOVLW  14
02684:  MOVLB  8
02686:  MOVWF  x6E
02688:  MOVLB  0
0268A:  CALL   13A4
....................    } 
....................    GananciaIn=Ganancia; 
0268E:  MOVFF  619,615
02692:  MOVFF  618,614
02696:  MOVFF  617,613
0269A:  MOVFF  616,612
....................    Tciclo=read_eeprom(451); 
0269E:  MOVFF  FF2,866
026A2:  BCF    FF2.7
026A4:  MOVLW  01
026A6:  MOVWF  FAA
026A8:  MOVLW  C3
026AA:  MOVWF  FA9
026AC:  BCF    FA6.6
026AE:  BCF    FA6.7
026B0:  BSF    FA6.0
026B2:  MOVF   FA8,W
026B4:  MOVLB  8
026B6:  BTFSC  x66.7
026B8:  BSF    FF2.7
026BA:  CLRF   x73
026BC:  MOVWF  x72
026BE:  MOVLB  0
026C0:  CALL   1D5A
026C4:  MOVFF  03,5FD
026C8:  MOVFF  02,5FC
026CC:  MOVFF  01,5FB
026D0:  MOVFF  00,5FA
....................    delay_ms(50);    
026D4:  MOVLW  32
026D6:  MOVLB  8
026D8:  MOVWF  x6E
026DA:  MOVLB  0
026DC:  CALL   13A4
....................    if(Tciclo>10){ 
026E0:  MOVLB  8
026E2:  CLRF   x69
026E4:  CLRF   x68
026E6:  MOVLW  20
026E8:  MOVWF  x67
026EA:  MOVLW  82
026EC:  MOVWF  x66
026EE:  MOVFF  5FD,86D
026F2:  MOVFF  5FC,86C
026F6:  MOVFF  5FB,86B
026FA:  MOVFF  5FA,86A
026FE:  MOVLB  0
02700:  CALL   1D90
02704:  BNC   274E
....................       Tciclo=10; 
02706:  MOVLB  5
02708:  CLRF   xFD
0270A:  CLRF   xFC
0270C:  MOVLW  20
0270E:  MOVWF  xFB
02710:  MOVLW  82
02712:  MOVWF  xFA
....................       write_eeprom(451,10); 
02714:  MOVLW  01
02716:  MOVWF  FAA
02718:  MOVLW  C3
0271A:  MOVWF  FA9
0271C:  MOVLW  0A
0271E:  MOVWF  FA8
02720:  BCF    FA6.6
02722:  BCF    FA6.7
02724:  BSF    FA6.2
02726:  MOVF   FF2,W
02728:  MOVWF  00
0272A:  BCF    FF2.7
0272C:  MOVLB  F
0272E:  MOVLW  55
02730:  MOVWF  FA7
02732:  MOVLW  AA
02734:  MOVWF  FA7
02736:  BSF    FA6.1
02738:  BTFSC  FA6.1
0273A:  BRA    2738
0273C:  BCF    FA6.2
0273E:  MOVF   00,W
02740:  IORWF  FF2,F
....................       delay_ms(20); 
02742:  MOVLW  14
02744:  MOVLB  8
02746:  MOVWF  x6E
02748:  MOVLB  0
0274A:  CALL   13A4
....................    } 
....................    Ajuste=read_eeprom(452); 
0274E:  MOVFF  FF2,866
02752:  BCF    FF2.7
02754:  MOVLW  01
02756:  MOVWF  FAA
02758:  MOVLW  C4
0275A:  MOVWF  FA9
0275C:  BCF    FA6.6
0275E:  BCF    FA6.7
02760:  BSF    FA6.0
02762:  MOVF   FA8,W
02764:  MOVLB  8
02766:  BTFSC  x66.7
02768:  BSF    FF2.7
0276A:  MOVLB  5
0276C:  MOVWF  x8A
....................    delay_ms(50); 
0276E:  MOVLW  32
02770:  MOVLB  8
02772:  MOVWF  x6E
02774:  MOVLB  0
02776:  CALL   13A4
....................    if(Ajuste>10){ 
0277A:  MOVLB  5
0277C:  MOVF   x8A,W
0277E:  SUBLW  0A
02780:  BC    27BE
....................       Ajuste=0; 
02782:  CLRF   x8A
....................       write_eeprom(452,0); 
02784:  MOVLW  01
02786:  MOVWF  FAA
02788:  MOVLW  C4
0278A:  MOVWF  FA9
0278C:  CLRF   FA8
0278E:  BCF    FA6.6
02790:  BCF    FA6.7
02792:  BSF    FA6.2
02794:  MOVF   FF2,W
02796:  MOVWF  00
02798:  BCF    FF2.7
0279A:  MOVLB  F
0279C:  MOVLW  55
0279E:  MOVWF  FA7
027A0:  MOVLW  AA
027A2:  MOVWF  FA7
027A4:  BSF    FA6.1
027A6:  BTFSC  FA6.1
027A8:  BRA    27A6
027AA:  BCF    FA6.2
027AC:  MOVF   00,W
027AE:  IORWF  FF2,F
....................       delay_ms(20); 
027B0:  MOVLW  14
027B2:  MOVLB  8
027B4:  MOVWF  x6E
027B6:  MOVLB  0
027B8:  CALL   13A4
027BC:  MOVLB  5
....................    } 
....................    Ajusten=read_eeprom(453); 
027BE:  MOVFF  FF2,866
027C2:  BCF    FF2.7
027C4:  MOVLW  01
027C6:  MOVWF  FAA
027C8:  MOVLW  C5
027CA:  MOVWF  FA9
027CC:  BCF    FA6.6
027CE:  BCF    FA6.7
027D0:  BSF    FA6.0
027D2:  MOVF   FA8,W
027D4:  MOVLB  8
027D6:  BTFSC  x66.7
027D8:  BSF    FF2.7
027DA:  MOVLB  5
027DC:  MOVWF  x8B
....................    delay_ms(50); 
027DE:  MOVLW  32
027E0:  MOVLB  8
027E2:  MOVWF  x6E
027E4:  MOVLB  0
027E6:  CALL   13A4
....................    if(Ajusten>10){ 
027EA:  MOVLB  5
027EC:  MOVF   x8B,W
027EE:  SUBLW  0A
027F0:  BC    282E
....................       Ajusten=0; 
027F2:  CLRF   x8B
....................       write_eeprom(453,0); 
027F4:  MOVLW  01
027F6:  MOVWF  FAA
027F8:  MOVLW  C5
027FA:  MOVWF  FA9
027FC:  CLRF   FA8
027FE:  BCF    FA6.6
02800:  BCF    FA6.7
02802:  BSF    FA6.2
02804:  MOVF   FF2,W
02806:  MOVWF  00
02808:  BCF    FF2.7
0280A:  MOVLB  F
0280C:  MOVLW  55
0280E:  MOVWF  FA7
02810:  MOVLW  AA
02812:  MOVWF  FA7
02814:  BSF    FA6.1
02816:  BTFSC  FA6.1
02818:  BRA    2816
0281A:  BCF    FA6.2
0281C:  MOVF   00,W
0281E:  IORWF  FF2,F
....................       delay_ms(20); 
02820:  MOVLW  14
02822:  MOVLB  8
02824:  MOVWF  x6E
02826:  MOVLB  0
02828:  CALL   13A4
0282C:  MOVLB  5
....................    } 
....................    MediaMovil=read_eeprom(454); 
0282E:  MOVFF  FF2,866
02832:  BCF    FF2.7
02834:  MOVLW  01
02836:  MOVWF  FAA
02838:  MOVLW  C6
0283A:  MOVWF  FA9
0283C:  BCF    FA6.6
0283E:  BCF    FA6.7
02840:  BSF    FA6.0
02842:  MOVF   FA8,W
02844:  MOVLB  8
02846:  BTFSC  x66.7
02848:  BSF    FF2.7
0284A:  MOVLB  5
0284C:  MOVWF  x8C
....................    delay_ms(50);    
0284E:  MOVLW  32
02850:  MOVLB  8
02852:  MOVWF  x6E
02854:  MOVLB  0
02856:  CALL   13A4
....................    if(MediaMovil>40){ 
0285A:  MOVLB  5
0285C:  MOVF   x8C,W
0285E:  SUBLW  28
02860:  BC    28A2
....................       MediaMovil=20; 
02862:  MOVLW  14
02864:  MOVWF  x8C
....................       write_eeprom(454,20); 
02866:  MOVLW  01
02868:  MOVWF  FAA
0286A:  MOVLW  C6
0286C:  MOVWF  FA9
0286E:  MOVLW  14
02870:  MOVWF  FA8
02872:  BCF    FA6.6
02874:  BCF    FA6.7
02876:  BSF    FA6.2
02878:  MOVF   FF2,W
0287A:  MOVWF  00
0287C:  BCF    FF2.7
0287E:  MOVLB  F
02880:  MOVLW  55
02882:  MOVWF  FA7
02884:  MOVLW  AA
02886:  MOVWF  FA7
02888:  BSF    FA6.1
0288A:  BTFSC  FA6.1
0288C:  BRA    288A
0288E:  BCF    FA6.2
02890:  MOVF   00,W
02892:  IORWF  FF2,F
....................       delay_ms(20); 
02894:  MOVLW  14
02896:  MOVLB  8
02898:  MOVWF  x6E
0289A:  MOVLB  0
0289C:  CALL   13A4
028A0:  MOVLB  5
....................    } 
....................    Coeficiente=read_eeprom(455); 
028A2:  MOVFF  FF2,866
028A6:  BCF    FF2.7
028A8:  MOVLW  01
028AA:  MOVWF  FAA
028AC:  MOVLW  C7
028AE:  MOVWF  FA9
028B0:  BCF    FA6.6
028B2:  BCF    FA6.7
028B4:  BSF    FA6.0
028B6:  MOVF   FA8,W
028B8:  MOVLB  8
028BA:  BTFSC  x66.7
028BC:  BSF    FF2.7
028BE:  CLRF   x73
028C0:  MOVWF  x72
028C2:  MOVLB  0
028C4:  CALL   1D5A
028C8:  MOVFF  03,621
028CC:  MOVFF  02,620
028D0:  MOVFF  01,61F
028D4:  MOVFF  00,61E
....................    delay_ms(50);    
028D8:  MOVLW  32
028DA:  MOVLB  8
028DC:  MOVWF  x6E
028DE:  MOVLB  0
028E0:  CALL   13A4
....................    resistencia=read_eeprom(457); 
028E4:  MOVFF  FF2,866
028E8:  BCF    FF2.7
028EA:  MOVLW  01
028EC:  MOVWF  FAA
028EE:  MOVLW  C9
028F0:  MOVWF  FA9
028F2:  BCF    FA6.6
028F4:  BCF    FA6.7
028F6:  BSF    FA6.0
028F8:  MOVF   FA8,W
028FA:  MOVLB  8
028FC:  BTFSC  x66.7
028FE:  BSF    FF2.7
02900:  CLRF   x73
02902:  MOVWF  x72
02904:  MOVLB  0
02906:  CALL   1D5A
0290A:  MOVFF  03,625
0290E:  MOVFF  02,624
02912:  MOVFF  01,623
02916:  MOVFF  00,622
....................    delay_ms(50);  
0291A:  MOVLW  32
0291C:  MOVLB  8
0291E:  MOVWF  x6E
02920:  MOVLB  0
02922:  CALL   13A4
....................    if(resistencia>250){ 
02926:  MOVLB  8
02928:  CLRF   x69
0292A:  CLRF   x68
0292C:  MOVLW  7A
0292E:  MOVWF  x67
02930:  MOVLW  86
02932:  MOVWF  x66
02934:  MOVFF  625,86D
02938:  MOVFF  624,86C
0293C:  MOVFF  623,86B
02940:  MOVFF  622,86A
02944:  MOVLB  0
02946:  CALL   1D90
0294A:  BNC   2994
....................       resistencia=238; 
0294C:  MOVLB  6
0294E:  CLRF   x25
02950:  CLRF   x24
02952:  MOVLW  6E
02954:  MOVWF  x23
02956:  MOVLW  86
02958:  MOVWF  x22
....................       write_eeprom(457,240); 
0295A:  MOVLW  01
0295C:  MOVWF  FAA
0295E:  MOVLW  C9
02960:  MOVWF  FA9
02962:  MOVLW  F0
02964:  MOVWF  FA8
02966:  BCF    FA6.6
02968:  BCF    FA6.7
0296A:  BSF    FA6.2
0296C:  MOVF   FF2,W
0296E:  MOVWF  00
02970:  BCF    FF2.7
02972:  MOVLB  F
02974:  MOVLW  55
02976:  MOVWF  FA7
02978:  MOVLW  AA
0297A:  MOVWF  FA7
0297C:  BSF    FA6.1
0297E:  BTFSC  FA6.1
02980:  BRA    297E
02982:  BCF    FA6.2
02984:  MOVF   00,W
02986:  IORWF  FF2,F
....................       delay_ms(20); 
02988:  MOVLW  14
0298A:  MOVLB  8
0298C:  MOVWF  x6E
0298E:  MOVLB  0
02990:  CALL   13A4
....................    } 
....................    penMufla=read_eeprom(458); 
02994:  MOVFF  FF2,866
02998:  BCF    FF2.7
0299A:  MOVLW  01
0299C:  MOVWF  FAA
0299E:  MOVLW  CA
029A0:  MOVWF  FA9
029A2:  BCF    FA6.6
029A4:  BCF    FA6.7
029A6:  BSF    FA6.0
029A8:  MOVF   FA8,W
029AA:  MOVLB  8
029AC:  BTFSC  x66.7
029AE:  BSF    FF2.7
029B0:  CLRF   x73
029B2:  MOVWF  x72
029B4:  MOVLB  0
029B6:  CALL   1D5A
029BA:  MOVFF  03,65D
029BE:  MOVFF  02,65C
029C2:  MOVFF  01,65B
029C6:  MOVFF  00,65A
....................    delay_ms(50);  
029CA:  MOVLW  32
029CC:  MOVLB  8
029CE:  MOVWF  x6E
029D0:  MOVLB  0
029D2:  CALL   13A4
....................    if(penMufla>70){ 
029D6:  MOVLB  8
029D8:  CLRF   x69
029DA:  CLRF   x68
029DC:  MOVLW  0C
029DE:  MOVWF  x67
029E0:  MOVLW  85
029E2:  MOVWF  x66
029E4:  MOVFF  65D,86D
029E8:  MOVFF  65C,86C
029EC:  MOVFF  65B,86B
029F0:  MOVFF  65A,86A
029F4:  MOVLB  0
029F6:  CALL   1D90
029FA:  BNC   2A44
....................       penMufla=50; 
029FC:  MOVLB  6
029FE:  CLRF   x5D
02A00:  CLRF   x5C
02A02:  MOVLW  48
02A04:  MOVWF  x5B
02A06:  MOVLW  84
02A08:  MOVWF  x5A
....................       write_eeprom(458,100); 
02A0A:  MOVLW  01
02A0C:  MOVWF  FAA
02A0E:  MOVLW  CA
02A10:  MOVWF  FA9
02A12:  MOVLW  64
02A14:  MOVWF  FA8
02A16:  BCF    FA6.6
02A18:  BCF    FA6.7
02A1A:  BSF    FA6.2
02A1C:  MOVF   FF2,W
02A1E:  MOVWF  00
02A20:  BCF    FF2.7
02A22:  MOVLB  F
02A24:  MOVLW  55
02A26:  MOVWF  FA7
02A28:  MOVLW  AA
02A2A:  MOVWF  FA7
02A2C:  BSF    FA6.1
02A2E:  BTFSC  FA6.1
02A30:  BRA    2A2E
02A32:  BCF    FA6.2
02A34:  MOVF   00,W
02A36:  IORWF  FF2,F
....................       delay_ms(20); 
02A38:  MOVLW  14
02A3A:  MOVLB  8
02A3C:  MOVWF  x6E
02A3E:  MOVLB  0
02A40:  CALL   13A4
....................    } 
....................     
....................    Password[0]=read_eeprom(460); 
02A44:  MOVFF  FF2,866
02A48:  BCF    FF2.7
02A4A:  MOVLW  01
02A4C:  MOVWF  FAA
02A4E:  MOVLW  CC
02A50:  MOVWF  FA9
02A52:  BCF    FA6.6
02A54:  BCF    FA6.7
02A56:  BSF    FA6.0
02A58:  MOVF   FA8,W
02A5A:  MOVLB  8
02A5C:  BTFSC  x66.7
02A5E:  BSF    FF2.7
02A60:  MOVLB  5
02A62:  MOVWF  xF2
....................    delay_ms(50);    
02A64:  MOVLW  32
02A66:  MOVLB  8
02A68:  MOVWF  x6E
02A6A:  MOVLB  0
02A6C:  CALL   13A4
....................    if(Password[0]>9 || Password[0]<0){ 
02A70:  MOVLB  5
02A72:  BTFSC  xF2.7
02A74:  BRA    2A7C
02A76:  MOVF   xF2,W
02A78:  SUBLW  09
02A7A:  BNC   2A82
02A7C:  BTFSC  xF2.7
02A7E:  BRA    2A82
02A80:  BRA    2ABE
....................       Password[0]=0; 
02A82:  CLRF   xF2
....................       write_eeprom(460,0); 
02A84:  MOVLW  01
02A86:  MOVWF  FAA
02A88:  MOVLW  CC
02A8A:  MOVWF  FA9
02A8C:  CLRF   FA8
02A8E:  BCF    FA6.6
02A90:  BCF    FA6.7
02A92:  BSF    FA6.2
02A94:  MOVF   FF2,W
02A96:  MOVWF  00
02A98:  BCF    FF2.7
02A9A:  MOVLB  F
02A9C:  MOVLW  55
02A9E:  MOVWF  FA7
02AA0:  MOVLW  AA
02AA2:  MOVWF  FA7
02AA4:  BSF    FA6.1
02AA6:  BTFSC  FA6.1
02AA8:  BRA    2AA6
02AAA:  BCF    FA6.2
02AAC:  MOVF   00,W
02AAE:  IORWF  FF2,F
....................       delay_ms(20); 
02AB0:  MOVLW  14
02AB2:  MOVLB  8
02AB4:  MOVWF  x6E
02AB6:  MOVLB  0
02AB8:  CALL   13A4
02ABC:  MOVLB  5
....................    } 
....................    Password[1]=read_eeprom(461); 
02ABE:  MOVFF  FF2,866
02AC2:  BCF    FF2.7
02AC4:  MOVLW  01
02AC6:  MOVWF  FAA
02AC8:  MOVLW  CD
02ACA:  MOVWF  FA9
02ACC:  BCF    FA6.6
02ACE:  BCF    FA6.7
02AD0:  BSF    FA6.0
02AD2:  MOVF   FA8,W
02AD4:  MOVLB  8
02AD6:  BTFSC  x66.7
02AD8:  BSF    FF2.7
02ADA:  MOVLB  5
02ADC:  MOVWF  xF3
....................    delay_ms(50);    
02ADE:  MOVLW  32
02AE0:  MOVLB  8
02AE2:  MOVWF  x6E
02AE4:  MOVLB  0
02AE6:  CALL   13A4
....................    if(Password[1]>9 || Password[1]<0){ 
02AEA:  MOVLB  5
02AEC:  BTFSC  xF3.7
02AEE:  BRA    2AF6
02AF0:  MOVF   xF3,W
02AF2:  SUBLW  09
02AF4:  BNC   2AFC
02AF6:  BTFSC  xF3.7
02AF8:  BRA    2AFC
02AFA:  BRA    2B38
....................       Password[1]=0; 
02AFC:  CLRF   xF3
....................       write_eeprom(461,0); 
02AFE:  MOVLW  01
02B00:  MOVWF  FAA
02B02:  MOVLW  CD
02B04:  MOVWF  FA9
02B06:  CLRF   FA8
02B08:  BCF    FA6.6
02B0A:  BCF    FA6.7
02B0C:  BSF    FA6.2
02B0E:  MOVF   FF2,W
02B10:  MOVWF  00
02B12:  BCF    FF2.7
02B14:  MOVLB  F
02B16:  MOVLW  55
02B18:  MOVWF  FA7
02B1A:  MOVLW  AA
02B1C:  MOVWF  FA7
02B1E:  BSF    FA6.1
02B20:  BTFSC  FA6.1
02B22:  BRA    2B20
02B24:  BCF    FA6.2
02B26:  MOVF   00,W
02B28:  IORWF  FF2,F
....................       delay_ms(20); 
02B2A:  MOVLW  14
02B2C:  MOVLB  8
02B2E:  MOVWF  x6E
02B30:  MOVLB  0
02B32:  CALL   13A4
02B36:  MOVLB  5
....................    } 
....................    Password[2]=read_eeprom(462); 
02B38:  MOVFF  FF2,866
02B3C:  BCF    FF2.7
02B3E:  MOVLW  01
02B40:  MOVWF  FAA
02B42:  MOVLW  CE
02B44:  MOVWF  FA9
02B46:  BCF    FA6.6
02B48:  BCF    FA6.7
02B4A:  BSF    FA6.0
02B4C:  MOVF   FA8,W
02B4E:  MOVLB  8
02B50:  BTFSC  x66.7
02B52:  BSF    FF2.7
02B54:  MOVLB  5
02B56:  MOVWF  xF4
....................    delay_ms(50);    
02B58:  MOVLW  32
02B5A:  MOVLB  8
02B5C:  MOVWF  x6E
02B5E:  MOVLB  0
02B60:  CALL   13A4
....................    if(Password[2]>9 || Password[2]<0){ 
02B64:  MOVLB  5
02B66:  BTFSC  xF4.7
02B68:  BRA    2B70
02B6A:  MOVF   xF4,W
02B6C:  SUBLW  09
02B6E:  BNC   2B74
02B70:  BTFSS  xF4.7
02B72:  BRA    2BB0
....................       Password[2]=0; 
02B74:  CLRF   xF4
....................       write_eeprom(462,0); 
02B76:  MOVLW  01
02B78:  MOVWF  FAA
02B7A:  MOVLW  CE
02B7C:  MOVWF  FA9
02B7E:  CLRF   FA8
02B80:  BCF    FA6.6
02B82:  BCF    FA6.7
02B84:  BSF    FA6.2
02B86:  MOVF   FF2,W
02B88:  MOVWF  00
02B8A:  BCF    FF2.7
02B8C:  MOVLB  F
02B8E:  MOVLW  55
02B90:  MOVWF  FA7
02B92:  MOVLW  AA
02B94:  MOVWF  FA7
02B96:  BSF    FA6.1
02B98:  BTFSC  FA6.1
02B9A:  BRA    2B98
02B9C:  BCF    FA6.2
02B9E:  MOVF   00,W
02BA0:  IORWF  FF2,F
....................       delay_ms(20); 
02BA2:  MOVLW  14
02BA4:  MOVLB  8
02BA6:  MOVWF  x6E
02BA8:  MOVLB  0
02BAA:  CALL   13A4
02BAE:  MOVLB  5
....................    } 
....................    Password[3]=read_eeprom(463); 
02BB0:  MOVFF  FF2,866
02BB4:  BCF    FF2.7
02BB6:  MOVLW  01
02BB8:  MOVWF  FAA
02BBA:  MOVLW  CF
02BBC:  MOVWF  FA9
02BBE:  BCF    FA6.6
02BC0:  BCF    FA6.7
02BC2:  BSF    FA6.0
02BC4:  MOVF   FA8,W
02BC6:  MOVLB  8
02BC8:  BTFSC  x66.7
02BCA:  BSF    FF2.7
02BCC:  MOVLB  5
02BCE:  MOVWF  xF5
....................    delay_ms(50); 
02BD0:  MOVLW  32
02BD2:  MOVLB  8
02BD4:  MOVWF  x6E
02BD6:  MOVLB  0
02BD8:  CALL   13A4
....................    if(Password[3]>9 || Password[3]<0){ 
02BDC:  MOVLB  5
02BDE:  BTFSC  xF5.7
02BE0:  BRA    2BE8
02BE2:  MOVF   xF5,W
02BE4:  SUBLW  09
02BE6:  BNC   2BEE
02BE8:  BTFSC  xF5.7
02BEA:  BRA    2BEE
02BEC:  BRA    2C2A
....................       Password[3]=0; 
02BEE:  CLRF   xF5
....................       write_eeprom(463,0); 
02BF0:  MOVLW  01
02BF2:  MOVWF  FAA
02BF4:  MOVLW  CF
02BF6:  MOVWF  FA9
02BF8:  CLRF   FA8
02BFA:  BCF    FA6.6
02BFC:  BCF    FA6.7
02BFE:  BSF    FA6.2
02C00:  MOVF   FF2,W
02C02:  MOVWF  00
02C04:  BCF    FF2.7
02C06:  MOVLB  F
02C08:  MOVLW  55
02C0A:  MOVWF  FA7
02C0C:  MOVLW  AA
02C0E:  MOVWF  FA7
02C10:  BSF    FA6.1
02C12:  BTFSC  FA6.1
02C14:  BRA    2C12
02C16:  BCF    FA6.2
02C18:  MOVF   00,W
02C1A:  IORWF  FF2,F
....................       delay_ms(20); 
02C1C:  MOVLW  14
02C1E:  MOVLB  8
02C20:  MOVWF  x6E
02C22:  MOVLB  0
02C24:  CALL   13A4
02C28:  MOVLB  5
....................    } 
....................     
....................    Integral=read_eeprom(470); 
02C2A:  MOVFF  FF2,866
02C2E:  BCF    FF2.7
02C30:  MOVLW  01
02C32:  MOVWF  FAA
02C34:  MOVLW  D6
02C36:  MOVWF  FA9
02C38:  BCF    FA6.6
02C3A:  BCF    FA6.7
02C3C:  BSF    FA6.0
02C3E:  MOVF   FA8,W
02C40:  MOVLB  8
02C42:  BTFSC  x66.7
02C44:  BSF    FF2.7
02C46:  CLRF   x73
02C48:  MOVWF  x72
02C4A:  MOVLB  0
02C4C:  CALL   1D5A
02C50:  MOVFF  03,63D
02C54:  MOVFF  02,63C
02C58:  MOVFF  01,63B
02C5C:  MOVFF  00,63A
....................    delay_ms(50);  
02C60:  MOVLW  32
02C62:  MOVLB  8
02C64:  MOVWF  x6E
02C66:  MOVLB  0
02C68:  CALL   13A4
....................    if(Integral>5){ 
02C6C:  MOVLB  8
02C6E:  CLRF   x69
02C70:  CLRF   x68
02C72:  MOVLW  20
02C74:  MOVWF  x67
02C76:  MOVLW  81
02C78:  MOVWF  x66
02C7A:  MOVFF  63D,86D
02C7E:  MOVFF  63C,86C
02C82:  MOVFF  63B,86B
02C86:  MOVFF  63A,86A
02C8A:  MOVLB  0
02C8C:  CALL   1D90
02C90:  BNC   2CD8
....................       Integral=1; 
02C92:  MOVLB  6
02C94:  CLRF   x3D
02C96:  CLRF   x3C
02C98:  CLRF   x3B
02C9A:  MOVLW  7F
02C9C:  MOVWF  x3A
....................       write_eeprom(470,1); 
02C9E:  MOVLW  01
02CA0:  MOVWF  FAA
02CA2:  MOVLW  D6
02CA4:  MOVWF  FA9
02CA6:  MOVLW  01
02CA8:  MOVWF  FA8
02CAA:  BCF    FA6.6
02CAC:  BCF    FA6.7
02CAE:  BSF    FA6.2
02CB0:  MOVF   FF2,W
02CB2:  MOVWF  00
02CB4:  BCF    FF2.7
02CB6:  MOVLB  F
02CB8:  MOVLW  55
02CBA:  MOVWF  FA7
02CBC:  MOVLW  AA
02CBE:  MOVWF  FA7
02CC0:  BSF    FA6.1
02CC2:  BTFSC  FA6.1
02CC4:  BRA    2CC2
02CC6:  BCF    FA6.2
02CC8:  MOVF   00,W
02CCA:  IORWF  FF2,F
....................       delay_ms(20); 
02CCC:  MOVLW  14
02CCE:  MOVLB  8
02CD0:  MOVWF  x6E
02CD2:  MOVLB  0
02CD4:  CALL   13A4
....................    } 
....................    Derivativo=read_eeprom(471); 
02CD8:  MOVFF  FF2,866
02CDC:  BCF    FF2.7
02CDE:  MOVLW  01
02CE0:  MOVWF  FAA
02CE2:  MOVLW  D7
02CE4:  MOVWF  FA9
02CE6:  BCF    FA6.6
02CE8:  BCF    FA6.7
02CEA:  BSF    FA6.0
02CEC:  MOVF   FA8,W
02CEE:  MOVLB  8
02CF0:  BTFSC  x66.7
02CF2:  BSF    FF2.7
02CF4:  CLRF   x73
02CF6:  MOVWF  x72
02CF8:  MOVLB  0
02CFA:  CALL   1D5A
02CFE:  MOVFF  03,641
02D02:  MOVFF  02,640
02D06:  MOVFF  01,63F
02D0A:  MOVFF  00,63E
....................    delay_ms(50);  
02D0E:  MOVLW  32
02D10:  MOVLB  8
02D12:  MOVWF  x6E
02D14:  MOVLB  0
02D16:  CALL   13A4
....................    if(Derivativo>40){ 
02D1A:  MOVLB  8
02D1C:  CLRF   x69
02D1E:  CLRF   x68
02D20:  MOVLW  20
02D22:  MOVWF  x67
02D24:  MOVLW  84
02D26:  MOVWF  x66
02D28:  MOVFF  641,86D
02D2C:  MOVFF  640,86C
02D30:  MOVFF  63F,86B
02D34:  MOVFF  63E,86A
02D38:  MOVLB  0
02D3A:  CALL   1D90
02D3E:  BNC   2D88
....................       Derivativo=30; 
02D40:  MOVLB  6
02D42:  CLRF   x41
02D44:  CLRF   x40
02D46:  MOVLW  70
02D48:  MOVWF  x3F
02D4A:  MOVLW  83
02D4C:  MOVWF  x3E
....................       write_eeprom(471,30); 
02D4E:  MOVLW  01
02D50:  MOVWF  FAA
02D52:  MOVLW  D7
02D54:  MOVWF  FA9
02D56:  MOVLW  1E
02D58:  MOVWF  FA8
02D5A:  BCF    FA6.6
02D5C:  BCF    FA6.7
02D5E:  BSF    FA6.2
02D60:  MOVF   FF2,W
02D62:  MOVWF  00
02D64:  BCF    FF2.7
02D66:  MOVLB  F
02D68:  MOVLW  55
02D6A:  MOVWF  FA7
02D6C:  MOVLW  AA
02D6E:  MOVWF  FA7
02D70:  BSF    FA6.1
02D72:  BTFSC  FA6.1
02D74:  BRA    2D72
02D76:  BCF    FA6.2
02D78:  MOVF   00,W
02D7A:  IORWF  FF2,F
....................       delay_ms(20); 
02D7C:  MOVLW  14
02D7E:  MOVLB  8
02D80:  MOVWF  x6E
02D82:  MOVLB  0
02D84:  CALL   13A4
....................    } 
....................    AlTem=make16(read_eeprom(473),read_eeprom(472)); 
02D88:  MOVFF  FF2,866
02D8C:  BCF    FF2.7
02D8E:  MOVLW  01
02D90:  MOVWF  FAA
02D92:  MOVLW  D9
02D94:  MOVWF  FA9
02D96:  BCF    FA6.6
02D98:  BCF    FA6.7
02D9A:  BSF    FA6.0
02D9C:  MOVF   FA8,W
02D9E:  MOVLB  8
02DA0:  BTFSC  x66.7
02DA2:  BSF    FF2.7
02DA4:  MOVWF  x67
02DA6:  MOVFF  FF2,868
02DAA:  BCF    FF2.7
02DAC:  MOVLW  01
02DAE:  MOVWF  FAA
02DB0:  MOVLW  D8
02DB2:  MOVWF  FA9
02DB4:  BCF    FA6.6
02DB6:  BCF    FA6.7
02DB8:  BSF    FA6.0
02DBA:  MOVF   FA8,W
02DBC:  BTFSC  x68.7
02DBE:  BSF    FF2.7
02DC0:  MOVWF  x69
02DC2:  MOVFF  867,5BB
02DC6:  MOVFF  869,5BA
....................    delay_ms(50);  
02DCA:  MOVLW  32
02DCC:  MOVWF  x6E
02DCE:  MOVLB  0
02DD0:  CALL   13A4
....................    if(AlTem>500){ 
02DD4:  MOVLB  5
02DD6:  MOVF   xBB,W
02DD8:  SUBLW  00
02DDA:  BC    2E60
02DDC:  XORLW  FF
02DDE:  BNZ   2DE6
02DE0:  MOVF   xBA,W
02DE2:  SUBLW  F4
02DE4:  BC    2E60
....................       AlTem=200; 
02DE6:  CLRF   xBB
02DE8:  MOVLW  C8
02DEA:  MOVWF  xBA
....................       write_eeprom(472,200); 
02DEC:  MOVLW  01
02DEE:  MOVWF  FAA
02DF0:  MOVLW  D8
02DF2:  MOVWF  FA9
02DF4:  MOVLW  C8
02DF6:  MOVWF  FA8
02DF8:  BCF    FA6.6
02DFA:  BCF    FA6.7
02DFC:  BSF    FA6.2
02DFE:  MOVF   FF2,W
02E00:  MOVWF  00
02E02:  BCF    FF2.7
02E04:  MOVLB  F
02E06:  MOVLW  55
02E08:  MOVWF  FA7
02E0A:  MOVLW  AA
02E0C:  MOVWF  FA7
02E0E:  BSF    FA6.1
02E10:  BTFSC  FA6.1
02E12:  BRA    2E10
02E14:  BCF    FA6.2
02E16:  MOVF   00,W
02E18:  IORWF  FF2,F
....................       delay_ms(20); 
02E1A:  MOVLW  14
02E1C:  MOVLB  8
02E1E:  MOVWF  x6E
02E20:  MOVLB  0
02E22:  CALL   13A4
....................       write_eeprom(473,0); 
02E26:  MOVLW  01
02E28:  MOVWF  FAA
02E2A:  MOVLW  D9
02E2C:  MOVWF  FA9
02E2E:  CLRF   FA8
02E30:  BCF    FA6.6
02E32:  BCF    FA6.7
02E34:  BSF    FA6.2
02E36:  MOVF   FF2,W
02E38:  MOVWF  00
02E3A:  BCF    FF2.7
02E3C:  MOVLB  F
02E3E:  MOVLW  55
02E40:  MOVWF  FA7
02E42:  MOVLW  AA
02E44:  MOVWF  FA7
02E46:  BSF    FA6.1
02E48:  BTFSC  FA6.1
02E4A:  BRA    2E48
02E4C:  BCF    FA6.2
02E4E:  MOVF   00,W
02E50:  IORWF  FF2,F
....................       delay_ms(20); 
02E52:  MOVLW  14
02E54:  MOVLB  8
02E56:  MOVWF  x6E
02E58:  MOVLB  0
02E5A:  CALL   13A4
02E5E:  MOVLB  5
....................    } 
....................    Modo=read_eeprom(480); 
02E60:  MOVFF  FF2,866
02E64:  BCF    FF2.7
02E66:  MOVLW  01
02E68:  MOVWF  FAA
02E6A:  MOVLW  E0
02E6C:  MOVWF  FA9
02E6E:  BCF    FA6.6
02E70:  BCF    FA6.7
02E72:  BSF    FA6.0
02E74:  MOVF   FA8,W
02E76:  MOVLB  8
02E78:  BTFSC  x66.7
02E7A:  BSF    FF2.7
02E7C:  MOVLB  5
02E7E:  MOVWF  x94
....................    delay_ms(50);  
02E80:  MOVLW  32
02E82:  MOVLB  8
02E84:  MOVWF  x6E
02E86:  MOVLB  0
02E88:  CALL   13A4
....................    m_int=read_eeprom(490); 
02E8C:  MOVFF  FF2,866
02E90:  BCF    FF2.7
02E92:  MOVLW  01
02E94:  MOVWF  FAA
02E96:  MOVLW  EA
02E98:  MOVWF  FA9
02E9A:  BCF    FA6.6
02E9C:  BCF    FA6.7
02E9E:  BSF    FA6.0
02EA0:  MOVF   FA8,W
02EA2:  MOVLB  8
02EA4:  BTFSC  x66.7
02EA6:  BSF    FF2.7
02EA8:  MOVLB  5
02EAA:  MOVWF  xA6
....................    delay_ms(50);  
02EAC:  MOVLW  32
02EAE:  MOVLB  8
02EB0:  MOVWF  x6E
02EB2:  MOVLB  0
02EB4:  CALL   13A4
....................    m_dec=read_eeprom(491); 
02EB8:  MOVFF  FF2,866
02EBC:  BCF    FF2.7
02EBE:  MOVLW  01
02EC0:  MOVWF  FAA
02EC2:  MOVLW  EB
02EC4:  MOVWF  FA9
02EC6:  BCF    FA6.6
02EC8:  BCF    FA6.7
02ECA:  BSF    FA6.0
02ECC:  MOVF   FA8,W
02ECE:  MOVLB  8
02ED0:  BTFSC  x66.7
02ED2:  BSF    FF2.7
02ED4:  MOVLB  5
02ED6:  MOVWF  xA7
....................    delay_ms(50);  
02ED8:  MOVLW  32
02EDA:  MOVLB  8
02EDC:  MOVWF  x6E
02EDE:  MOVLB  0
02EE0:  CALL   13A4
....................    m=m_int+((float)m_dec/100); 
02EE4:  MOVLB  8
02EE6:  CLRF   x73
02EE8:  MOVFF  5A7,872
02EEC:  MOVLB  0
02EEE:  CALL   1D5A
02EF2:  MOVFF  00,866
02EF6:  MOVFF  01,867
02EFA:  MOVFF  02,868
02EFE:  MOVFF  03,869
02F02:  MOVFF  03,86D
02F06:  MOVFF  02,86C
02F0A:  MOVFF  01,86B
02F0E:  MOVFF  00,86A
02F12:  MOVLB  8
02F14:  CLRF   x71
02F16:  CLRF   x70
02F18:  MOVLW  48
02F1A:  MOVWF  x6F
02F1C:  MOVLW  85
02F1E:  MOVWF  x6E
02F20:  MOVLB  0
02F22:  CALL   1E0A
02F26:  MOVFF  00,866
02F2A:  MOVFF  01,867
02F2E:  MOVFF  02,868
02F32:  MOVFF  03,869
02F36:  MOVLB  8
02F38:  CLRF   x73
02F3A:  MOVFF  5A6,872
02F3E:  MOVLB  0
02F40:  CALL   1D5A
02F44:  BCF    FD8.1
02F46:  MOVFF  03,875
02F4A:  MOVFF  02,874
02F4E:  MOVFF  01,873
02F52:  MOVFF  00,872
02F56:  MOVFF  869,879
02F5A:  MOVFF  868,878
02F5E:  MOVFF  867,877
02F62:  MOVFF  866,876
02F66:  CALL   1F68
02F6A:  MOVFF  03,645
02F6E:  MOVFF  02,644
02F72:  MOVFF  01,643
02F76:  MOVFF  00,642
....................    b16=make16(read_eeprom(493),read_eeprom(492)); 
02F7A:  MOVFF  FF2,866
02F7E:  BCF    FF2.7
02F80:  MOVLW  01
02F82:  MOVWF  FAA
02F84:  MOVLW  ED
02F86:  MOVWF  FA9
02F88:  BCF    FA6.6
02F8A:  BCF    FA6.7
02F8C:  BSF    FA6.0
02F8E:  MOVF   FA8,W
02F90:  MOVLB  8
02F92:  BTFSC  x66.7
02F94:  BSF    FF2.7
02F96:  MOVWF  x67
02F98:  MOVFF  FF2,868
02F9C:  BCF    FF2.7
02F9E:  MOVLW  01
02FA0:  MOVWF  FAA
02FA2:  MOVLW  EC
02FA4:  MOVWF  FA9
02FA6:  BCF    FA6.6
02FA8:  BCF    FA6.7
02FAA:  BSF    FA6.0
02FAC:  MOVF   FA8,W
02FAE:  BTFSC  x68.7
02FB0:  BSF    FF2.7
02FB2:  MOVWF  x69
02FB4:  MOVFF  867,5BD
02FB8:  MOVFF  869,5BC
....................    b_dec=read_eeprom(494); 
02FBC:  MOVFF  FF2,866
02FC0:  BCF    FF2.7
02FC2:  MOVLW  01
02FC4:  MOVWF  FAA
02FC6:  MOVLW  EE
02FC8:  MOVWF  FA9
02FCA:  BCF    FA6.6
02FCC:  BCF    FA6.7
02FCE:  BSF    FA6.0
02FD0:  MOVF   FA8,W
02FD2:  BTFSC  x66.7
02FD4:  BSF    FF2.7
02FD6:  MOVLB  5
02FD8:  MOVWF  xA9
....................    delay_ms(50);  
02FDA:  MOVLW  32
02FDC:  MOVLB  8
02FDE:  MOVWF  x6E
02FE0:  MOVLB  0
02FE2:  CALL   13A4
....................    b=b16+((float)b_dec/100); 
02FE6:  MOVLB  8
02FE8:  CLRF   x73
02FEA:  MOVFF  5A9,872
02FEE:  MOVLB  0
02FF0:  CALL   1D5A
02FF4:  MOVFF  00,866
02FF8:  MOVFF  01,867
02FFC:  MOVFF  02,868
03000:  MOVFF  03,869
03004:  MOVFF  03,86D
03008:  MOVFF  02,86C
0300C:  MOVFF  01,86B
03010:  MOVFF  00,86A
03014:  MOVLB  8
03016:  CLRF   x71
03018:  CLRF   x70
0301A:  MOVLW  48
0301C:  MOVWF  x6F
0301E:  MOVLW  85
03020:  MOVWF  x6E
03022:  MOVLB  0
03024:  CALL   1E0A
03028:  MOVFF  00,866
0302C:  MOVFF  01,867
03030:  MOVFF  02,868
03034:  MOVFF  03,869
03038:  MOVFF  5BD,873
0303C:  MOVFF  5BC,872
03040:  CALL   1D5A
03044:  BCF    FD8.1
03046:  MOVFF  03,875
0304A:  MOVFF  02,874
0304E:  MOVFF  01,873
03052:  MOVFF  00,872
03056:  MOVFF  869,879
0305A:  MOVFF  868,878
0305E:  MOVFF  867,877
03062:  MOVFF  866,876
03066:  CALL   1F68
0306A:  MOVFF  03,649
0306E:  MOVFF  02,648
03072:  MOVFF  01,647
03076:  MOVFF  00,646
....................    if(b<300 || b>400){ 
0307A:  MOVFF  649,869
0307E:  MOVFF  648,868
03082:  MOVFF  647,867
03086:  MOVFF  646,866
0308A:  MOVLB  8
0308C:  CLRF   x6D
0308E:  CLRF   x6C
03090:  MOVLW  16
03092:  MOVWF  x6B
03094:  MOVLW  87
03096:  MOVWF  x6A
03098:  MOVLB  0
0309A:  CALL   1D90
0309E:  BC    30C6
030A0:  MOVLB  8
030A2:  CLRF   x69
030A4:  CLRF   x68
030A6:  MOVLW  48
030A8:  MOVWF  x67
030AA:  MOVLW  87
030AC:  MOVWF  x66
030AE:  MOVFF  649,86D
030B2:  MOVFF  648,86C
030B6:  MOVFF  647,86B
030BA:  MOVFF  646,86A
030BE:  MOVLB  0
030C0:  CALL   1D90
030C4:  BNC   3186
....................       b=347.66; 
030C6:  MOVLW  7B
030C8:  MOVLB  6
030CA:  MOVWF  x49
030CC:  MOVLW  D4
030CE:  MOVWF  x48
030D0:  MOVLW  2D
030D2:  MOVWF  x47
030D4:  MOVLW  87
030D6:  MOVWF  x46
....................       write_eeprom(492,make8(347,0)); 
030D8:  MOVLW  01
030DA:  MOVWF  FAA
030DC:  MOVLW  EC
030DE:  MOVWF  FA9
030E0:  MOVLW  5B
030E2:  MOVWF  FA8
030E4:  BCF    FA6.6
030E6:  BCF    FA6.7
030E8:  BSF    FA6.2
030EA:  MOVF   FF2,W
030EC:  MOVWF  00
030EE:  BCF    FF2.7
030F0:  MOVLB  F
030F2:  MOVLW  55
030F4:  MOVWF  FA7
030F6:  MOVLW  AA
030F8:  MOVWF  FA7
030FA:  BSF    FA6.1
030FC:  BTFSC  FA6.1
030FE:  BRA    30FC
03100:  BCF    FA6.2
03102:  MOVF   00,W
03104:  IORWF  FF2,F
....................       delay_ms(10); 
03106:  MOVLW  0A
03108:  MOVLB  8
0310A:  MOVWF  x6E
0310C:  MOVLB  0
0310E:  CALL   13A4
....................       write_eeprom(493,make8(347,1)); 
03112:  MOVLW  01
03114:  MOVWF  FAA
03116:  MOVLW  ED
03118:  MOVWF  FA9
0311A:  MOVLW  01
0311C:  MOVWF  FA8
0311E:  BCF    FA6.6
03120:  BCF    FA6.7
03122:  BSF    FA6.2
03124:  MOVF   FF2,W
03126:  MOVWF  00
03128:  BCF    FF2.7
0312A:  MOVLB  F
0312C:  MOVLW  55
0312E:  MOVWF  FA7
03130:  MOVLW  AA
03132:  MOVWF  FA7
03134:  BSF    FA6.1
03136:  BTFSC  FA6.1
03138:  BRA    3136
0313A:  BCF    FA6.2
0313C:  MOVF   00,W
0313E:  IORWF  FF2,F
....................       delay_ms(10); 
03140:  MOVLW  0A
03142:  MOVLB  8
03144:  MOVWF  x6E
03146:  MOVLB  0
03148:  CALL   13A4
....................       write_eeprom(494,66); 
0314C:  MOVLW  01
0314E:  MOVWF  FAA
03150:  MOVLW  EE
03152:  MOVWF  FA9
03154:  MOVLW  42
03156:  MOVWF  FA8
03158:  BCF    FA6.6
0315A:  BCF    FA6.7
0315C:  BSF    FA6.2
0315E:  MOVF   FF2,W
03160:  MOVWF  00
03162:  BCF    FF2.7
03164:  MOVLB  F
03166:  MOVLW  55
03168:  MOVWF  FA7
0316A:  MOVLW  AA
0316C:  MOVWF  FA7
0316E:  BSF    FA6.1
03170:  BTFSC  FA6.1
03172:  BRA    3170
03174:  BCF    FA6.2
03176:  MOVF   00,W
03178:  IORWF  FF2,F
....................       delay_ms(10); 
0317A:  MOVLW  0A
0317C:  MOVLB  8
0317E:  MOVWF  x6E
03180:  MOVLB  0
03182:  CALL   13A4
....................    } 
....................    if(m<1.0 || m>2.0){ 
03186:  MOVFF  645,869
0318A:  MOVFF  644,868
0318E:  MOVFF  643,867
03192:  MOVFF  642,866
03196:  MOVLB  8
03198:  CLRF   x6D
0319A:  CLRF   x6C
0319C:  CLRF   x6B
0319E:  MOVLW  7F
031A0:  MOVWF  x6A
031A2:  MOVLB  0
031A4:  CALL   1D90
031A8:  BC    31CE
031AA:  MOVLB  8
031AC:  CLRF   x69
031AE:  CLRF   x68
031B0:  CLRF   x67
031B2:  MOVLW  80
031B4:  MOVWF  x66
031B6:  MOVFF  645,86D
031BA:  MOVFF  644,86C
031BE:  MOVFF  643,86B
031C2:  MOVFF  642,86A
031C6:  MOVLB  0
031C8:  CALL   1D90
031CC:  BNC   3254
....................       m=1.79; 
031CE:  MOVLW  B8
031D0:  MOVLB  6
031D2:  MOVWF  x45
031D4:  MOVLW  1E
031D6:  MOVWF  x44
031D8:  MOVLW  65
031DA:  MOVWF  x43
031DC:  MOVLW  7F
031DE:  MOVWF  x42
....................       write_eeprom(490,1); 
031E0:  MOVLW  01
031E2:  MOVWF  FAA
031E4:  MOVLW  EA
031E6:  MOVWF  FA9
031E8:  MOVLW  01
031EA:  MOVWF  FA8
031EC:  BCF    FA6.6
031EE:  BCF    FA6.7
031F0:  BSF    FA6.2
031F2:  MOVF   FF2,W
031F4:  MOVWF  00
031F6:  BCF    FF2.7
031F8:  MOVLB  F
031FA:  MOVLW  55
031FC:  MOVWF  FA7
031FE:  MOVLW  AA
03200:  MOVWF  FA7
03202:  BSF    FA6.1
03204:  BTFSC  FA6.1
03206:  BRA    3204
03208:  BCF    FA6.2
0320A:  MOVF   00,W
0320C:  IORWF  FF2,F
....................       delay_ms(10); 
0320E:  MOVLW  0A
03210:  MOVLB  8
03212:  MOVWF  x6E
03214:  MOVLB  0
03216:  CALL   13A4
....................       write_eeprom(491,79); 
0321A:  MOVLW  01
0321C:  MOVWF  FAA
0321E:  MOVLW  EB
03220:  MOVWF  FA9
03222:  MOVLW  4F
03224:  MOVWF  FA8
03226:  BCF    FA6.6
03228:  BCF    FA6.7
0322A:  BSF    FA6.2
0322C:  MOVF   FF2,W
0322E:  MOVWF  00
03230:  BCF    FF2.7
03232:  MOVLB  F
03234:  MOVLW  55
03236:  MOVWF  FA7
03238:  MOVLW  AA
0323A:  MOVWF  FA7
0323C:  BSF    FA6.1
0323E:  BTFSC  FA6.1
03240:  BRA    323E
03242:  BCF    FA6.2
03244:  MOVF   00,W
03246:  IORWF  FF2,F
....................       delay_ms(10); 
03248:  MOVLW  0A
0324A:  MOVLB  8
0324C:  MOVWF  x6E
0324E:  MOVLB  0
03250:  CALL   13A4
....................    } 
.................... } 
03254:  GOTO   73B6 (RETURN)
....................  
.................... short PidePassword(int8 MenuAnt, int8 MenuActual, int8 MenuPost, int8 clave0,int8 clave1, int8 clave2,int8 clave3){ 
....................       if(n==0) 
*
035FA:  MOVLB  5
035FC:  MOVF   x9A,F
035FE:  BNZ   36A2
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
03600:  MOVFF  5EE,86F
03604:  MOVLW  14
03606:  MOVLB  8
03608:  MOVWF  x70
0360A:  MOVLW  1E
0360C:  MOVWF  x71
0360E:  MOVLW  01
03610:  MOVWF  x72
03612:  MOVLB  0
03614:  CALL   1CA4
03618:  MOVFF  5EF,86F
0361C:  MOVLW  28
0361E:  MOVLB  8
03620:  MOVWF  x70
03622:  MOVLW  1E
03624:  MOVWF  x71
03626:  CLRF   x72
03628:  MOVLB  0
0362A:  CALL   1CA4
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
0362E:  MOVFF  5F0,86F
03632:  MOVLW  3C
03634:  MOVLB  8
03636:  MOVWF  x70
03638:  MOVLW  1E
0363A:  MOVWF  x71
0363C:  CLRF   x72
0363E:  MOVLB  0
03640:  CALL   1CA4
03644:  MOVFF  5EE,86F
03648:  MOVLW  50
0364A:  MOVLB  8
0364C:  MOVWF  x70
0364E:  MOVLW  1E
03650:  MOVWF  x71
03652:  CLRF   x72
03654:  MOVLB  0
03656:  CALL   1CA4
....................          strcpy(Menus.Letra,"Clave"); 
0365A:  MOVLW  08
0365C:  MOVWF  FEA
0365E:  MOVLW  46
03660:  MOVWF  FE9
03662:  MOVFF  FF2,86D
03666:  BCF    FF2.7
03668:  MOVLW  00
0366A:  CALL   07D8
0366E:  TBLRD*-
03670:  TBLRD*+
03672:  MOVF   FF5,W
03674:  MOVWF  FEE
03676:  IORLW  00
03678:  BNZ   3670
0367A:  MOVLB  8
0367C:  BTFSC  x6D.7
0367E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,3); 
03680:  MOVLW  08
03682:  MOVWF  x6E
03684:  MOVLW  46
03686:  MOVWF  x6D
03688:  MOVLW  14
0368A:  MOVWF  x6F
0368C:  CLRF   x70
0368E:  MOVLW  01
03690:  MOVWF  x71
03692:  MOVLW  03
03694:  MOVWF  x72
03696:  MOVLB  0
03698:  CALL   1A52
....................          n=1; 
0369C:  MOVLW  01
0369E:  MOVLB  5
036A0:  MOVWF  x9A
....................       } 
....................        
....................       if(UP){ 
036A2:  BSF    F92.5
036A4:  BTFSC  F80.5
036A6:  BRA    377C
....................          if(Flanco == 0){ 
036A8:  BTFSC  x87.4
036AA:  BRA    377A
....................             Flanco = 1;delay_ms(5); 
036AC:  BSF    x87.4
036AE:  MOVLW  05
036B0:  MOVLB  8
036B2:  MOVWF  x6E
036B4:  MOVLB  0
036B6:  CALL   13A4
....................             for(i=1;i<=4;i++){ 
036BA:  MOVLW  01
036BC:  MOVLB  5
036BE:  MOVWF  x9D
036C0:  MOVF   x9D,W
036C2:  SUBLW  04
036C4:  BNC   377A
....................                if(unidad==i){ 
036C6:  MOVF   x9D,W
036C8:  SUBWF  x9C,W
036CA:  BNZ   3742
....................                   Contrasena[i-1]++; 
036CC:  MOVLW  01
036CE:  SUBWF  x9D,W
036D0:  CLRF   03
036D2:  ADDLW  EE
036D4:  MOVWF  FE9
036D6:  MOVLW  05
036D8:  ADDWFC 03,W
036DA:  MOVWF  FEA
036DC:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9){ 
036DE:  MOVLW  01
036E0:  SUBWF  x9D,W
036E2:  CLRF   03
036E4:  ADDLW  EE
036E6:  MOVWF  FE9
036E8:  MOVLW  05
036EA:  ADDWFC 03,W
036EC:  MOVWF  FEA
036EE:  BTFSC  FEF.7
036F0:  BRA    370A
036F2:  MOVF   FEF,W
036F4:  SUBLW  09
036F6:  BC    370A
....................                      Contrasena[i-1]=0; 
036F8:  MOVLW  01
036FA:  SUBWF  x9D,W
036FC:  CLRF   03
036FE:  ADDLW  EE
03700:  MOVWF  FE9
03702:  MOVLW  05
03704:  ADDWFC 03,W
03706:  MOVWF  FEA
03708:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
0370A:  MOVLW  01
0370C:  SUBWF  x9D,W
0370E:  CLRF   03
03710:  ADDLW  EE
03712:  MOVWF  FE9
03714:  MOVLW  05
03716:  ADDWFC 03,W
03718:  MOVWF  FEA
0371A:  MOVFF  FEF,86D
0371E:  MOVF   x9D,W
03720:  MULLW  14
03722:  MOVFF  FF3,86E
03726:  MOVLB  8
03728:  MOVFF  86D,86F
0372C:  MOVFF  86E,870
03730:  MOVLW  1E
03732:  MOVWF  x71
03734:  MOVLW  01
03736:  MOVWF  x72
03738:  MOVLB  0
0373A:  CALL   1CA4
....................                }else{ 
0373E:  BRA    3774
03740:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03742:  MOVLW  01
03744:  SUBWF  x9D,W
03746:  CLRF   03
03748:  ADDLW  EE
0374A:  MOVWF  FE9
0374C:  MOVLW  05
0374E:  ADDWFC 03,W
03750:  MOVWF  FEA
03752:  MOVFF  FEF,86D
03756:  MOVF   x9D,W
03758:  MULLW  14
0375A:  MOVFF  FF3,86E
0375E:  MOVLB  8
03760:  MOVFF  86D,86F
03764:  MOVFF  86E,870
03768:  MOVLW  1E
0376A:  MOVWF  x71
0376C:  CLRF   x72
0376E:  MOVLB  0
03770:  CALL   1CA4
....................                } 
....................             } 
03774:  MOVLB  5
03776:  INCF   x9D,F
03778:  BRA    36C0
....................          } 
....................       }else{ 
0377A:  BRA    377E
....................          Flanco = 0; 
0377C:  BCF    x87.4
....................       } 
....................              
....................       if(DOWN){ 
0377E:  BSF    F96.0
03780:  BTFSC  F84.0
03782:  BRA    3856
....................          if(Flanco2 == 0){ 
03784:  BTFSC  x87.6
03786:  BRA    3854
....................             Flanco2 = 1;delay_ms(5); 
03788:  BSF    x87.6
0378A:  MOVLW  05
0378C:  MOVLB  8
0378E:  MOVWF  x6E
03790:  MOVLB  0
03792:  CALL   13A4
....................             for(i=1;i<=4;i++){ 
03796:  MOVLW  01
03798:  MOVLB  5
0379A:  MOVWF  x9D
0379C:  MOVF   x9D,W
0379E:  SUBLW  04
037A0:  BNC   3854
....................                if(unidad==i){ 
037A2:  MOVF   x9D,W
037A4:  SUBWF  x9C,W
037A6:  BNZ   381C
....................                   Contrasena[i-1]--; 
037A8:  MOVLW  01
037AA:  SUBWF  x9D,W
037AC:  CLRF   03
037AE:  ADDLW  EE
037B0:  MOVWF  FE9
037B2:  MOVLW  05
037B4:  ADDWFC 03,W
037B6:  MOVWF  FEA
037B8:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0){ 
037BA:  MOVLW  01
037BC:  SUBWF  x9D,W
037BE:  CLRF   03
037C0:  ADDLW  EE
037C2:  MOVWF  FE9
037C4:  MOVLW  05
037C6:  ADDWFC 03,W
037C8:  MOVWF  FEA
037CA:  BTFSC  FEF.7
037CC:  BRA    37D0
037CE:  BRA    37E4
....................                      Contrasena[i-1]=9; 
037D0:  MOVLW  01
037D2:  SUBWF  x9D,W
037D4:  CLRF   03
037D6:  ADDLW  EE
037D8:  MOVWF  FE9
037DA:  MOVLW  05
037DC:  ADDWFC 03,W
037DE:  MOVWF  FEA
037E0:  MOVLW  09
037E2:  MOVWF  FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
037E4:  MOVLW  01
037E6:  SUBWF  x9D,W
037E8:  CLRF   03
037EA:  ADDLW  EE
037EC:  MOVWF  FE9
037EE:  MOVLW  05
037F0:  ADDWFC 03,W
037F2:  MOVWF  FEA
037F4:  MOVFF  FEF,86D
037F8:  MOVF   x9D,W
037FA:  MULLW  14
037FC:  MOVFF  FF3,86E
03800:  MOVLB  8
03802:  MOVFF  86D,86F
03806:  MOVFF  86E,870
0380A:  MOVLW  1E
0380C:  MOVWF  x71
0380E:  MOVLW  01
03810:  MOVWF  x72
03812:  MOVLB  0
03814:  CALL   1CA4
....................                }else{ 
03818:  BRA    384E
0381A:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
0381C:  MOVLW  01
0381E:  SUBWF  x9D,W
03820:  CLRF   03
03822:  ADDLW  EE
03824:  MOVWF  FE9
03826:  MOVLW  05
03828:  ADDWFC 03,W
0382A:  MOVWF  FEA
0382C:  MOVFF  FEF,86D
03830:  MOVF   x9D,W
03832:  MULLW  14
03834:  MOVFF  FF3,86E
03838:  MOVLB  8
0383A:  MOVFF  86D,86F
0383E:  MOVFF  86E,870
03842:  MOVLW  1E
03844:  MOVWF  x71
03846:  CLRF   x72
03848:  MOVLB  0
0384A:  CALL   1CA4
....................                } 
....................             }       
0384E:  MOVLB  5
03850:  INCF   x9D,F
03852:  BRA    379C
....................          }      
....................       }else{ 
03854:  BRA    3858
....................          Flanco2 = 0; 
03856:  BCF    x87.6
....................       } 
....................              
....................       if(RIGHT){ 
03858:  BSF    F96.1
0385A:  BTFSC  F84.1
0385C:  BRA    38F6
....................          if(Flanco1 == 0){ 
0385E:  BTFSC  x87.5
03860:  BRA    38F4
....................             Flanco1 = 1;delay_ms(5);unidad++; 
03862:  BSF    x87.5
03864:  MOVLW  05
03866:  MOVLB  8
03868:  MOVWF  x6E
0386A:  MOVLB  0
0386C:  CALL   13A4
03870:  MOVLB  5
03872:  INCF   x9C,F
....................             for(i=1;i<=4;i++){ 
03874:  MOVLW  01
03876:  MOVWF  x9D
03878:  MOVF   x9D,W
0387A:  SUBLW  04
0387C:  BNC   38F4
....................                if(unidad==i){ 
0387E:  MOVF   x9D,W
03880:  SUBWF  x9C,W
03882:  BNZ   38BC
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03884:  MOVLW  01
03886:  SUBWF  x9D,W
03888:  CLRF   03
0388A:  ADDLW  EE
0388C:  MOVWF  FE9
0388E:  MOVLW  05
03890:  ADDWFC 03,W
03892:  MOVWF  FEA
03894:  MOVFF  FEF,86D
03898:  MOVF   x9D,W
0389A:  MULLW  14
0389C:  MOVFF  FF3,86E
038A0:  MOVLB  8
038A2:  MOVFF  86D,86F
038A6:  MOVFF  86E,870
038AA:  MOVLW  1E
038AC:  MOVWF  x71
038AE:  MOVLW  01
038B0:  MOVWF  x72
038B2:  MOVLB  0
038B4:  CALL   1CA4
....................                }else{ 
038B8:  BRA    38EE
038BA:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
038BC:  MOVLW  01
038BE:  SUBWF  x9D,W
038C0:  CLRF   03
038C2:  ADDLW  EE
038C4:  MOVWF  FE9
038C6:  MOVLW  05
038C8:  ADDWFC 03,W
038CA:  MOVWF  FEA
038CC:  MOVFF  FEF,86D
038D0:  MOVF   x9D,W
038D2:  MULLW  14
038D4:  MOVFF  FF3,86E
038D8:  MOVLB  8
038DA:  MOVFF  86D,86F
038DE:  MOVFF  86E,870
038E2:  MOVLW  1E
038E4:  MOVWF  x71
038E6:  CLRF   x72
038E8:  MOVLB  0
038EA:  CALL   1CA4
....................                } 
....................             } 
038EE:  MOVLB  5
038F0:  INCF   x9D,F
038F2:  BRA    3878
....................          } 
....................       }else{ 
038F4:  BRA    38F8
....................          Flanco1 = 0; 
038F6:  BCF    x87.5
....................       } 
....................        
....................       if(LEFT){ 
038F8:  BSF    F96.2
038FA:  BTFSC  F84.2
038FC:  BRA    3946
....................          delay_ms(100); 
038FE:  MOVLW  64
03900:  MOVLB  8
03902:  MOVWF  x6E
03904:  MOVLB  0
03906:  CALL   13A4
....................          if(LEFT){ 
0390A:  BSF    F96.2
0390C:  BTFSC  F84.2
0390E:  BRA    3944
....................             Menu=MenuAnt;glcd_fillScreen(OFF);n=0;Opcion=1;unidad=1; 
03910:  MOVFF  866,59B
03914:  MOVLB  8
03916:  CLRF   x6D
03918:  MOVLB  0
0391A:  CALL   1424
0391E:  MOVLB  5
03920:  CLRF   x9A
03922:  MOVLW  01
03924:  MOVWF  xA2
03926:  MOVWF  x9C
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03928:  CLRF   xEE
0392A:  CLRF   xEF
0392C:  CLRF   xF0
0392E:  CLRF   xF1
....................             glcd_fillScreen(OFF);glcd_update(); 
03930:  MOVLB  8
03932:  CLRF   x6D
03934:  MOVLB  0
03936:  CALL   1424
0393A:  CALL   147E
....................             return 1; 
0393E:  MOVLW  01
03940:  MOVWF  01
03942:  BRA    3BE2
03944:  MOVLB  5
....................          } 
....................       } 
....................      
....................       if(unidad>4){ 
03946:  MOVF   x9C,W
03948:  SUBLW  04
0394A:  BTFSC  FD8.0
0394C:  BRA    3BE4
....................          glcd_fillScreen(OFF);unidad=1; 
0394E:  MOVLB  8
03950:  CLRF   x6D
03952:  MOVLB  0
03954:  CALL   1424
03958:  MOVLW  01
0395A:  MOVLB  5
0395C:  MOVWF  x9C
....................          /* 
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2 && MenuActual==0){ // Si Ingresa clave para reset general del sistema. 
....................             write_eeprom(0,0);delay_ms(20);write_eeprom(1,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
....................             write_eeprom(2,0);delay_ms(20);write_eeprom(3,0);delay_ms(20); 
....................             reset_cpu(); 
....................          } 
....................       */ 
....................          if((Contrasena[0]==clave0)&&(Contrasena[1]==clave1)&&(Contrasena[2]==clave2)&&(Contrasena[3]==clave3)){ 
0395E:  MOVLB  8
03960:  MOVF   x69,W
03962:  MOVLB  5
03964:  SUBWF  xEE,W
03966:  BTFSS  FD8.2
03968:  BRA    3A52
0396A:  MOVLB  8
0396C:  MOVF   x6A,W
0396E:  MOVLB  5
03970:  SUBWF  xEF,W
03972:  BNZ   3A52
03974:  MOVLB  8
03976:  MOVF   x6B,W
03978:  MOVLB  5
0397A:  SUBWF  xF0,W
0397C:  BNZ   3A52
0397E:  MOVLB  8
03980:  MOVF   x6C,W
03982:  MOVLB  5
03984:  SUBWF  xF1,W
03986:  BNZ   3A52
....................             glcd_fillScreen(OFF); 
03988:  MOVLB  8
0398A:  CLRF   x6D
0398C:  MOVLB  0
0398E:  CALL   1424
....................             strcpy(Menus.Letra,"Clave"); 
03992:  MOVLW  08
03994:  MOVWF  FEA
03996:  MOVLW  46
03998:  MOVWF  FE9
0399A:  MOVFF  FF2,86D
0399E:  BCF    FF2.7
039A0:  MOVLW  00
039A2:  CALL   07D8
039A6:  TBLRD*-
039A8:  TBLRD*+
039AA:  MOVF   FF5,W
039AC:  MOVWF  FEE
039AE:  IORLW  00
039B0:  BNZ   39A8
039B2:  MOVLB  8
039B4:  BTFSC  x6D.7
039B6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
039B8:  MOVLW  08
039BA:  MOVWF  x6E
039BC:  MOVLW  46
039BE:  MOVWF  x6D
039C0:  MOVLW  1E
039C2:  MOVWF  x6F
039C4:  CLRF   x70
039C6:  CLRF   x71
039C8:  MOVLW  02
039CA:  MOVWF  x72
039CC:  MOVLB  0
039CE:  CALL   1A52
....................             strcpy(Menus.Letra,"Correcta"); 
039D2:  MOVLW  08
039D4:  MOVWF  FEA
039D6:  MOVLW  46
039D8:  MOVWF  FE9
039DA:  MOVFF  FF2,86D
039DE:  BCF    FF2.7
039E0:  MOVLW  00
039E2:  CALL   07FC
039E6:  TBLRD*-
039E8:  TBLRD*+
039EA:  MOVF   FF5,W
039EC:  MOVWF  FEE
039EE:  IORLW  00
039F0:  BNZ   39E8
039F2:  MOVLB  8
039F4:  BTFSC  x6D.7
039F6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
039F8:  MOVLW  08
039FA:  MOVWF  x6E
039FC:  MOVLW  46
039FE:  MOVWF  x6D
03A00:  MOVLW  0F
03A02:  MOVWF  x6F
03A04:  MOVLW  1E
03A06:  MOVWF  x70
03A08:  CLRF   x71
03A0A:  MOVLW  02
03A0C:  MOVWF  x72
03A0E:  MOVLB  0
03A10:  CALL   1A52
....................             Menu=MenuPost;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
03A14:  MOVFF  868,59B
03A18:  CALL   147E
03A1C:  MOVLW  04
03A1E:  MOVLB  8
03A20:  MOVWF  x6D
03A22:  MOVLW  FA
03A24:  MOVWF  x6E
03A26:  MOVLB  0
03A28:  CALL   13A4
03A2C:  MOVLB  8
03A2E:  DECFSZ x6D,F
03A30:  BRA    3A22
03A32:  CLRF   x6D
03A34:  MOVLB  0
03A36:  CALL   1424
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03A3A:  MOVLB  5
03A3C:  CLRF   xEE
03A3E:  CLRF   xEF
03A40:  CLRF   xF0
03A42:  CLRF   xF1
....................             n=0; 
03A44:  CLRF   x9A
....................             return 1; 
03A46:  MOVLW  01
03A48:  MOVWF  01
03A4A:  MOVLB  0
03A4C:  BRA    3BE2
....................          }else{ 
03A4E:  BRA    3BE2
03A50:  MOVLB  5
....................             glcd_fillScreen(OFF); 
03A52:  MOVLB  8
03A54:  CLRF   x6D
03A56:  MOVLB  0
03A58:  CALL   1424
....................             strcpy(Menus.Letra,"Clave"); 
03A5C:  MOVLW  08
03A5E:  MOVWF  FEA
03A60:  MOVLW  46
03A62:  MOVWF  FE9
03A64:  MOVFF  FF2,86D
03A68:  BCF    FF2.7
03A6A:  MOVLW  00
03A6C:  CALL   07D8
03A70:  TBLRD*-
03A72:  TBLRD*+
03A74:  MOVF   FF5,W
03A76:  MOVWF  FEE
03A78:  IORLW  00
03A7A:  BNZ   3A72
03A7C:  MOVLB  8
03A7E:  BTFSC  x6D.7
03A80:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
03A82:  MOVLW  08
03A84:  MOVWF  x6E
03A86:  MOVLW  46
03A88:  MOVWF  x6D
03A8A:  MOVLW  1E
03A8C:  MOVWF  x6F
03A8E:  CLRF   x70
03A90:  CLRF   x71
03A92:  MOVLW  02
03A94:  MOVWF  x72
03A96:  MOVLB  0
03A98:  CALL   1A52
....................             strcpy(Menus.Letra,"Incorrecta"); 
03A9C:  MOVLW  08
03A9E:  MOVWF  FEA
03AA0:  MOVLW  46
03AA2:  MOVWF  FE9
03AA4:  MOVFF  FF2,86D
03AA8:  BCF    FF2.7
03AAA:  MOVLW  00
03AAC:  CALL   0824
03AB0:  TBLRD*-
03AB2:  TBLRD*+
03AB4:  MOVF   FF5,W
03AB6:  MOVWF  FEE
03AB8:  IORLW  00
03ABA:  BNZ   3AB2
03ABC:  MOVLB  8
03ABE:  BTFSC  x6D.7
03AC0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
03AC2:  MOVLW  08
03AC4:  MOVWF  x6E
03AC6:  MOVLW  46
03AC8:  MOVWF  x6D
03ACA:  CLRF   x6F
03ACC:  MOVLW  1E
03ACE:  MOVWF  x70
03AD0:  CLRF   x71
03AD2:  MOVLW  02
03AD4:  MOVWF  x72
03AD6:  MOVLB  0
03AD8:  CALL   1A52
....................             unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
03ADC:  MOVLW  01
03ADE:  MOVLB  5
03AE0:  MOVWF  x9C
03AE2:  MOVLB  0
03AE4:  CALL   147E
03AE8:  MOVLW  04
03AEA:  MOVLB  8
03AEC:  MOVWF  x6D
03AEE:  MOVLW  FA
03AF0:  MOVWF  x6E
03AF2:  MOVLB  0
03AF4:  CALL   13A4
03AF8:  MOVLB  8
03AFA:  DECFSZ x6D,F
03AFC:  BRA    3AEE
03AFE:  MOVLB  5
03B00:  CLRF   xEE
03B02:  CLRF   xEF
03B04:  CLRF   xF0
03B06:  CLRF   xF1
03B08:  MOVLB  8
03B0A:  CLRF   x6D
03B0C:  MOVLB  0
03B0E:  CALL   1424
....................             glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
03B12:  MOVLB  8
03B14:  CLRF   x7E
03B16:  CLRF   x7F
03B18:  MOVLW  7F
03B1A:  MOVWF  x80
03B1C:  MOVLW  19
03B1E:  MOVWF  x81
03B20:  MOVLW  01
03B22:  MOVWF  x82
03B24:  MOVWF  x83
03B26:  MOVLB  0
03B28:  CALL   17D8
03B2C:  MOVLW  08
03B2E:  MOVWF  FEA
03B30:  MOVLW  46
03B32:  MOVWF  FE9
03B34:  MOVFF  FF2,86D
03B38:  BCF    FF2.7
03B3A:  MOVLW  00
03B3C:  CALL   07D8
03B40:  TBLRD*-
03B42:  TBLRD*+
03B44:  MOVF   FF5,W
03B46:  MOVWF  FEE
03B48:  IORLW  00
03B4A:  BNZ   3B42
03B4C:  MOVLB  8
03B4E:  BTFSC  x6D.7
03B50:  BSF    FF2.7
03B52:  MOVLW  19
03B54:  MOVWF  x7E
03B56:  MOVLW  01
03B58:  MOVWF  x7F
03B5A:  MOVLW  08
03B5C:  MOVWF  x81
03B5E:  MOVLW  46
03B60:  MOVWF  x80
03B62:  MOVLW  03
03B64:  MOVWF  x82
03B66:  CLRF   x83
03B68:  MOVLB  0
03B6A:  CALL   189A
03B6E:  MOVFF  5EE,86F
03B72:  MOVLW  14
03B74:  MOVLB  8
03B76:  MOVWF  x70
03B78:  MOVLW  1E
03B7A:  MOVWF  x71
03B7C:  MOVLW  01
03B7E:  MOVWF  x72
03B80:  MOVLB  0
03B82:  CALL   1CA4
....................             displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
03B86:  MOVFF  5EF,86F
03B8A:  MOVLW  28
03B8C:  MOVLB  8
03B8E:  MOVWF  x70
03B90:  MOVLW  1E
03B92:  MOVWF  x71
03B94:  CLRF   x72
03B96:  MOVLB  0
03B98:  CALL   1CA4
03B9C:  MOVFF  5F0,86F
03BA0:  MOVLW  3C
03BA2:  MOVLB  8
03BA4:  MOVWF  x70
03BA6:  MOVLW  1E
03BA8:  MOVWF  x71
03BAA:  CLRF   x72
03BAC:  MOVLB  0
03BAE:  CALL   1CA4
03BB2:  MOVFF  5EE,86F
03BB6:  MOVLW  50
03BB8:  MOVLB  8
03BBA:  MOVWF  x70
03BBC:  MOVLW  1E
03BBE:  MOVWF  x71
03BC0:  CLRF   x72
03BC2:  MOVLB  0
03BC4:  CALL   1CA4
....................             Menu=MenuAnt;glcd_fillScreen(OFF);n=0; 
03BC8:  MOVFF  866,59B
03BCC:  MOVLB  8
03BCE:  CLRF   x6D
03BD0:  MOVLB  0
03BD2:  CALL   1424
03BD6:  MOVLB  5
03BD8:  CLRF   x9A
....................             return 0; 
03BDA:  MOVLW  00
03BDC:  MOVWF  01
03BDE:  MOVLB  0
03BE0:  BRA    3BE2
03BE2:  MOVLB  5
....................          } 
....................       } 
.................... } 
03BE4:  MOVLB  0
03BE6:  RETLW  00
....................  
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(40536); 
*
012F0:  MOVLW  9E
012F2:  MOVWF  FCF
012F4:  MOVLW  58
012F6:  MOVWF  FCE
....................    tiempos++; 
012F8:  MOVLB  5
012FA:  INCF   xAA,F
012FC:  BTFSC  FD8.2
012FE:  INCF   xAB,F
....................    tiempos3++; 
01300:  INCF   xAC,F
01302:  BTFSC  FD8.2
01304:  INCF   xAD,F
....................    tiempoctrl++; 
01306:  INCF   xAE,F
01308:  BTFSC  FD8.2
0130A:  INCF   xAF,F
....................     
....................    if(Control==1){ 
0130C:  DECFSZ x99,W
0130E:  BRA    133C
....................       if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
01310:  MOVF   xB9,W
01312:  SUBWF  xAF,W
01314:  BNC   1322
01316:  BNZ   131E
01318:  MOVF   xB8,W
0131A:  SUBWF  xAE,W
0131C:  BNC   1322
....................          tiempoctrl=0; 
0131E:  CLRF   xAF
01320:  CLRF   xAE
....................        // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................        
....................       if(tiempoctrl<=Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
01322:  MOVF   xAF,W
01324:  SUBWF  xB7,W
01326:  BNC   1336
01328:  BNZ   1330
0132A:  MOVF   xAE,W
0132C:  SUBWF  xB6,W
0132E:  BNC   1336
....................          Resistencia_on;  
01330:  BSF    F8B.0
01332:  BCF    F94.0
....................       else          
01334:  BRA    133A
....................          Resistencia_off; 
01336:  BCF    F8B.0
01338:  BCF    F94.0
....................    }else{ 
0133A:  BRA    1340
....................       Resistencia_off; 
0133C:  BCF    F8B.0
0133E:  BCF    F94.0
....................    } 
....................     
....................    if(tiempos3>=200){ 
01340:  MOVF   xAD,F
01342:  BNZ   134A
01344:  MOVF   xAC,W
01346:  SUBLW  C7
01348:  BC    135E
....................       Lectura2=1; 
0134A:  MOVLW  01
0134C:  MOVWF  x8F
....................       if(flagup) 
0134E:  BTFSS  x87.0
01350:  BRA    1354
....................          tiempoup++; 
01352:  INCF   x90,F
....................       if(flagdn) 
01354:  BTFSS  x87.1
01356:  BRA    135A
....................          tiempodn++;    
01358:  INCF   x91,F
....................       tiempos3=0; 
0135A:  CLRF   xAD
0135C:  CLRF   xAC
....................    } 
....................      
....................    if(tiempos>=200){  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0135E:  MOVF   xAB,F
01360:  BNZ   1368
01362:  MOVF   xAA,W
01364:  SUBLW  C7
01366:  BC    139C
....................       tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++;mensaje=!mensaje; 
01368:  CLRF   xAB
0136A:  CLRF   xAA
0136C:  BSF    x95.0
0136E:  INCF   x97,F
01370:  INCF   xA1,F
01372:  INCF   x8D,F
01374:  BTG    x87.3
....................     
....................       if(flag_setpoint==1) 
01376:  BTFSS  x95.6
01378:  BRA    1380
....................          tiemposetpoint++; 
0137A:  INCF   xB4,F
0137C:  BTFSC  FD8.2
0137E:  INCF   xB5,F
....................        
....................       if(tiempo_esterilizacion==1 || tiempo_esterilizacion==2){                
01380:  DECFSZ xA3,W
01382:  BRA    1386
01384:  BRA    138C
01386:  MOVF   xA3,W
01388:  SUBLW  02
0138A:  BNZ   1392
....................          tinicio++; 
0138C:  INCF   xB0,F
0138E:  BTFSC  FD8.2
01390:  INCF   xB1,F
....................       } 
....................           
....................       if(flag_tiempocalentamiento==1) 
01392:  BTFSS  x95.4
01394:  BRA    139C
....................          tiempocalentamiento++; 
01396:  INCF   xB2,F
01398:  BTFSC  FD8.2
0139A:  INCF   xB3,F
....................    }         
.................... } 
....................  
0139C:  BCF    F9E.0
0139E:  MOVLB  0
013A0:  GOTO   0058
.................... void main()  
.................... {  
*
06CD8:  CLRF   FF8
06CDA:  BCF    FD0.7
06CDC:  BSF    07.7
06CDE:  CLRF   FEA
06CE0:  CLRF   FE9
06CE2:  MOVLB  5
06CE4:  BCF    x87.0
06CE6:  BCF    x87.1
06CE8:  BCF    x87.2
06CEA:  BCF    x87.3
06CEC:  CLRF   x88
06CEE:  CLRF   x89
06CF0:  CLRF   x8A
06CF2:  CLRF   x8B
06CF4:  MOVLW  0A
06CF6:  MOVWF  x8C
06CF8:  CLRF   x8D
06CFA:  CLRF   x8E
06CFC:  CLRF   x8F
06CFE:  CLRF   x90
06D00:  CLRF   x91
06D02:  CLRF   x92
06D04:  CLRF   x93
06D06:  MOVLW  05
06D08:  MOVWF  x94
06D0A:  BCF    x87.4
06D0C:  BCF    x87.5
06D0E:  BCF    x87.6
06D10:  BSF    x87.7
06D12:  BCF    x95.0
06D14:  BCF    x95.1
06D16:  BCF    x95.2
06D18:  BCF    x95.3
06D1A:  BCF    x95.4
06D1C:  BCF    x95.5
06D1E:  BCF    x95.6
06D20:  BCF    x95.7
06D22:  CLRF   x96
06D24:  CLRF   x97
06D26:  MOVLW  01
06D28:  MOVWF  x98
06D2A:  CLRF   x99
06D2C:  CLRF   x9A
06D2E:  CLRF   x9B
06D30:  MOVWF  x9C
06D32:  CLRF   x9D
06D34:  MOVWF  x9E
06D36:  CLRF   x9F
06D38:  CLRF   xA0
06D3A:  CLRF   xA1
06D3C:  MOVWF  xA2
06D3E:  CLRF   xA3
06D40:  CLRF   xA4
06D42:  MOVLW  0A
06D44:  MOVWF  xA5
06D46:  CLRF   xA6
06D48:  CLRF   xA7
06D4A:  CLRF   xA8
06D4C:  CLRF   xA9
06D4E:  CLRF   xAB
06D50:  CLRF   xAA
06D52:  CLRF   xAD
06D54:  CLRF   xAC
06D56:  CLRF   xAF
06D58:  CLRF   xAE
06D5A:  CLRF   xB1
06D5C:  CLRF   xB0
06D5E:  CLRF   xB3
06D60:  CLRF   xB2
06D62:  CLRF   xB5
06D64:  CLRF   xB4
06D66:  CLRF   xB7
06D68:  CLRF   xB6
06D6A:  CLRF   xB9
06D6C:  CLRF   xB8
06D6E:  CLRF   xBB
06D70:  MOVLW  14
06D72:  MOVWF  xBA
06D74:  CLRF   xBD
06D76:  CLRF   xBC
06D78:  CLRF   xC1
06D7A:  CLRF   xC0
06D7C:  CLRF   xBF
06D7E:  CLRF   xBE
06D80:  CLRF   xC5
06D82:  CLRF   xC4
06D84:  MOVLW  20
06D86:  MOVWF  xC3
06D88:  MOVLW  83
06D8A:  MOVWF  xC2
06D8C:  CLRF   xC9
06D8E:  CLRF   xC8
06D90:  CLRF   xC7
06D92:  CLRF   xC6
06D94:  CLRF   xCD
06D96:  CLRF   xCC
06D98:  CLRF   xCB
06D9A:  CLRF   xCA
06D9C:  CLRF   xD1
06D9E:  CLRF   xD0
06DA0:  CLRF   xCF
06DA2:  CLRF   xCE
06DA4:  CLRF   xD5
06DA6:  CLRF   xD4
06DA8:  CLRF   xD3
06DAA:  CLRF   xD2
06DAC:  CLRF   xD9
06DAE:  CLRF   xD8
06DB0:  CLRF   xD7
06DB2:  CLRF   xD6
06DB4:  CLRF   xDD
06DB6:  CLRF   xDC
06DB8:  CLRF   xDB
06DBA:  CLRF   xDA
06DBC:  CLRF   xE1
06DBE:  CLRF   xE0
06DC0:  CLRF   xDF
06DC2:  CLRF   xDE
06DC4:  CLRF   xE5
06DC6:  CLRF   xE4
06DC8:  CLRF   xE3
06DCA:  CLRF   xE2
06DCC:  CLRF   xF9
06DCE:  CLRF   xF8
06DD0:  CLRF   xF7
06DD2:  CLRF   xF6
06DD4:  CLRF   xFD
06DD6:  CLRF   xFC
06DD8:  MOVLW  20
06DDA:  MOVWF  xFB
06DDC:  MOVLW  82
06DDE:  MOVWF  xFA
06DE0:  MOVLB  6
06DE2:  CLRF   x01
06DE4:  CLRF   x00
06DE6:  MOVLB  5
06DE8:  CLRF   xFF
06DEA:  CLRF   xFE
06DEC:  MOVLB  6
06DEE:  CLRF   x05
06DF0:  CLRF   x04
06DF2:  CLRF   x03
06DF4:  CLRF   x02
06DF6:  CLRF   x09
06DF8:  CLRF   x08
06DFA:  CLRF   x07
06DFC:  CLRF   x06
06DFE:  CLRF   x0D
06E00:  CLRF   x0C
06E02:  CLRF   x0B
06E04:  CLRF   x0A
06E06:  CLRF   x11
06E08:  CLRF   x10
06E0A:  CLRF   x0F
06E0C:  CLRF   x0E
06E0E:  CLRF   x15
06E10:  CLRF   x14
06E12:  CLRF   x13
06E14:  CLRF   x12
06E16:  CLRF   x19
06E18:  CLRF   x18
06E1A:  MOVLW  40
06E1C:  MOVWF  x17
06E1E:  MOVLW  80
06E20:  MOVWF  x16
06E22:  CLRF   x1D
06E24:  CLRF   x1C
06E26:  MOVLW  40
06E28:  MOVWF  x1B
06E2A:  MOVLW  80
06E2C:  MOVWF  x1A
06E2E:  CLRF   x21
06E30:  CLRF   x20
06E32:  MOVLW  16
06E34:  MOVWF  x1F
06E36:  MOVLW  86
06E38:  MOVWF  x1E
06E3A:  CLRF   x25
06E3C:  CLRF   x24
06E3E:  MOVLW  70
06E40:  MOVWF  x23
06E42:  MOVLW  86
06E44:  MOVWF  x22
06E46:  CLRF   x29
06E48:  CLRF   x28
06E4A:  CLRF   x27
06E4C:  CLRF   x26
06E4E:  CLRF   x2D
06E50:  CLRF   x2C
06E52:  CLRF   x2B
06E54:  CLRF   x2A
06E56:  CLRF   x31
06E58:  CLRF   x30
06E5A:  CLRF   x2F
06E5C:  CLRF   x2E
06E5E:  CLRF   x35
06E60:  CLRF   x34
06E62:  CLRF   x33
06E64:  CLRF   x32
06E66:  CLRF   x39
06E68:  CLRF   x38
06E6A:  CLRF   x37
06E6C:  CLRF   x36
06E6E:  CLRF   x3D
06E70:  CLRF   x3C
06E72:  CLRF   x3B
06E74:  CLRF   x3A
06E76:  CLRF   x41
06E78:  CLRF   x40
06E7A:  CLRF   x3F
06E7C:  CLRF   x3E
06E7E:  CLRF   x45
06E80:  CLRF   x44
06E82:  CLRF   x43
06E84:  CLRF   x42
06E86:  CLRF   x49
06E88:  CLRF   x48
06E8A:  CLRF   x47
06E8C:  CLRF   x46
06E8E:  CLRF   x4D
06E90:  CLRF   x4C
06E92:  CLRF   x4B
06E94:  CLRF   x4A
06E96:  CLRF   x51
06E98:  CLRF   x50
06E9A:  CLRF   x4F
06E9C:  CLRF   x4E
06E9E:  CLRF   x55
06EA0:  MOVLW  40
06EA2:  MOVWF  x54
06EA4:  MOVLW  1C
06EA6:  MOVWF  x53
06EA8:  MOVLW  89
06EAA:  MOVWF  x52
06EAC:  CLRF   x59
06EAE:  CLRF   x58
06EB0:  CLRF   x57
06EB2:  CLRF   x56
06EB4:  CLRF   x5D
06EB6:  CLRF   x5C
06EB8:  MOVLW  48
06EBA:  MOVWF  x5B
06EBC:  MOVLW  84
06EBE:  MOVWF  x5A
06EC0:  CLRF   x61
06EC2:  CLRF   x60
06EC4:  CLRF   x5F
06EC6:  CLRF   x5E
06EC8:  CLRF   x65
06ECA:  CLRF   x64
06ECC:  CLRF   x63
06ECE:  CLRF   x62
06ED0:  MOVF   FC1,W
06ED2:  ANDLW  C0
06ED4:  IORLW  0F
06ED6:  MOVWF  FC1
06ED8:  MOVLW  07
06EDA:  MOVWF  FB4
06EDC:  MOVLB  4
06EDE:  CLRF   x17
06EE0:  CLRF   x18
06EE2:  CLRF   x19
06EE4:  CLRF   x1A
06EE6:  CLRF   x1B
06EE8:  CLRF   x1C
06EEA:  CLRF   x1D
06EEC:  CLRF   x1E
06EEE:  CLRF   x1F
06EF0:  CLRF   x20
06EF2:  CLRF   x21
06EF4:  CLRF   x22
06EF6:  CLRF   x23
06EF8:  CLRF   x24
06EFA:  CLRF   x25
06EFC:  CLRF   x26
06EFE:  CLRF   x27
06F00:  CLRF   x28
06F02:  CLRF   x29
06F04:  CLRF   x2A
06F06:  CLRF   x2B
06F08:  CLRF   x2C
06F0A:  CLRF   x2D
06F0C:  CLRF   x2E
06F0E:  CLRF   x2F
06F10:  CLRF   x30
06F12:  CLRF   x31
06F14:  CLRF   x32
06F16:  CLRF   x33
06F18:  CLRF   x34
06F1A:  CLRF   x35
06F1C:  CLRF   x36
06F1E:  CLRF   x37
06F20:  CLRF   x38
06F22:  CLRF   x39
06F24:  CLRF   x3A
06F26:  CLRF   x3B
06F28:  CLRF   x3C
06F2A:  CLRF   x3D
06F2C:  CLRF   x3E
06F2E:  CLRF   x3F
06F30:  CLRF   x40
06F32:  CLRF   x41
06F34:  CLRF   x42
06F36:  CLRF   x43
06F38:  CLRF   x44
06F3A:  CLRF   x45
06F3C:  CLRF   x46
06F3E:  CLRF   x47
06F40:  CLRF   x48
06F42:  CLRF   x49
06F44:  CLRF   x4A
06F46:  CLRF   x4B
06F48:  CLRF   x4C
06F4A:  CLRF   x4D
06F4C:  CLRF   x4E
06F4E:  CLRF   x4F
06F50:  CLRF   x50
06F52:  CLRF   x51
06F54:  CLRF   x52
06F56:  CLRF   x53
06F58:  CLRF   x54
06F5A:  CLRF   x55
06F5C:  CLRF   x56
06F5E:  CLRF   x57
06F60:  CLRF   x58
06F62:  CLRF   x59
06F64:  CLRF   x5A
06F66:  CLRF   x5B
06F68:  CLRF   x5C
06F6A:  CLRF   x5D
06F6C:  CLRF   x5E
06F6E:  CLRF   x5F
06F70:  CLRF   x60
06F72:  CLRF   x61
06F74:  CLRF   x62
06F76:  CLRF   x63
06F78:  CLRF   x64
06F7A:  CLRF   x65
06F7C:  CLRF   x66
06F7E:  CLRF   x67
06F80:  CLRF   x68
06F82:  CLRF   x69
06F84:  CLRF   x6A
06F86:  CLRF   x6B
06F88:  CLRF   x6C
06F8A:  CLRF   x6D
06F8C:  CLRF   x6E
06F8E:  CLRF   x6F
06F90:  CLRF   x70
06F92:  CLRF   x71
06F94:  CLRF   x72
06F96:  CLRF   x73
06F98:  CLRF   x74
06F9A:  CLRF   x75
06F9C:  CLRF   x76
06F9E:  CLRF   x77
06FA0:  CLRF   x78
06FA2:  CLRF   x79
06FA4:  CLRF   x7A
06FA6:  CLRF   x7B
06FA8:  CLRF   x7C
06FAA:  CLRF   x7D
06FAC:  CLRF   x7E
06FAE:  CLRF   x7F
06FB0:  CLRF   x80
06FB2:  CLRF   x81
06FB4:  CLRF   x82
06FB6:  CLRF   x83
06FB8:  CLRF   x84
06FBA:  CLRF   x85
06FBC:  CLRF   x86
06FBE:  CLRF   x87
06FC0:  CLRF   x88
06FC2:  CLRF   x89
06FC4:  CLRF   x8A
06FC6:  CLRF   x8B
06FC8:  CLRF   x8C
06FCA:  CLRF   x8D
06FCC:  CLRF   x8E
06FCE:  CLRF   x8F
06FD0:  CLRF   x90
06FD2:  CLRF   x91
06FD4:  CLRF   x92
06FD6:  CLRF   x93
06FD8:  CLRF   x94
06FDA:  CLRF   x95
06FDC:  CLRF   x96
06FDE:  CLRF   x97
06FE0:  CLRF   x98
06FE2:  CLRF   x99
06FE4:  CLRF   x9A
06FE6:  CLRF   x9B
06FE8:  CLRF   x9C
06FEA:  CLRF   x9D
06FEC:  CLRF   x9E
06FEE:  CLRF   x9F
06FF0:  CLRF   xA0
06FF2:  CLRF   xA1
06FF4:  CLRF   xA2
06FF6:  CLRF   xA3
06FF8:  CLRF   xA4
06FFA:  CLRF   xA5
06FFC:  CLRF   xA6
06FFE:  CLRF   xA7
07000:  CLRF   xA8
07002:  CLRF   xA9
07004:  CLRF   xAA
07006:  CLRF   xAB
07008:  CLRF   xAC
0700A:  CLRF   xAD
0700C:  CLRF   xAE
0700E:  CLRF   xAF
07010:  CLRF   xB0
07012:  CLRF   xB1
07014:  CLRF   xB2
07016:  CLRF   xB3
07018:  CLRF   xB4
0701A:  CLRF   xB5
0701C:  CLRF   xB6
0701E:  CLRF   xB7
07020:  CLRF   xB8
07022:  CLRF   xB9
07024:  CLRF   xBA
07026:  CLRF   xBB
07028:  CLRF   xBC
0702A:  CLRF   xBD
0702C:  CLRF   xBE
0702E:  CLRF   xBF
07030:  CLRF   xC0
07032:  CLRF   xC1
07034:  CLRF   xC2
07036:  CLRF   xC3
07038:  CLRF   xC4
0703A:  CLRF   xC5
0703C:  CLRF   xC6
0703E:  CLRF   xC7
07040:  CLRF   xC8
07042:  CLRF   xC9
07044:  CLRF   xCA
07046:  CLRF   xCB
07048:  CLRF   xCC
0704A:  CLRF   xCD
0704C:  CLRF   xCE
0704E:  CLRF   xCF
07050:  CLRF   xD0
07052:  CLRF   xD1
07054:  CLRF   xD2
07056:  CLRF   xD3
07058:  CLRF   xD4
0705A:  CLRF   xD5
0705C:  CLRF   xD6
0705E:  CLRF   xD7
07060:  CLRF   xD8
07062:  CLRF   xD9
07064:  CLRF   xDA
07066:  CLRF   xDB
07068:  CLRF   xDC
0706A:  CLRF   xDD
0706C:  CLRF   xDE
0706E:  CLRF   xDF
07070:  CLRF   xE0
07072:  CLRF   xE1
07074:  CLRF   xE2
07076:  CLRF   xE3
07078:  CLRF   xE4
0707A:  CLRF   xE5
0707C:  CLRF   xE6
0707E:  CLRF   xE7
07080:  CLRF   xE8
07082:  CLRF   xE9
07084:  CLRF   xEA
07086:  CLRF   xEB
07088:  CLRF   xEC
0708A:  CLRF   xED
0708C:  CLRF   xEE
0708E:  CLRF   xEF
07090:  CLRF   xF0
07092:  CLRF   xF1
07094:  CLRF   xF2
07096:  CLRF   xF3
07098:  CLRF   xF4
0709A:  CLRF   xF5
0709C:  CLRF   xF6
0709E:  CLRF   xF7
070A0:  CLRF   xF8
070A2:  CLRF   xF9
070A4:  CLRF   xFA
070A6:  CLRF   xFB
070A8:  CLRF   xFC
070AA:  CLRF   xFD
070AC:  CLRF   xFE
070AE:  CLRF   xFF
070B0:  MOVLB  5
070B2:  CLRF   x00
070B4:  CLRF   x01
070B6:  CLRF   x02
070B8:  CLRF   x03
070BA:  CLRF   x04
070BC:  CLRF   x05
070BE:  CLRF   x06
070C0:  CLRF   x07
070C2:  CLRF   x08
070C4:  CLRF   x09
070C6:  CLRF   x0A
070C8:  CLRF   x0B
070CA:  CLRF   x0C
070CC:  CLRF   x0D
070CE:  CLRF   x0E
070D0:  CLRF   x0F
070D2:  CLRF   x10
070D4:  CLRF   x11
070D6:  CLRF   x12
070D8:  CLRF   x13
070DA:  CLRF   x14
070DC:  CLRF   x15
070DE:  CLRF   x16
070E0:  CLRF   x17
070E2:  CLRF   x18
070E4:  CLRF   x19
070E6:  CLRF   x1A
070E8:  CLRF   x1B
070EA:  CLRF   x1C
070EC:  CLRF   x1D
070EE:  CLRF   x1E
070F0:  CLRF   x1F
070F2:  CLRF   x20
070F4:  CLRF   x21
070F6:  CLRF   x22
070F8:  CLRF   x23
070FA:  CLRF   x24
070FC:  CLRF   x25
070FE:  CLRF   x26
07100:  CLRF   x27
07102:  CLRF   x28
07104:  CLRF   x29
07106:  CLRF   x2A
07108:  CLRF   x2B
0710A:  CLRF   x2C
0710C:  CLRF   x2D
0710E:  CLRF   x2E
07110:  CLRF   x2F
07112:  CLRF   x30
07114:  CLRF   x31
07116:  CLRF   x32
07118:  CLRF   x33
0711A:  CLRF   x34
0711C:  CLRF   x35
0711E:  CLRF   x36
07120:  CLRF   x37
07122:  CLRF   x38
07124:  CLRF   x39
07126:  CLRF   x3A
07128:  CLRF   x3B
0712A:  CLRF   x3C
0712C:  CLRF   x3D
0712E:  CLRF   x3E
07130:  CLRF   x3F
07132:  CLRF   x40
07134:  CLRF   x41
07136:  CLRF   x42
07138:  CLRF   x43
0713A:  CLRF   x44
0713C:  CLRF   x45
0713E:  CLRF   x46
07140:  CLRF   x47
07142:  CLRF   x48
07144:  CLRF   x49
07146:  CLRF   x4A
07148:  CLRF   x4B
0714A:  CLRF   x4C
0714C:  CLRF   x4D
0714E:  CLRF   x4E
07150:  CLRF   x4F
07152:  CLRF   x50
07154:  CLRF   x51
07156:  CLRF   x52
07158:  CLRF   x53
0715A:  CLRF   x54
0715C:  CLRF   x55
0715E:  CLRF   x56
07160:  CLRF   x57
07162:  CLRF   x58
07164:  CLRF   x59
07166:  CLRF   x5A
07168:  CLRF   x5B
0716A:  CLRF   x5C
0716C:  CLRF   x5D
0716E:  CLRF   x5E
07170:  CLRF   x5F
07172:  CLRF   x60
07174:  CLRF   x61
07176:  CLRF   x62
07178:  CLRF   x63
0717A:  CLRF   x64
0717C:  CLRF   x65
0717E:  CLRF   x66
07180:  CLRF   x67
07182:  CLRF   x68
07184:  CLRF   x69
07186:  CLRF   x6A
07188:  CLRF   x6B
0718A:  CLRF   x6C
0718C:  CLRF   x6D
0718E:  CLRF   x6E
07190:  CLRF   x6F
07192:  CLRF   x70
07194:  CLRF   x71
07196:  CLRF   x72
07198:  CLRF   x73
0719A:  CLRF   x74
0719C:  CLRF   x75
0719E:  CLRF   x76
071A0:  CLRF   x77
071A2:  CLRF   x78
071A4:  CLRF   x79
071A6:  CLRF   x7A
071A8:  CLRF   x7B
071AA:  CLRF   x7C
071AC:  CLRF   x7D
071AE:  CLRF   x7E
071B0:  CLRF   x7F
071B2:  CLRF   x80
071B4:  CLRF   x81
071B6:  CLRF   x82
071B8:  CLRF   x83
071BA:  CLRF   x84
071BC:  CLRF   x85
071BE:  CLRF   x86
071C0:  CLRF   xE6
071C2:  CLRF   xE7
071C4:  CLRF   xE8
071C6:  CLRF   xE9
071C8:  CLRF   xEA
071CA:  CLRF   xEB
071CC:  CLRF   xEC
071CE:  CLRF   xED
071D0:  CLRF   xEE
071D2:  CLRF   xEF
071D4:  CLRF   xF0
071D6:  CLRF   xF1
071D8:  CLRF   xF2
071DA:  CLRF   xF3
071DC:  CLRF   xF4
071DE:  CLRF   xF5
071E0:  MOVLB  8
071E2:  CLRF   x64
071E4:  CLRF   x65
....................    delay_ms(1000); 
071E6:  MOVLW  04
071E8:  MOVWF  x66
071EA:  MOVLW  FA
071EC:  MOVWF  x6E
071EE:  MOVLB  0
071F0:  CALL   13A4
071F4:  MOVLB  8
071F6:  DECFSZ x66,F
071F8:  BRA    71EA
....................    ConfigInicial(); 
071FA:  MOVLB  0
071FC:  GOTO   13CC
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
07200:  MOVLW  01
07202:  MOVLB  8
07204:  MOVWF  x66
07206:  MOVLB  0
07208:  CALL   1536
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
0720C:  MOVLB  8
0720E:  CLRF   x6D
07210:  MOVLB  0
07212:  CALL   1424
....................    glcd_rect(0,61,127,63,YES,ON); 
07216:  MOVLB  8
07218:  CLRF   x7E
0721A:  MOVLW  3D
0721C:  MOVWF  x7F
0721E:  MOVLW  7F
07220:  MOVWF  x80
07222:  MOVLW  3F
07224:  MOVWF  x81
07226:  MOVLW  01
07228:  MOVWF  x82
0722A:  MOVWF  x83
0722C:  MOVLB  0
0722E:  CALL   17D8
....................    strcpy(Menus.Letra,"JP Inglobal"); 
07232:  MOVLW  08
07234:  MOVWF  FEA
07236:  MOVLW  46
07238:  MOVWF  FE9
0723A:  MOVFF  FF2,866
0723E:  BCF    FF2.7
07240:  MOVLW  00
07242:  CALL   084E
07246:  TBLRD*-
07248:  TBLRD*+
0724A:  MOVF   FF5,W
0724C:  MOVWF  FEE
0724E:  IORLW  00
07250:  BNZ   7248
07252:  MOVLB  8
07254:  BTFSC  x66.7
07256:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
07258:  MOVLW  08
0725A:  MOVWF  x6E
0725C:  MOVLW  46
0725E:  MOVWF  x6D
07260:  CLRF   x6F
07262:  CLRF   x70
07264:  CLRF   x71
07266:  MOVLW  02
07268:  MOVWF  x72
0726A:  MOVLB  0
0726C:  CALL   1A52
....................    strcpy(Menus.Letra,"    Mufla Digital"); 
07270:  MOVLW  08
07272:  MOVWF  FEA
07274:  MOVLW  46
07276:  MOVWF  FE9
07278:  MOVFF  FF2,866
0727C:  BCF    FF2.7
0727E:  MOVLW  00
07280:  CALL   0878
07284:  TBLRD*-
07286:  TBLRD*+
07288:  MOVF   FF5,W
0728A:  MOVWF  FEE
0728C:  IORLW  00
0728E:  BNZ   7286
07290:  MOVLB  8
07292:  BTFSC  x66.7
07294:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
07296:  MOVLW  08
07298:  MOVWF  x6E
0729A:  MOVLW  46
0729C:  MOVWF  x6D
0729E:  CLRF   x6F
072A0:  MOVLW  14
072A2:  MOVWF  x70
072A4:  CLRF   x71
072A6:  MOVLW  01
072A8:  MOVWF  x72
072AA:  MOVLB  0
072AC:  CALL   1A52
....................    strcpy(Menus.Letra,"     con Rampas"); 
072B0:  MOVLW  08
072B2:  MOVWF  FEA
072B4:  MOVLW  46
072B6:  MOVWF  FE9
072B8:  MOVFF  FF2,866
072BC:  BCF    FF2.7
072BE:  MOVLW  00
072C0:  CALL   08A8
072C4:  TBLRD*-
072C6:  TBLRD*+
072C8:  MOVF   FF5,W
072CA:  MOVWF  FEE
072CC:  IORLW  00
072CE:  BNZ   72C6
072D0:  MOVLB  8
072D2:  BTFSC  x66.7
072D4:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,29,0,1);        
072D6:  MOVLW  08
072D8:  MOVWF  x6E
072DA:  MOVLW  46
072DC:  MOVWF  x6D
072DE:  CLRF   x6F
072E0:  MOVLW  1D
072E2:  MOVWF  x70
072E4:  CLRF   x71
072E6:  MOVLW  01
072E8:  MOVWF  x72
072EA:  MOVLB  0
072EC:  CALL   1A52
....................    strcpy(Menus.Letra,"   16.4L"); 
072F0:  MOVLW  08
072F2:  MOVWF  FEA
072F4:  MOVLW  46
072F6:  MOVWF  FE9
072F8:  MOVFF  FF2,866
072FC:  BCF    FF2.7
072FE:  MOVLW  00
07300:  CALL   08D6
07304:  TBLRD*-
07306:  TBLRD*+
07308:  MOVF   FF5,W
0730A:  MOVWF  FEE
0730C:  IORLW  00
0730E:  BNZ   7306
07310:  MOVLB  8
07312:  BTFSC  x66.7
07314:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
07316:  MOVLW  08
07318:  MOVWF  x6E
0731A:  MOVLW  46
0731C:  MOVWF  x6D
0731E:  CLRF   x6F
07320:  MOVLW  2D
07322:  MOVWF  x70
07324:  CLRF   x71
07326:  MOVLW  02
07328:  MOVWF  x72
0732A:  MOVLB  0
0732C:  CALL   1A52
....................    delay_ms(1000); 
07330:  MOVLW  04
07332:  MOVLB  8
07334:  MOVWF  x66
07336:  MOVLW  FA
07338:  MOVWF  x6E
0733A:  MOVLB  0
0733C:  CALL   13A4
07340:  MOVLB  8
07342:  DECFSZ x66,F
07344:  BRA    7336
....................     
....................    Resistencia_off; 
07346:  BCF    F8B.0
07348:  BCF    F94.0
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
0734A:  CLRF   x6D
0734C:  MOVLB  0
0734E:  CALL   1424
....................    displayContrasena(Contrasena[0],20,30,1); 
07352:  MOVFF  5EE,86F
07356:  MOVLW  14
07358:  MOVLB  8
0735A:  MOVWF  x70
0735C:  MOVLW  1E
0735E:  MOVWF  x71
07360:  MOVLW  01
07362:  MOVWF  x72
07364:  MOVLB  0
07366:  CALL   1CA4
....................    displayContrasena(Contrasena[1],40,30,0); 
0736A:  MOVFF  5EF,86F
0736E:  MOVLW  28
07370:  MOVLB  8
07372:  MOVWF  x70
07374:  MOVLW  1E
07376:  MOVWF  x71
07378:  CLRF   x72
0737A:  MOVLB  0
0737C:  CALL   1CA4
....................    displayContrasena(Contrasena[2],60,30,0); 
07380:  MOVFF  5F0,86F
07384:  MOVLW  3C
07386:  MOVLB  8
07388:  MOVWF  x70
0738A:  MOVLW  1E
0738C:  MOVWF  x71
0738E:  CLRF   x72
07390:  MOVLB  0
07392:  CALL   1CA4
....................    displayContrasena(Contrasena[3],80,30,0);  
07396:  MOVFF  5F1,86F
0739A:  MOVLW  50
0739C:  MOVLB  8
0739E:  MOVWF  x70
073A0:  MOVLW  1E
073A2:  MOVWF  x71
073A4:  CLRF   x72
073A6:  MOVLB  0
073A8:  CALL   1CA4
....................    Menu=0; 
073AC:  MOVLB  5
073AE:  CLRF   x9B
....................    LeeEEPROM(); 
073B0:  MOVLB  0
073B2:  GOTO   21E0
....................     
....................    for(i=0;i<80;i++){ 
073B6:  MOVLB  5
073B8:  CLRF   x9D
073BA:  MOVF   x9D,W
073BC:  SUBLW  4F
073BE:  BNC   73E0
....................       Temperatura=Leer_Sensor(MediaMovil); 
073C0:  MOVFF  58C,866
073C4:  MOVLB  0
073C6:  CALL   33C8
073CA:  MOVFF  03,62D
073CE:  MOVFF  02,62C
073D2:  MOVFF  01,62B
073D6:  MOVFF  00,62A
....................    } 
073DA:  MOVLB  5
073DC:  INCF   x9D,F
073DE:  BRA    73BA
....................     
....................    //adcInf=(0.004*resistencia*1023)/5.0; 
....................    //adcSup=(0.02*resistencia*1023)/5.0; 
....................    //m=(Tsup-Tinf)/(adcSup-adcInf); 
....................    //b=Tsup-(m*adcSup); 
....................    //m=1.9233; 
....................    //b=-371.28; 
....................    //b=b*-1.0; 
....................    penInicial=penMufla; 
073E0:  MOVFF  65D,665
073E4:  MOVFF  65C,664
073E8:  MOVFF  65B,663
073EC:  MOVFF  65A,662
....................    while(TRUE)  
....................    {  
....................       glcd_update();             
073F0:  MOVLB  0
073F2:  CALL   147E
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
073F6:  MOVLB  5
073F8:  MOVF   x9B,F
073FA:  BTFSS  FD8.2
073FC:  BRA    79C6
....................        
....................       strcpy(Menus.Letra,"Clave"); 
073FE:  MOVLW  08
07400:  MOVWF  FEA
07402:  MOVLW  46
07404:  MOVWF  FE9
07406:  MOVFF  FF2,866
0740A:  BCF    FF2.7
0740C:  MOVLW  00
0740E:  MOVLB  0
07410:  CALL   07D8
07414:  TBLRD*-
07416:  TBLRD*+
07418:  MOVF   FF5,W
0741A:  MOVWF  FEE
0741C:  IORLW  00
0741E:  BNZ   7416
07420:  MOVLB  8
07422:  BTFSC  x66.7
07424:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
07426:  MOVLW  08
07428:  MOVWF  x6E
0742A:  MOVLW  46
0742C:  MOVWF  x6D
0742E:  MOVLW  1E
07430:  MOVWF  x6F
07432:  CLRF   x70
07434:  MOVLW  01
07436:  MOVWF  x71
07438:  MOVLW  02
0743A:  MOVWF  x72
0743C:  MOVLB  0
0743E:  CALL   1A52
....................        
....................       if(UP)//Si oprime hacia arriba 
07442:  BSF    F92.5
07444:  BTFSC  F80.5
07446:  BRA    752A
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
07448:  BSF    F8B.4
0744A:  BCF    F94.4
0744C:  MOVLW  0A
0744E:  MOVLB  8
07450:  MOVWF  x6E
07452:  MOVLB  0
07454:  CALL   13A4
07458:  BCF    F8B.4
0745A:  BCF    F94.4
....................          delay_ms(200); 
0745C:  MOVLW  C8
0745E:  MOVLB  8
07460:  MOVWF  x6E
07462:  MOVLB  0
07464:  CALL   13A4
....................          for(i=1;i<=4;i++) 
07468:  MOVLW  01
0746A:  MOVLB  5
0746C:  MOVWF  x9D
0746E:  MOVF   x9D,W
07470:  SUBLW  04
07472:  BNC   7528
....................          { 
....................             if(unidad==i) 
07474:  MOVF   x9D,W
07476:  SUBWF  x9C,W
07478:  BNZ   74F0
....................             { 
....................                Contrasena[i-1]++; 
0747A:  MOVLW  01
0747C:  SUBWF  x9D,W
0747E:  CLRF   03
07480:  ADDLW  EE
07482:  MOVWF  FE9
07484:  MOVLW  05
07486:  ADDWFC 03,W
07488:  MOVWF  FEA
0748A:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
0748C:  MOVLW  01
0748E:  SUBWF  x9D,W
07490:  CLRF   03
07492:  ADDLW  EE
07494:  MOVWF  FE9
07496:  MOVLW  05
07498:  ADDWFC 03,W
0749A:  MOVWF  FEA
0749C:  BTFSC  FEF.7
0749E:  BRA    74B8
074A0:  MOVF   FEF,W
074A2:  SUBLW  09
074A4:  BC    74B8
....................                { 
....................                   Contrasena[i-1]=0; 
074A6:  MOVLW  01
074A8:  SUBWF  x9D,W
074AA:  CLRF   03
074AC:  ADDLW  EE
074AE:  MOVWF  FE9
074B0:  MOVLW  05
074B2:  ADDWFC 03,W
074B4:  MOVWF  FEA
074B6:  CLRF   FEF
....................                } 
....................                displayContrasena(Contrasena[i-1],i*20,30,1); 
074B8:  MOVLW  01
074BA:  SUBWF  x9D,W
074BC:  CLRF   03
074BE:  ADDLW  EE
074C0:  MOVWF  FE9
074C2:  MOVLW  05
074C4:  ADDWFC 03,W
074C6:  MOVWF  FEA
074C8:  MOVFF  FEF,866
074CC:  MOVF   x9D,W
074CE:  MULLW  14
074D0:  MOVFF  FF3,867
074D4:  MOVLB  8
074D6:  MOVFF  866,86F
074DA:  MOVFF  867,870
074DE:  MOVLW  1E
074E0:  MOVWF  x71
074E2:  MOVLW  01
074E4:  MOVWF  x72
074E6:  MOVLB  0
074E8:  CALL   1CA4
....................             } 
....................             else 
074EC:  BRA    7522
074EE:  MOVLB  5
....................             { 
....................                displayContrasena(Contrasena[i-1],i*20,30,0); 
074F0:  MOVLW  01
074F2:  SUBWF  x9D,W
074F4:  CLRF   03
074F6:  ADDLW  EE
074F8:  MOVWF  FE9
074FA:  MOVLW  05
074FC:  ADDWFC 03,W
074FE:  MOVWF  FEA
07500:  MOVFF  FEF,866
07504:  MOVF   x9D,W
07506:  MULLW  14
07508:  MOVFF  FF3,867
0750C:  MOVLB  8
0750E:  MOVFF  866,86F
07512:  MOVFF  867,870
07516:  MOVLW  1E
07518:  MOVWF  x71
0751A:  CLRF   x72
0751C:  MOVLB  0
0751E:  CALL   1CA4
....................             } 
....................          } 
07522:  MOVLB  5
07524:  INCF   x9D,F
07526:  BRA    746E
07528:  MOVLB  0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
0752A:  BSF    F96.0
0752C:  BTFSC  F84.0
0752E:  BRA    7610
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
07530:  BSF    F8B.4
07532:  BCF    F94.4
07534:  MOVLW  0A
07536:  MOVLB  8
07538:  MOVWF  x6E
0753A:  MOVLB  0
0753C:  CALL   13A4
07540:  BCF    F8B.4
07542:  BCF    F94.4
....................          delay_ms(200); 
07544:  MOVLW  C8
07546:  MOVLB  8
07548:  MOVWF  x6E
0754A:  MOVLB  0
0754C:  CALL   13A4
....................          for(i=1;i<=4;i++) 
07550:  MOVLW  01
07552:  MOVLB  5
07554:  MOVWF  x9D
07556:  MOVF   x9D,W
07558:  SUBLW  04
0755A:  BNC   760E
....................          { 
....................             if(unidad==i) 
0755C:  MOVF   x9D,W
0755E:  SUBWF  x9C,W
07560:  BNZ   75D6
....................             { 
....................                Contrasena[i-1]--; 
07562:  MOVLW  01
07564:  SUBWF  x9D,W
07566:  CLRF   03
07568:  ADDLW  EE
0756A:  MOVWF  FE9
0756C:  MOVLW  05
0756E:  ADDWFC 03,W
07570:  MOVWF  FEA
07572:  DECF   FEF,F
....................                if(Contrasena[i-1]<0) 
07574:  MOVLW  01
07576:  SUBWF  x9D,W
07578:  CLRF   03
0757A:  ADDLW  EE
0757C:  MOVWF  FE9
0757E:  MOVLW  05
07580:  ADDWFC 03,W
07582:  MOVWF  FEA
07584:  BTFSC  FEF.7
07586:  BRA    758A
07588:  BRA    759E
....................                   {Contrasena[i-1]=9;} 
0758A:  MOVLW  01
0758C:  SUBWF  x9D,W
0758E:  CLRF   03
07590:  ADDLW  EE
07592:  MOVWF  FE9
07594:  MOVLW  05
07596:  ADDWFC 03,W
07598:  MOVWF  FEA
0759A:  MOVLW  09
0759C:  MOVWF  FEF
....................                displayContrasena(Contrasena[i-1],i*20,30,1);} 
0759E:  MOVLW  01
075A0:  SUBWF  x9D,W
075A2:  CLRF   03
075A4:  ADDLW  EE
075A6:  MOVWF  FE9
075A8:  MOVLW  05
075AA:  ADDWFC 03,W
075AC:  MOVWF  FEA
075AE:  MOVFF  FEF,866
075B2:  MOVF   x9D,W
075B4:  MULLW  14
075B6:  MOVFF  FF3,867
075BA:  MOVLB  8
075BC:  MOVFF  866,86F
075C0:  MOVFF  867,870
075C4:  MOVLW  1E
075C6:  MOVWF  x71
075C8:  MOVLW  01
075CA:  MOVWF  x72
075CC:  MOVLB  0
075CE:  CALL   1CA4
....................             else 
075D2:  BRA    7608
075D4:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
075D6:  MOVLW  01
075D8:  SUBWF  x9D,W
075DA:  CLRF   03
075DC:  ADDLW  EE
075DE:  MOVWF  FE9
075E0:  MOVLW  05
075E2:  ADDWFC 03,W
075E4:  MOVWF  FEA
075E6:  MOVFF  FEF,866
075EA:  MOVF   x9D,W
075EC:  MULLW  14
075EE:  MOVFF  FF3,867
075F2:  MOVLB  8
075F4:  MOVFF  866,86F
075F8:  MOVFF  867,870
075FC:  MOVLW  1E
075FE:  MOVWF  x71
07600:  CLRF   x72
07602:  MOVLB  0
07604:  CALL   1CA4
....................          }         
07608:  MOVLB  5
0760A:  INCF   x9D,F
0760C:  BRA    7556
0760E:  MOVLB  0
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
07610:  BSF    F96.1
07612:  BTFSC  F84.1
07614:  BRA    76BA
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
07616:  BSF    F8B.4
07618:  BCF    F94.4
0761A:  MOVLW  0A
0761C:  MOVLB  8
0761E:  MOVWF  x6E
07620:  MOVLB  0
07622:  CALL   13A4
07626:  BCF    F8B.4
07628:  BCF    F94.4
....................          delay_ms(200);unidad++; 
0762A:  MOVLW  C8
0762C:  MOVLB  8
0762E:  MOVWF  x6E
07630:  MOVLB  0
07632:  CALL   13A4
07636:  MOVLB  5
07638:  INCF   x9C,F
....................          for(i=1;i<=4;i++) 
0763A:  MOVLW  01
0763C:  MOVWF  x9D
0763E:  MOVF   x9D,W
07640:  SUBLW  04
07642:  BNC   76BA
....................          { 
....................             if(unidad==i) 
07644:  MOVF   x9D,W
07646:  SUBWF  x9C,W
07648:  BNZ   7682
....................             {displayContrasena(Contrasena[i-1],i*20,30,1);} 
0764A:  MOVLW  01
0764C:  SUBWF  x9D,W
0764E:  CLRF   03
07650:  ADDLW  EE
07652:  MOVWF  FE9
07654:  MOVLW  05
07656:  ADDWFC 03,W
07658:  MOVWF  FEA
0765A:  MOVFF  FEF,866
0765E:  MOVF   x9D,W
07660:  MULLW  14
07662:  MOVFF  FF3,867
07666:  MOVLB  8
07668:  MOVFF  866,86F
0766C:  MOVFF  867,870
07670:  MOVLW  1E
07672:  MOVWF  x71
07674:  MOVLW  01
07676:  MOVWF  x72
07678:  MOVLB  0
0767A:  CALL   1CA4
....................             else 
0767E:  BRA    76B4
07680:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
07682:  MOVLW  01
07684:  SUBWF  x9D,W
07686:  CLRF   03
07688:  ADDLW  EE
0768A:  MOVWF  FE9
0768C:  MOVLW  05
0768E:  ADDWFC 03,W
07690:  MOVWF  FEA
07692:  MOVFF  FEF,866
07696:  MOVF   x9D,W
07698:  MULLW  14
0769A:  MOVFF  FF3,867
0769E:  MOVLB  8
076A0:  MOVFF  866,86F
076A4:  MOVFF  867,870
076A8:  MOVLW  1E
076AA:  MOVWF  x71
076AC:  CLRF   x72
076AE:  MOVLB  0
076B0:  CALL   1CA4
....................          } 
076B4:  MOVLB  5
076B6:  INCF   x9D,F
076B8:  BRA    763E
....................       } 
....................      
....................       if(unidad>4) 
076BA:  MOVLB  5
076BC:  MOVF   x9C,W
076BE:  SUBLW  04
076C0:  BTFSC  FD8.0
076C2:  BRA    79C6
....................       {glcd_fillScreen(OFF);unidad=4; 
076C4:  MOVLB  8
076C6:  CLRF   x6D
076C8:  MOVLB  0
076CA:  CALL   1424
076CE:  MOVLW  04
076D0:  MOVLB  5
076D2:  MOVWF  x9C
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
076D4:  MOVF   xEE,W
076D6:  SUBLW  03
076D8:  BTFSS  FD8.2
076DA:  BRA    77D4
076DC:  MOVF   xEF,W
076DE:  SUBLW  08
076E0:  BTFSS  FD8.2
076E2:  BRA    77D4
076E4:  MOVF   xF0,W
076E6:  SUBLW  09
076E8:  BNZ   77D4
076EA:  MOVF   xF1,W
076EC:  SUBLW  02
076EE:  BNZ   77D4
....................             {write_eeprom(460,0);delay_ms(20);write_eeprom(461,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
076F0:  MOVLW  01
076F2:  MOVWF  FAA
076F4:  MOVLW  CC
076F6:  MOVWF  FA9
076F8:  CLRF   FA8
076FA:  BCF    FA6.6
076FC:  BCF    FA6.7
076FE:  BSF    FA6.2
07700:  MOVF   FF2,W
07702:  MOVWF  00
07704:  BCF    FF2.7
07706:  MOVLB  F
07708:  MOVLW  55
0770A:  MOVWF  FA7
0770C:  MOVLW  AA
0770E:  MOVWF  FA7
07710:  BSF    FA6.1
07712:  BTFSC  FA6.1
07714:  BRA    7712
07716:  BCF    FA6.2
07718:  MOVF   00,W
0771A:  IORWF  FF2,F
0771C:  MOVLW  14
0771E:  MOVLB  8
07720:  MOVWF  x6E
07722:  MOVLB  0
07724:  CALL   13A4
07728:  MOVLW  01
0772A:  MOVWF  FAA
0772C:  MOVLW  CD
0772E:  MOVWF  FA9
07730:  CLRF   FA8
07732:  BCF    FA6.6
07734:  BCF    FA6.7
07736:  BSF    FA6.2
07738:  MOVF   FF2,W
0773A:  MOVWF  00
0773C:  BCF    FF2.7
0773E:  MOVLB  F
07740:  MOVLW  55
07742:  MOVWF  FA7
07744:  MOVLW  AA
07746:  MOVWF  FA7
07748:  BSF    FA6.1
0774A:  BTFSC  FA6.1
0774C:  BRA    774A
0774E:  BCF    FA6.2
07750:  MOVF   00,W
07752:  IORWF  FF2,F
07754:  MOVLW  14
07756:  MOVLB  8
07758:  MOVWF  x6E
0775A:  MOVLB  0
0775C:  CALL   13A4
....................              write_eeprom(462,0);delay_ms(20);write_eeprom(463,0);delay_ms(20); 
07760:  MOVLW  01
07762:  MOVWF  FAA
07764:  MOVLW  CE
07766:  MOVWF  FA9
07768:  CLRF   FA8
0776A:  BCF    FA6.6
0776C:  BCF    FA6.7
0776E:  BSF    FA6.2
07770:  MOVF   FF2,W
07772:  MOVWF  00
07774:  BCF    FF2.7
07776:  MOVLB  F
07778:  MOVLW  55
0777A:  MOVWF  FA7
0777C:  MOVLW  AA
0777E:  MOVWF  FA7
07780:  BSF    FA6.1
07782:  BTFSC  FA6.1
07784:  BRA    7782
07786:  BCF    FA6.2
07788:  MOVF   00,W
0778A:  IORWF  FF2,F
0778C:  MOVLW  14
0778E:  MOVLB  8
07790:  MOVWF  x6E
07792:  MOVLB  0
07794:  CALL   13A4
07798:  MOVLW  01
0779A:  MOVWF  FAA
0779C:  MOVLW  CF
0779E:  MOVWF  FA9
077A0:  CLRF   FA8
077A2:  BCF    FA6.6
077A4:  BCF    FA6.7
077A6:  BSF    FA6.2
077A8:  MOVF   FF2,W
077AA:  MOVWF  00
077AC:  BCF    FF2.7
077AE:  MOVLB  F
077B0:  MOVLW  55
077B2:  MOVWF  FA7
077B4:  MOVLW  AA
077B6:  MOVWF  FA7
077B8:  BSF    FA6.1
077BA:  BTFSC  FA6.1
077BC:  BRA    77BA
077BE:  BCF    FA6.2
077C0:  MOVF   00,W
077C2:  IORWF  FF2,F
077C4:  MOVLW  14
077C6:  MOVLB  8
077C8:  MOVWF  x6E
077CA:  MOVLB  0
077CC:  CALL   13A4
....................              reset_cpu();}         
077D0:  RESET
077D2:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
077D4:  MOVF   xF2,W
077D6:  SUBWF  xEE,W
077D8:  BNZ   78AA
077DA:  MOVF   xF3,W
077DC:  SUBWF  xEF,W
077DE:  BNZ   78AA
077E0:  MOVF   xF4,W
077E2:  SUBWF  xF0,W
077E4:  BNZ   78AA
077E6:  MOVF   xF5,W
077E8:  SUBWF  xF1,W
077EA:  BNZ   78AA
....................          { 
....................             glcd_fillScreen(OFF); 
077EC:  MOVLB  8
077EE:  CLRF   x6D
077F0:  MOVLB  0
077F2:  CALL   1424
....................             strcpy(Menus.Letra,"Clave"); 
077F6:  MOVLW  08
077F8:  MOVWF  FEA
077FA:  MOVLW  46
077FC:  MOVWF  FE9
077FE:  MOVFF  FF2,866
07802:  BCF    FF2.7
07804:  MOVLW  00
07806:  CALL   07D8
0780A:  TBLRD*-
0780C:  TBLRD*+
0780E:  MOVF   FF5,W
07810:  MOVWF  FEE
07812:  IORLW  00
07814:  BNZ   780C
07816:  MOVLB  8
07818:  BTFSC  x66.7
0781A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
0781C:  MOVLW  08
0781E:  MOVWF  x6E
07820:  MOVLW  46
07822:  MOVWF  x6D
07824:  MOVLW  1E
07826:  MOVWF  x6F
07828:  CLRF   x70
0782A:  CLRF   x71
0782C:  MOVLW  02
0782E:  MOVWF  x72
07830:  MOVLB  0
07832:  CALL   1A52
....................             strcpy(Menus.Letra,"Correcta"); 
07836:  MOVLW  08
07838:  MOVWF  FEA
0783A:  MOVLW  46
0783C:  MOVWF  FE9
0783E:  MOVFF  FF2,866
07842:  BCF    FF2.7
07844:  MOVLW  00
07846:  CALL   07FC
0784A:  TBLRD*-
0784C:  TBLRD*+
0784E:  MOVF   FF5,W
07850:  MOVWF  FEE
07852:  IORLW  00
07854:  BNZ   784C
07856:  MOVLB  8
07858:  BTFSC  x66.7
0785A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
0785C:  MOVLW  08
0785E:  MOVWF  x6E
07860:  MOVLW  46
07862:  MOVWF  x6D
07864:  MOVLW  0F
07866:  MOVWF  x6F
07868:  MOVLW  1E
0786A:  MOVWF  x70
0786C:  CLRF   x71
0786E:  MOVLW  02
07870:  MOVWF  x72
07872:  MOVLB  0
07874:  CALL   1A52
....................             Menu=1;glcd_update();delay_ms(1000); 
07878:  MOVLW  01
0787A:  MOVLB  5
0787C:  MOVWF  x9B
0787E:  MOVLB  0
07880:  CALL   147E
07884:  MOVLW  04
07886:  MOVLB  8
07888:  MOVWF  x66
0788A:  MOVLW  FA
0788C:  MOVWF  x6E
0788E:  MOVLB  0
07890:  CALL   13A4
07894:  MOVLB  8
07896:  DECFSZ x66,F
07898:  BRA    788A
....................             glcd_fillScreen(OFF);unidad=1; 
0789A:  CLRF   x6D
0789C:  MOVLB  0
0789E:  CALL   1424
078A2:  MOVLW  01
078A4:  MOVLB  5
078A6:  MOVWF  x9C
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
078A8:  BRA    79C6
....................          { 
....................             glcd_fillScreen(OFF); 
078AA:  MOVLB  8
078AC:  CLRF   x6D
078AE:  MOVLB  0
078B0:  CALL   1424
....................             strcpy(Menus.Letra,"Clave"); 
078B4:  MOVLW  08
078B6:  MOVWF  FEA
078B8:  MOVLW  46
078BA:  MOVWF  FE9
078BC:  MOVFF  FF2,866
078C0:  BCF    FF2.7
078C2:  MOVLW  00
078C4:  CALL   07D8
078C8:  TBLRD*-
078CA:  TBLRD*+
078CC:  MOVF   FF5,W
078CE:  MOVWF  FEE
078D0:  IORLW  00
078D2:  BNZ   78CA
078D4:  MOVLB  8
078D6:  BTFSC  x66.7
078D8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
078DA:  MOVLW  08
078DC:  MOVWF  x6E
078DE:  MOVLW  46
078E0:  MOVWF  x6D
078E2:  MOVLW  1E
078E4:  MOVWF  x6F
078E6:  CLRF   x70
078E8:  CLRF   x71
078EA:  MOVLW  02
078EC:  MOVWF  x72
078EE:  MOVLB  0
078F0:  CALL   1A52
....................             strcpy(Menus.Letra,"Incorrecta"); 
078F4:  MOVLW  08
078F6:  MOVWF  FEA
078F8:  MOVLW  46
078FA:  MOVWF  FE9
078FC:  MOVFF  FF2,866
07900:  BCF    FF2.7
07902:  MOVLW  00
07904:  CALL   0824
07908:  TBLRD*-
0790A:  TBLRD*+
0790C:  MOVF   FF5,W
0790E:  MOVWF  FEE
07910:  IORLW  00
07912:  BNZ   790A
07914:  MOVLB  8
07916:  BTFSC  x66.7
07918:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
0791A:  MOVLW  08
0791C:  MOVWF  x6E
0791E:  MOVLW  46
07920:  MOVWF  x6D
07922:  CLRF   x6F
07924:  MOVLW  1E
07926:  MOVWF  x70
07928:  CLRF   x71
0792A:  MOVLW  02
0792C:  MOVWF  x72
0792E:  MOVLB  0
07930:  CALL   1A52
....................             Menu=0;glcd_update();delay_ms(1000); 
07934:  MOVLB  5
07936:  CLRF   x9B
07938:  MOVLB  0
0793A:  CALL   147E
0793E:  MOVLW  04
07940:  MOVLB  8
07942:  MOVWF  x66
07944:  MOVLW  FA
07946:  MOVWF  x6E
07948:  MOVLB  0
0794A:  CALL   13A4
0794E:  MOVLB  8
07950:  DECFSZ x66,F
07952:  BRA    7944
....................             glcd_fillScreen(OFF);unidad=1; 
07954:  CLRF   x6D
07956:  MOVLB  0
07958:  CALL   1424
0795C:  MOVLW  01
0795E:  MOVLB  5
07960:  MOVWF  x9C
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
07962:  CLRF   xEE
07964:  CLRF   xEF
07966:  CLRF   xF0
07968:  CLRF   xF1
....................             displayContrasena(Contrasena[0],20,30,1); 
0796A:  MOVFF  5EE,86F
0796E:  MOVLW  14
07970:  MOVLB  8
07972:  MOVWF  x70
07974:  MOVLW  1E
07976:  MOVWF  x71
07978:  MOVLW  01
0797A:  MOVWF  x72
0797C:  MOVLB  0
0797E:  CALL   1CA4
....................             displayContrasena(Contrasena[1],40,30,0); 
07982:  MOVFF  5EF,86F
07986:  MOVLW  28
07988:  MOVLB  8
0798A:  MOVWF  x70
0798C:  MOVLW  1E
0798E:  MOVWF  x71
07990:  CLRF   x72
07992:  MOVLB  0
07994:  CALL   1CA4
....................             displayContrasena(Contrasena[2],60,30,0); 
07998:  MOVFF  5F0,86F
0799C:  MOVLW  3C
0799E:  MOVLB  8
079A0:  MOVWF  x70
079A2:  MOVLW  1E
079A4:  MOVWF  x71
079A6:  CLRF   x72
079A8:  MOVLB  0
079AA:  CALL   1CA4
....................             displayContrasena(Contrasena[3],80,30,0); 
079AE:  MOVFF  5F1,86F
079B2:  MOVLW  50
079B4:  MOVLB  8
079B6:  MOVWF  x70
079B8:  MOVLW  1E
079BA:  MOVWF  x71
079BC:  CLRF   x72
079BE:  MOVLB  0
079C0:  CALL   1CA4
079C4:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
079C6:  DECFSZ x9B,W
079C8:  BRA    7DD0
....................        
....................          if(Opcion>5) 
079CA:  MOVF   xA2,W
079CC:  SUBLW  05
079CE:  BC    79D4
....................          {Opcion=1;} 
079D0:  MOVLW  01
079D2:  MOVWF  xA2
....................          if(Opcion<1) 
079D4:  MOVF   xA2,F
079D6:  BNZ   79DC
....................          {Opcion=5;} 
079D8:  MOVLW  05
079DA:  MOVWF  xA2
....................           
....................          strcpy(Menus.Letra,"Menu"); 
079DC:  MOVLW  08
079DE:  MOVWF  FEA
079E0:  MOVLW  46
079E2:  MOVWF  FE9
079E4:  MOVFF  FF2,866
079E8:  BCF    FF2.7
079EA:  MOVLW  00
079EC:  MOVLB  0
079EE:  CALL   08FE
079F2:  TBLRD*-
079F4:  TBLRD*+
079F6:  MOVF   FF5,W
079F8:  MOVWF  FEE
079FA:  IORLW  00
079FC:  BNZ   79F4
079FE:  MOVLB  8
07A00:  BTFSC  x66.7
07A02:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
07A04:  MOVLW  08
07A06:  MOVWF  x6E
07A08:  MOVLW  46
07A0A:  MOVWF  x6D
07A0C:  MOVLW  1E
07A0E:  MOVWF  x6F
07A10:  CLRF   x70
07A12:  MOVLW  01
07A14:  MOVWF  x71
07A16:  MOVLW  02
07A18:  MOVWF  x72
07A1A:  MOVLB  0
07A1C:  CALL   1A52
....................        
....................          if(Opcion==1)    
07A20:  MOVLB  5
07A22:  DECFSZ xA2,W
07A24:  BRA    7A6C
....................             {strcpy(Menus.Letra,"Iniciar Programa"); 
07A26:  MOVLW  08
07A28:  MOVWF  FEA
07A2A:  MOVLW  46
07A2C:  MOVWF  FE9
07A2E:  MOVFF  FF2,866
07A32:  BCF    FF2.7
07A34:  MOVLW  00
07A36:  MOVLB  0
07A38:  CALL   0922
07A3C:  TBLRD*-
07A3E:  TBLRD*+
07A40:  MOVF   FF5,W
07A42:  MOVWF  FEE
07A44:  IORLW  00
07A46:  BNZ   7A3E
07A48:  MOVLB  8
07A4A:  BTFSC  x66.7
07A4C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
07A4E:  MOVLW  08
07A50:  MOVWF  x6E
07A52:  MOVLW  46
07A54:  MOVWF  x6D
07A56:  CLRF   x6F
07A58:  MOVLW  12
07A5A:  MOVWF  x70
07A5C:  MOVLW  01
07A5E:  MOVWF  x71
07A60:  MOVWF  x72
07A62:  MOVLB  0
07A64:  CALL   1A52
....................          else 
07A68:  BRA    7AAE
07A6A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Programa"); 
07A6C:  MOVLW  08
07A6E:  MOVWF  FEA
07A70:  MOVLW  46
07A72:  MOVWF  FE9
07A74:  MOVFF  FF2,866
07A78:  BCF    FF2.7
07A7A:  MOVLW  00
07A7C:  MOVLB  0
07A7E:  CALL   0922
07A82:  TBLRD*-
07A84:  TBLRD*+
07A86:  MOVF   FF5,W
07A88:  MOVWF  FEE
07A8A:  IORLW  00
07A8C:  BNZ   7A84
07A8E:  MOVLB  8
07A90:  BTFSC  x66.7
07A92:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);} 
07A94:  MOVLW  08
07A96:  MOVWF  x6E
07A98:  MOVLW  46
07A9A:  MOVWF  x6D
07A9C:  CLRF   x6F
07A9E:  MOVLW  12
07AA0:  MOVWF  x70
07AA2:  CLRF   x71
07AA4:  MOVLW  01
07AA6:  MOVWF  x72
07AA8:  MOVLB  0
07AAA:  CALL   1A52
....................           
....................          if(Opcion==2)    
07AAE:  MOVLB  5
07AB0:  MOVF   xA2,W
07AB2:  SUBLW  02
07AB4:  BNZ   7AFC
....................             {strcpy(Menus.Letra,"Editar Programa"); 
07AB6:  MOVLW  08
07AB8:  MOVWF  FEA
07ABA:  MOVLW  46
07ABC:  MOVWF  FE9
07ABE:  MOVFF  FF2,866
07AC2:  BCF    FF2.7
07AC4:  MOVLW  00
07AC6:  MOVLB  0
07AC8:  CALL   0952
07ACC:  TBLRD*-
07ACE:  TBLRD*+
07AD0:  MOVF   FF5,W
07AD2:  MOVWF  FEE
07AD4:  IORLW  00
07AD6:  BNZ   7ACE
07AD8:  MOVLB  8
07ADA:  BTFSC  x66.7
07ADC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
07ADE:  MOVLW  08
07AE0:  MOVWF  x6E
07AE2:  MOVLW  46
07AE4:  MOVWF  x6D
07AE6:  CLRF   x6F
07AE8:  MOVLW  1B
07AEA:  MOVWF  x70
07AEC:  MOVLW  01
07AEE:  MOVWF  x71
07AF0:  MOVWF  x72
07AF2:  MOVLB  0
07AF4:  CALL   1A52
....................          else 
07AF8:  BRA    7B3E
07AFA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Editar Programa"); 
07AFC:  MOVLW  08
07AFE:  MOVWF  FEA
07B00:  MOVLW  46
07B02:  MOVWF  FE9
07B04:  MOVFF  FF2,866
07B08:  BCF    FF2.7
07B0A:  MOVLW  00
07B0C:  MOVLB  0
07B0E:  CALL   0952
07B12:  TBLRD*-
07B14:  TBLRD*+
07B16:  MOVF   FF5,W
07B18:  MOVWF  FEE
07B1A:  IORLW  00
07B1C:  BNZ   7B14
07B1E:  MOVLB  8
07B20:  BTFSC  x66.7
07B22:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);} 
07B24:  MOVLW  08
07B26:  MOVWF  x6E
07B28:  MOVLW  46
07B2A:  MOVWF  x6D
07B2C:  CLRF   x6F
07B2E:  MOVLW  1B
07B30:  MOVWF  x70
07B32:  CLRF   x71
07B34:  MOVLW  01
07B36:  MOVWF  x72
07B38:  MOVLB  0
07B3A:  CALL   1A52
....................              
....................          if(Opcion==3)    
07B3E:  MOVLB  5
07B40:  MOVF   xA2,W
07B42:  SUBLW  03
07B44:  BNZ   7B8C
....................             {strcpy(Menus.Letra,"Borrar Programa"); 
07B46:  MOVLW  08
07B48:  MOVWF  FEA
07B4A:  MOVLW  46
07B4C:  MOVWF  FE9
07B4E:  MOVFF  FF2,866
07B52:  BCF    FF2.7
07B54:  MOVLW  00
07B56:  MOVLB  0
07B58:  CALL   0980
07B5C:  TBLRD*-
07B5E:  TBLRD*+
07B60:  MOVF   FF5,W
07B62:  MOVWF  FEE
07B64:  IORLW  00
07B66:  BNZ   7B5E
07B68:  MOVLB  8
07B6A:  BTFSC  x66.7
07B6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
07B6E:  MOVLW  08
07B70:  MOVWF  x6E
07B72:  MOVLW  46
07B74:  MOVWF  x6D
07B76:  CLRF   x6F
07B78:  MOVLW  24
07B7A:  MOVWF  x70
07B7C:  MOVLW  01
07B7E:  MOVWF  x71
07B80:  MOVWF  x72
07B82:  MOVLB  0
07B84:  CALL   1A52
....................          else 
07B88:  BRA    7BCE
07B8A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Borrar Programa"); 
07B8C:  MOVLW  08
07B8E:  MOVWF  FEA
07B90:  MOVLW  46
07B92:  MOVWF  FE9
07B94:  MOVFF  FF2,866
07B98:  BCF    FF2.7
07B9A:  MOVLW  00
07B9C:  MOVLB  0
07B9E:  CALL   0980
07BA2:  TBLRD*-
07BA4:  TBLRD*+
07BA6:  MOVF   FF5,W
07BA8:  MOVWF  FEE
07BAA:  IORLW  00
07BAC:  BNZ   7BA4
07BAE:  MOVLB  8
07BB0:  BTFSC  x66.7
07BB2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}    
07BB4:  MOVLW  08
07BB6:  MOVWF  x6E
07BB8:  MOVLW  46
07BBA:  MOVWF  x6D
07BBC:  CLRF   x6F
07BBE:  MOVLW  24
07BC0:  MOVWF  x70
07BC2:  CLRF   x71
07BC4:  MOVLW  01
07BC6:  MOVWF  x72
07BC8:  MOVLB  0
07BCA:  CALL   1A52
....................                          
....................          if(Opcion==4)    
07BCE:  MOVLB  5
07BD0:  MOVF   xA2,W
07BD2:  SUBLW  04
07BD4:  BNZ   7C1C
....................             {strcpy(Menus.Letra,"Ajustes"); 
07BD6:  MOVLW  08
07BD8:  MOVWF  FEA
07BDA:  MOVLW  46
07BDC:  MOVWF  FE9
07BDE:  MOVFF  FF2,866
07BE2:  BCF    FF2.7
07BE4:  MOVLW  00
07BE6:  MOVLB  0
07BE8:  CALL   09AE
07BEC:  TBLRD*-
07BEE:  TBLRD*+
07BF0:  MOVF   FF5,W
07BF2:  MOVWF  FEE
07BF4:  IORLW  00
07BF6:  BNZ   7BEE
07BF8:  MOVLB  8
07BFA:  BTFSC  x66.7
07BFC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
07BFE:  MOVLW  08
07C00:  MOVWF  x6E
07C02:  MOVLW  46
07C04:  MOVWF  x6D
07C06:  CLRF   x6F
07C08:  MOVLW  2D
07C0A:  MOVWF  x70
07C0C:  MOVLW  01
07C0E:  MOVWF  x71
07C10:  MOVWF  x72
07C12:  MOVLB  0
07C14:  CALL   1A52
....................          else 
07C18:  BRA    7C5E
07C1A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajustes"); 
07C1C:  MOVLW  08
07C1E:  MOVWF  FEA
07C20:  MOVLW  46
07C22:  MOVWF  FE9
07C24:  MOVFF  FF2,866
07C28:  BCF    FF2.7
07C2A:  MOVLW  00
07C2C:  MOVLB  0
07C2E:  CALL   09AE
07C32:  TBLRD*-
07C34:  TBLRD*+
07C36:  MOVF   FF5,W
07C38:  MOVWF  FEE
07C3A:  IORLW  00
07C3C:  BNZ   7C34
07C3E:  MOVLB  8
07C40:  BTFSC  x66.7
07C42:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1);}      
07C44:  MOVLW  08
07C46:  MOVWF  x6E
07C48:  MOVLW  46
07C4A:  MOVWF  x6D
07C4C:  CLRF   x6F
07C4E:  MOVLW  2D
07C50:  MOVWF  x70
07C52:  CLRF   x71
07C54:  MOVLW  01
07C56:  MOVWF  x72
07C58:  MOVLB  0
07C5A:  CALL   1A52
....................           
....................          if(Opcion==5)    
07C5E:  MOVLB  5
07C60:  MOVF   xA2,W
07C62:  SUBLW  05
07C64:  BNZ   7CAC
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
07C66:  MOVLW  08
07C68:  MOVWF  FEA
07C6A:  MOVLW  46
07C6C:  MOVWF  FE9
07C6E:  MOVFF  FF2,866
07C72:  BCF    FF2.7
07C74:  MOVLW  00
07C76:  MOVLB  0
07C78:  CALL   09D4
07C7C:  TBLRD*-
07C7E:  TBLRD*+
07C80:  MOVF   FF5,W
07C82:  MOVWF  FEE
07C84:  IORLW  00
07C86:  BNZ   7C7E
07C88:  MOVLB  8
07C8A:  BTFSC  x66.7
07C8C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,54,1,1);} 
07C8E:  MOVLW  08
07C90:  MOVWF  x6E
07C92:  MOVLW  46
07C94:  MOVWF  x6D
07C96:  CLRF   x6F
07C98:  MOVLW  36
07C9A:  MOVWF  x70
07C9C:  MOVLW  01
07C9E:  MOVWF  x71
07CA0:  MOVWF  x72
07CA2:  MOVLB  0
07CA4:  CALL   1A52
....................          else 
07CA8:  BRA    7CEE
07CAA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
07CAC:  MOVLW  08
07CAE:  MOVWF  FEA
07CB0:  MOVLW  46
07CB2:  MOVWF  FE9
07CB4:  MOVFF  FF2,866
07CB8:  BCF    FF2.7
07CBA:  MOVLW  00
07CBC:  MOVLB  0
07CBE:  CALL   09D4
07CC2:  TBLRD*-
07CC4:  TBLRD*+
07CC6:  MOVF   FF5,W
07CC8:  MOVWF  FEE
07CCA:  IORLW  00
07CCC:  BNZ   7CC4
07CCE:  MOVLB  8
07CD0:  BTFSC  x66.7
07CD2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,54,0,1);}      
07CD4:  MOVLW  08
07CD6:  MOVWF  x6E
07CD8:  MOVLW  46
07CDA:  MOVWF  x6D
07CDC:  CLRF   x6F
07CDE:  MOVLW  36
07CE0:  MOVWF  x70
07CE2:  CLRF   x71
07CE4:  MOVLW  01
07CE6:  MOVWF  x72
07CE8:  MOVLB  0
07CEA:  CALL   1A52
....................           
....................          if(UP)//Si oprime hacia arriba 
07CEE:  BSF    F92.5
07CF0:  BTFSC  F80.5
07CF2:  BRA    7D0E
....................          { 
....................             Buzz_on;delay_ms(30);Opcion--;Buzz_off; 
07CF4:  BSF    F8B.4
07CF6:  BCF    F94.4
07CF8:  MOVLW  1E
07CFA:  MOVLB  8
07CFC:  MOVWF  x6E
07CFE:  MOVLB  0
07D00:  CALL   13A4
07D04:  MOVLB  5
07D06:  DECF   xA2,F
07D08:  BCF    F8B.4
07D0A:  BCF    F94.4
07D0C:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
07D0E:  BSF    F96.0
07D10:  BTFSC  F84.0
07D12:  BRA    7D2E
....................          { 
....................             Buzz_on;delay_ms(30);Opcion++; Buzz_off; 
07D14:  BSF    F8B.4
07D16:  BCF    F94.4
07D18:  MOVLW  1E
07D1A:  MOVLB  8
07D1C:  MOVWF  x6E
07D1E:  MOVLB  0
07D20:  CALL   13A4
07D24:  MOVLB  5
07D26:  INCF   xA2,F
07D28:  BCF    F8B.4
07D2A:  BCF    F94.4
07D2C:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
07D2E:  BSF    F96.1
07D30:  BTFSC  F84.1
07D32:  BRA    7DD2
....................          {  
....................             Buzz_on;delay_ms(50);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);Buzz_off; 
07D34:  BSF    F8B.4
07D36:  BCF    F94.4
07D38:  MOVLW  32
07D3A:  MOVLB  8
07D3C:  MOVWF  x6E
07D3E:  MOVLB  0
07D40:  CALL   13A4
07D44:  MOVLW  03
07D46:  MOVLB  5
07D48:  ADDWF  xA2,W
07D4A:  MOVWF  x9B
07D4C:  MOVLW  01
07D4E:  MOVWF  xA2
07D50:  MOVLB  8
07D52:  CLRF   x6D
07D54:  MOVLB  0
07D56:  CALL   1424
07D5A:  BCF    F8B.4
07D5C:  BCF    F94.4
....................             if(Menu==7){ 
07D5E:  MOVLB  5
07D60:  MOVF   x9B,W
07D62:  SUBLW  07
07D64:  BNZ   7DD0
....................                //Menu=100; 
....................             delay_ms(100); 
07D66:  MOVLW  64
07D68:  MOVLB  8
07D6A:  MOVWF  x6E
07D6C:  MOVLB  0
07D6E:  CALL   13A4
....................             glcd_fillScreen(OFF); 
07D72:  MOVLB  8
07D74:  CLRF   x6D
07D76:  MOVLB  0
07D78:  CALL   1424
....................             while(!PidePassword(1,1,100,4,4,4,4)){ 
07D7C:  MOVLW  01
07D7E:  MOVLB  8
07D80:  MOVWF  x66
07D82:  MOVWF  x67
07D84:  MOVLW  64
07D86:  MOVWF  x68
07D88:  MOVLW  04
07D8A:  MOVWF  x69
07D8C:  MOVWF  x6A
07D8E:  MOVWF  x6B
07D90:  MOVWF  x6C
07D92:  MOVLB  0
07D94:  CALL   35FA
07D98:  MOVF   01,F
07D9A:  BNZ   7DBE
....................                PidePassword(1,1,100,4,4,4,4);glcd_update(); 
07D9C:  MOVLW  01
07D9E:  MOVLB  8
07DA0:  MOVWF  x66
07DA2:  MOVWF  x67
07DA4:  MOVLW  64
07DA6:  MOVWF  x68
07DA8:  MOVLW  04
07DAA:  MOVWF  x69
07DAC:  MOVWF  x6A
07DAE:  MOVWF  x6B
07DB0:  MOVWF  x6C
07DB2:  MOVLB  0
07DB4:  CALL   35FA
07DB8:  CALL   147E
....................             }             
07DBC:  BRA    7D7C
....................             glcd_fillScreen(OFF);Opcion=1;unidad=1; 
07DBE:  MOVLB  8
07DC0:  CLRF   x6D
07DC2:  MOVLB  0
07DC4:  CALL   1424
07DC8:  MOVLW  01
07DCA:  MOVLB  5
07DCC:  MOVWF  xA2
07DCE:  MOVWF  x9C
07DD0:  MOVLB  0
....................           
....................        
....................             } 
....................          } 
....................        
....................  
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
07DD2:  MOVLB  5
07DD4:  MOVF   x9B,W
07DD6:  SUBLW  04
07DD8:  BTFSS  FD8.2
07DDA:  BRA    8530
....................        
....................       if(Opcion>5) 
07DDC:  MOVF   xA2,W
07DDE:  SUBLW  05
07DE0:  BC    7DE6
....................          Opcion=1; 
07DE2:  MOVLW  01
07DE4:  MOVWF  xA2
....................           
....................       if(Opcion<1) 
07DE6:  MOVF   xA2,F
07DE8:  BNZ   7DEE
....................          Opcion=5; 
07DEA:  MOVLW  05
07DEC:  MOVWF  xA2
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
07DEE:  MOVLW  08
07DF0:  MOVWF  FEA
07DF2:  MOVLW  46
07DF4:  MOVWF  FE9
07DF6:  MOVFF  FF2,866
07DFA:  BCF    FF2.7
07DFC:  MOVLW  00
07DFE:  MOVLB  0
07E00:  CALL   0A00
07E04:  TBLRD*-
07E06:  TBLRD*+
07E08:  MOVF   FF5,W
07E0A:  MOVWF  FEE
07E0C:  IORLW  00
07E0E:  BNZ   7E06
07E10:  MOVLB  8
07E12:  BTFSC  x66.7
07E14:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
07E16:  MOVLW  08
07E18:  MOVWF  x6E
07E1A:  MOVLW  46
07E1C:  MOVWF  x6D
07E1E:  CLRF   x6F
07E20:  CLRF   x70
07E22:  MOVLW  01
07E24:  MOVWF  x71
07E26:  MOVLW  02
07E28:  MOVWF  x72
07E2A:  MOVLB  0
07E2C:  CALL   1A52
....................           
....................          strcpy(Menus.Letra," Programa"); 
07E30:  MOVLW  08
07E32:  MOVWF  FEA
07E34:  MOVLW  46
07E36:  MOVWF  FE9
07E38:  MOVFF  FF2,866
07E3C:  BCF    FF2.7
07E3E:  MOVLW  00
07E40:  CALL   0A2A
07E44:  TBLRD*-
07E46:  TBLRD*+
07E48:  MOVF   FF5,W
07E4A:  MOVWF  FEE
07E4C:  IORLW  00
07E4E:  BNZ   7E46
07E50:  MOVLB  8
07E52:  BTFSC  x66.7
07E54:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
07E56:  MOVLW  08
07E58:  MOVWF  x6E
07E5A:  MOVLW  46
07E5C:  MOVWF  x6D
07E5E:  CLRF   x6F
07E60:  MOVLW  10
07E62:  MOVWF  x70
07E64:  MOVLW  01
07E66:  MOVWF  x71
07E68:  MOVLW  02
07E6A:  MOVWF  x72
07E6C:  MOVLB  0
07E6E:  CALL   1A52
....................            
....................           
....................          if(Opcion==1) 
07E72:  MOVLB  5
07E74:  DECFSZ xA2,W
07E76:  BRA    7EBC
....................          { 
....................             strcpy(Menus.Letra,"Programa 01"); 
07E78:  MOVLW  08
07E7A:  MOVWF  FEA
07E7C:  MOVLW  46
07E7E:  MOVWF  FE9
07E80:  MOVFF  FF2,866
07E84:  BCF    FF2.7
07E86:  MOVLW  00
07E88:  MOVLB  0
07E8A:  CALL   0A52
07E8E:  TBLRD*-
07E90:  TBLRD*+
07E92:  MOVF   FF5,W
07E94:  MOVWF  FEE
07E96:  IORLW  00
07E98:  BNZ   7E90
07E9A:  MOVLB  8
07E9C:  BTFSC  x66.7
07E9E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
07EA0:  MOVLW  08
07EA2:  MOVWF  x6E
07EA4:  MOVLW  46
07EA6:  MOVWF  x6D
07EA8:  CLRF   x6F
07EAA:  MOVLW  26
07EAC:  MOVWF  x70
07EAE:  CLRF   x71
07EB0:  MOVLW  02
07EB2:  MOVWF  x72
07EB4:  MOVLB  0
07EB6:  CALL   1A52
07EBA:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==2) 
07EBC:  MOVF   xA2,W
07EBE:  SUBLW  02
07EC0:  BNZ   7F06
....................          { 
....................             strcpy(Menus.Letra,"Programa 02"); 
07EC2:  MOVLW  08
07EC4:  MOVWF  FEA
07EC6:  MOVLW  46
07EC8:  MOVWF  FE9
07ECA:  MOVFF  FF2,866
07ECE:  BCF    FF2.7
07ED0:  MOVLW  00
07ED2:  MOVLB  0
07ED4:  CALL   0A7C
07ED8:  TBLRD*-
07EDA:  TBLRD*+
07EDC:  MOVF   FF5,W
07EDE:  MOVWF  FEE
07EE0:  IORLW  00
07EE2:  BNZ   7EDA
07EE4:  MOVLB  8
07EE6:  BTFSC  x66.7
07EE8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
07EEA:  MOVLW  08
07EEC:  MOVWF  x6E
07EEE:  MOVLW  46
07EF0:  MOVWF  x6D
07EF2:  CLRF   x6F
07EF4:  MOVLW  26
07EF6:  MOVWF  x70
07EF8:  CLRF   x71
07EFA:  MOVLW  02
07EFC:  MOVWF  x72
07EFE:  MOVLB  0
07F00:  CALL   1A52
07F04:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==3) 
07F06:  MOVF   xA2,W
07F08:  SUBLW  03
07F0A:  BNZ   7F50
....................          { 
....................             strcpy(Menus.Letra,"Programa 03"); 
07F0C:  MOVLW  08
07F0E:  MOVWF  FEA
07F10:  MOVLW  46
07F12:  MOVWF  FE9
07F14:  MOVFF  FF2,866
07F18:  BCF    FF2.7
07F1A:  MOVLW  00
07F1C:  MOVLB  0
07F1E:  CALL   0AA6
07F22:  TBLRD*-
07F24:  TBLRD*+
07F26:  MOVF   FF5,W
07F28:  MOVWF  FEE
07F2A:  IORLW  00
07F2C:  BNZ   7F24
07F2E:  MOVLB  8
07F30:  BTFSC  x66.7
07F32:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
07F34:  MOVLW  08
07F36:  MOVWF  x6E
07F38:  MOVLW  46
07F3A:  MOVWF  x6D
07F3C:  CLRF   x6F
07F3E:  MOVLW  26
07F40:  MOVWF  x70
07F42:  CLRF   x71
07F44:  MOVLW  02
07F46:  MOVWF  x72
07F48:  MOVLB  0
07F4A:  CALL   1A52
07F4E:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==4) 
07F50:  MOVF   xA2,W
07F52:  SUBLW  04
07F54:  BNZ   7F9A
....................          { 
....................             strcpy(Menus.Letra,"Programa 04"); 
07F56:  MOVLW  08
07F58:  MOVWF  FEA
07F5A:  MOVLW  46
07F5C:  MOVWF  FE9
07F5E:  MOVFF  FF2,866
07F62:  BCF    FF2.7
07F64:  MOVLW  00
07F66:  MOVLB  0
07F68:  CALL   0AD0
07F6C:  TBLRD*-
07F6E:  TBLRD*+
07F70:  MOVF   FF5,W
07F72:  MOVWF  FEE
07F74:  IORLW  00
07F76:  BNZ   7F6E
07F78:  MOVLB  8
07F7A:  BTFSC  x66.7
07F7C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
07F7E:  MOVLW  08
07F80:  MOVWF  x6E
07F82:  MOVLW  46
07F84:  MOVWF  x6D
07F86:  CLRF   x6F
07F88:  MOVLW  26
07F8A:  MOVWF  x70
07F8C:  CLRF   x71
07F8E:  MOVLW  02
07F90:  MOVWF  x72
07F92:  MOVLB  0
07F94:  CALL   1A52
07F98:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==5) 
07F9A:  MOVF   xA2,W
07F9C:  SUBLW  05
07F9E:  BNZ   7FE4
....................          { 
....................             strcpy(Menus.Letra,"Programa 05"); 
07FA0:  MOVLW  08
07FA2:  MOVWF  FEA
07FA4:  MOVLW  46
07FA6:  MOVWF  FE9
07FA8:  MOVFF  FF2,866
07FAC:  BCF    FF2.7
07FAE:  MOVLW  00
07FB0:  MOVLB  0
07FB2:  CALL   0AFA
07FB6:  TBLRD*-
07FB8:  TBLRD*+
07FBA:  MOVF   FF5,W
07FBC:  MOVWF  FEE
07FBE:  IORLW  00
07FC0:  BNZ   7FB8
07FC2:  MOVLB  8
07FC4:  BTFSC  x66.7
07FC6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
07FC8:  MOVLW  08
07FCA:  MOVWF  x6E
07FCC:  MOVLW  46
07FCE:  MOVWF  x6D
07FD0:  CLRF   x6F
07FD2:  MOVLW  26
07FD4:  MOVWF  x70
07FD6:  CLRF   x71
07FD8:  MOVLW  02
07FDA:  MOVWF  x72
07FDC:  MOVLB  0
07FDE:  CALL   1A52
07FE2:  MOVLB  5
....................          } 
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
07FE4:  BSF    F92.5
07FE6:  BTFSC  F80.5
07FE8:  BRA    8022
....................       { 
....................          Buzz_on;delay_ms(30);Opcion++;Buzz_off; 
07FEA:  BSF    F8B.4
07FEC:  BCF    F94.4
07FEE:  MOVLW  1E
07FF0:  MOVLB  8
07FF2:  MOVWF  x6E
07FF4:  MOVLB  0
07FF6:  CALL   13A4
07FFA:  MOVLB  5
07FFC:  INCF   xA2,F
07FFE:  BCF    F8B.4
08000:  BCF    F94.4
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
08002:  MOVLW  28
08004:  MOVLB  8
08006:  MOVWF  x7E
08008:  MOVLW  23
0800A:  MOVWF  x7F
0800C:  MOVLW  55
0800E:  MOVWF  x80
08010:  MOVLW  3C
08012:  MOVWF  x81
08014:  MOVLW  01
08016:  MOVWF  x82
08018:  CLRF   x83
0801A:  MOVLB  0
0801C:  CALL   17D8
08020:  MOVLB  5
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
08022:  BSF    F96.0
08024:  BTFSC  F84.0
08026:  BRA    8060
....................       {   
....................          Buzz_on;delay_ms(30);Opcion--;Buzz_off; 
08028:  BSF    F8B.4
0802A:  BCF    F94.4
0802C:  MOVLW  1E
0802E:  MOVLB  8
08030:  MOVWF  x6E
08032:  MOVLB  0
08034:  CALL   13A4
08038:  MOVLB  5
0803A:  DECF   xA2,F
0803C:  BCF    F8B.4
0803E:  BCF    F94.4
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
08040:  MOVLW  28
08042:  MOVLB  8
08044:  MOVWF  x7E
08046:  MOVLW  23
08048:  MOVWF  x7F
0804A:  MOVLW  55
0804C:  MOVWF  x80
0804E:  MOVLW  3C
08050:  MOVWF  x81
08052:  MOVLW  01
08054:  MOVWF  x82
08056:  CLRF   x83
08058:  MOVLB  0
0805A:  CALL   17D8
0805E:  MOVLB  5
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
08060:  BSF    F96.1
08062:  BTFSC  F84.1
08064:  BRA    84FA
....................       {   
....................          Menu=20;glcd_fillscreen(OFF); 
08066:  MOVLW  14
08068:  MOVWF  x9B
0806A:  MOVLB  8
0806C:  CLRF   x6D
0806E:  MOVLB  0
08070:  CALL   1424
....................          for(i=0;i<Pasos;i++){ 
08074:  MOVLB  5
08076:  CLRF   x9D
08078:  MOVF   x9D,W
0807A:  SUBLW  0F
0807C:  BNC   80C6
....................             if(Temperatura1[i+((Opcion-1)*Pasos)]==0){ 
0807E:  MOVLW  01
08080:  SUBWF  xA2,W
08082:  MULLW  10
08084:  MOVF   FF3,W
08086:  ADDWF  x9D,W
08088:  MOVWF  00
0808A:  BCF    FD8.0
0808C:  RLCF   00,F
0808E:  MOVF   00,W
08090:  CLRF   03
08092:  ADDLW  66
08094:  MOVWF  FE9
08096:  MOVLW  06
08098:  ADDWFC 03,W
0809A:  MOVWF  FEA
0809C:  MOVFF  FEC,867
080A0:  MOVF   FED,F
080A2:  MOVFF  FEF,866
080A6:  MOVLB  8
080A8:  MOVF   x66,F
080AA:  BNZ   80BC
080AC:  MOVF   x67,F
080AE:  BNZ   80BC
....................                Segmentos=i; 
080B0:  MOVFF  59D,592
....................                break; 
080B4:  MOVLB  5
080B6:  BRA    80C6
....................             } 
....................             else{ 
080B8:  BRA    80C2
080BA:  MOVLB  8
....................                Segmentos=Pasos-1; 
080BC:  MOVLW  0F
080BE:  MOVLB  5
080C0:  MOVWF  x92
....................             } 
....................             //Horas1[i+((Opcion-1)*10)]=0; 
....................             //Minutos1[i+((Opcion-1)*10)]=0; 
....................          } 
080C2:  INCF   x9D,F
080C4:  BRA    8078
....................          if(Segmentos>0){ 
080C6:  MOVF   x92,F
080C8:  BTFSC  FD8.2
080CA:  BRA    843A
....................             ProgramaSeleccionado=Opcion-1; 
080CC:  MOVLW  01
080CE:  SUBWF  xA2,W
080D0:  MOVWF  xA4
....................             glcd_fillscreen(OFF); 
080D2:  MOVLB  8
080D4:  CLRF   x6D
080D6:  MOVLB  0
080D8:  CALL   1424
....................              
....................             strcpy(Menus.Letra," Segmentos"); 
080DC:  MOVLW  08
080DE:  MOVWF  FEA
080E0:  MOVLW  46
080E2:  MOVWF  FE9
080E4:  MOVFF  FF2,866
080E8:  BCF    FF2.7
080EA:  MOVLW  00
080EC:  CALL   0B24
080F0:  TBLRD*-
080F2:  TBLRD*+
080F4:  MOVF   FF5,W
080F6:  MOVWF  FEE
080F8:  IORLW  00
080FA:  BNZ   80F2
080FC:  MOVLB  8
080FE:  BTFSC  x66.7
08100:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,2); 
08102:  MOVLW  08
08104:  MOVWF  x6E
08106:  MOVLW  46
08108:  MOVWF  x6D
0810A:  CLRF   x6F
0810C:  CLRF   x70
0810E:  CLRF   x71
08110:  MOVLW  02
08112:  MOVWF  x72
08114:  MOVLB  0
08116:  CALL   1A52
....................              
....................             displayTiempo(Segmentos,63,30,3,2); 
0811A:  MOVFF  592,869
0811E:  MOVLW  3F
08120:  MOVLB  8
08122:  MOVWF  x6A
08124:  MOVLW  1E
08126:  MOVWF  x6B
08128:  MOVLW  03
0812A:  MOVWF  x6C
0812C:  MOVLW  02
0812E:  MOVWF  x6D
08130:  MOVLB  0
08132:  CALL   3C6E
....................             delay_ms(2000); 
08136:  MOVLW  08
08138:  MOVLB  8
0813A:  MOVWF  x66
0813C:  MOVLW  FA
0813E:  MOVWF  x6E
08140:  MOVLB  0
08142:  CALL   13A4
08146:  MOVLB  8
08148:  DECFSZ x66,F
0814A:  BRA    813C
....................             glcd_fillscreen(OFF); 
0814C:  CLRF   x6D
0814E:  MOVLB  0
08150:  CALL   1424
....................             Opcion=1;visual=1;//Faltaa cuadrar esta parte 
08154:  MOVLW  01
08156:  MOVLB  5
08158:  MOVWF  xA2
0815A:  BSF    x87.7
....................             TempeInicial=Temperatura; 
0815C:  MOVFF  62D,5C5
08160:  MOVFF  62C,5C4
08164:  MOVFF  62B,5C3
08168:  MOVFF  62A,5C2
....................             Ganancia=GananciaIn*(Setpoint/Coeficiente); 
0816C:  MOVFF  639,86D
08170:  MOVFF  638,86C
08174:  MOVFF  637,86B
08178:  MOVFF  636,86A
0817C:  MOVFF  621,871
08180:  MOVFF  620,870
08184:  MOVFF  61F,86F
08188:  MOVFF  61E,86E
0818C:  MOVLB  0
0818E:  CALL   1E0A
08192:  MOVFF  615,88A
08196:  MOVFF  614,889
0819A:  MOVFF  613,888
0819E:  MOVFF  612,887
081A2:  MOVFF  03,88E
081A6:  MOVFF  02,88D
081AA:  MOVFF  01,88C
081AE:  MOVFF  00,88B
081B2:  CALL   32D2
081B6:  MOVFF  03,619
081BA:  MOVFF  02,618
081BE:  MOVFF  01,617
081C2:  MOVFF  00,616
....................              
....................             Tiempo=(Horas1[ProgramaSeleccionado*Pasos]*3600)+(Minutos1[ProgramaSeleccionado*Pasos]*60);          
081C6:  MOVLB  5
081C8:  MOVF   xA4,W
081CA:  MULLW  10
081CC:  MOVFF  FF3,00
081D0:  BCF    FD8.0
081D2:  RLCF   00,F
081D4:  MOVF   00,W
081D6:  CLRF   03
081D8:  ADDLW  06
081DA:  MOVWF  FE9
081DC:  MOVLW  07
081DE:  ADDWFC 03,W
081E0:  MOVWF  FEA
081E2:  MOVFF  FEC,867
081E6:  MOVF   FED,F
081E8:  MOVFF  FEF,866
081EC:  MOVFF  867,86B
081F0:  MOVFF  866,86A
081F4:  MOVLW  0E
081F6:  MOVLB  8
081F8:  MOVWF  x6D
081FA:  MOVLW  10
081FC:  MOVWF  x6C
081FE:  MOVLB  0
08200:  CALL   3E34
08204:  MOVFF  02,867
08208:  MOVFF  01,866
0820C:  MOVLB  5
0820E:  MOVF   xA4,W
08210:  MULLW  10
08212:  MOVFF  FF3,00
08216:  BCF    FD8.0
08218:  RLCF   00,F
0821A:  MOVF   00,W
0821C:  CLRF   03
0821E:  ADDLW  A6
08220:  MOVWF  FE9
08222:  MOVLW  07
08224:  ADDWFC 03,W
08226:  MOVWF  FEA
08228:  MOVFF  FEC,869
0822C:  MOVF   FED,F
0822E:  MOVFF  FEF,868
08232:  MOVFF  869,86B
08236:  MOVFF  868,86A
0823A:  MOVLB  8
0823C:  CLRF   x6D
0823E:  MOVLW  3C
08240:  MOVWF  x6C
08242:  MOVLB  0
08244:  CALL   3E34
08248:  MOVFF  02,03
0824C:  MOVF   01,W
0824E:  MOVLB  8
08250:  ADDWF  x66,W
08252:  MOVWF  01
08254:  MOVF   x67,W
08256:  ADDWFC 03,F
08258:  MOVFF  01,86A
0825C:  MOVFF  03,86B
08260:  MOVLB  0
08262:  CALL   3E88
08266:  MOVFF  03,5C9
0826A:  MOVFF  02,5C8
0826E:  MOVFF  01,5C7
08272:  MOVFF  00,5C6
....................             Setpoint=Temperatura1[(ProgramaSeleccionado*Pasos)+Segmento]; 
08276:  MOVLB  5
08278:  MOVF   xA4,W
0827A:  MULLW  10
0827C:  MOVF   FF3,W
0827E:  ADDWF  x93,W
08280:  MOVWF  00
08282:  BCF    FD8.0
08284:  RLCF   00,F
08286:  MOVF   00,W
08288:  CLRF   03
0828A:  ADDLW  66
0828C:  MOVWF  FE9
0828E:  MOVLW  06
08290:  ADDWFC 03,W
08292:  MOVWF  FEA
08294:  MOVFF  FEC,03
08298:  MOVF   FED,F
0829A:  MOVFF  FEF,86A
0829E:  MOVFF  03,86B
082A2:  MOVLB  0
082A4:  CALL   3E88
082A8:  MOVFF  03,639
082AC:  MOVFF  02,638
082B0:  MOVFF  01,637
082B4:  MOVFF  00,636
....................             Pendiente=((Setpoint-TempeInicial)/Tiempo); 
082B8:  BSF    FD8.1
082BA:  MOVFF  639,875
082BE:  MOVFF  638,874
082C2:  MOVFF  637,873
082C6:  MOVFF  636,872
082CA:  MOVFF  5C5,879
082CE:  MOVFF  5C4,878
082D2:  MOVFF  5C3,877
082D6:  MOVFF  5C2,876
082DA:  CALL   1F68
082DE:  MOVFF  00,866
082E2:  MOVFF  01,867
082E6:  MOVFF  02,868
082EA:  MOVFF  03,869
082EE:  MOVFF  03,86D
082F2:  MOVFF  02,86C
082F6:  MOVFF  01,86B
082FA:  MOVFF  00,86A
082FE:  MOVFF  5C9,871
08302:  MOVFF  5C8,870
08306:  MOVFF  5C7,86F
0830A:  MOVFF  5C6,86E
0830E:  CALL   1E0A
08312:  MOVFF  03,631
08316:  MOVFF  02,630
0831A:  MOVFF  01,62F
0831E:  MOVFF  00,62E
....................             Testerilizacionp[3]=(int8)Horas1[(ProgramaSeleccionado*Pasos)+Segmento]/10; 
08322:  MOVLB  5
08324:  MOVF   xA4,W
08326:  MULLW  10
08328:  MOVF   FF3,W
0832A:  ADDWF  x93,W
0832C:  MOVWF  00
0832E:  BCF    FD8.0
08330:  RLCF   00,F
08332:  MOVF   00,W
08334:  CLRF   03
08336:  ADDLW  06
08338:  MOVWF  FE9
0833A:  MOVLW  07
0833C:  ADDWFC 03,W
0833E:  MOVWF  FEA
08340:  MOVFF  FEF,882
08344:  MOVLW  0A
08346:  MOVLB  8
08348:  MOVWF  x83
0834A:  MOVLB  0
0834C:  CALL   1B78
08350:  MOVFF  01,5ED
08354:  MOVLB  5
....................             Testerilizacionp[2]=Horas1[(ProgramaSeleccionado*Pasos)+Segmento]-(Testerilizacionp[3]*10); 
08356:  MOVF   xA4,W
08358:  MULLW  10
0835A:  MOVF   FF3,W
0835C:  ADDWF  x93,W
0835E:  MOVWF  00
08360:  BCF    FD8.0
08362:  RLCF   00,F
08364:  MOVF   00,W
08366:  CLRF   03
08368:  ADDLW  06
0836A:  MOVWF  FE9
0836C:  MOVLW  07
0836E:  ADDWFC 03,W
08370:  MOVWF  FEA
08372:  MOVFF  FEC,867
08376:  MOVF   FED,F
08378:  MOVFF  FEF,866
0837C:  MOVFF  5ED,887
08380:  MOVLW  0A
08382:  MOVLB  8
08384:  MOVWF  x88
08386:  MOVLB  0
08388:  CALL   3ED8
0838C:  MOVF   01,W
0838E:  CLRF   03
08390:  MOVWF  00
08392:  BTFSC  FE8.7
08394:  DECF   03,F
08396:  MOVLB  8
08398:  SUBWF  x66,W
0839A:  MOVWF  00
0839C:  MOVF   03,W
0839E:  SUBWFB x67,W
083A0:  MOVFF  00,5EC
083A4:  MOVLB  5
....................             Testerilizacionp[1]=Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]/10; 
083A6:  MOVF   xA4,W
083A8:  MULLW  10
083AA:  MOVF   FF3,W
083AC:  ADDWF  x93,W
083AE:  MOVWF  00
083B0:  BCF    FD8.0
083B2:  RLCF   00,F
083B4:  MOVF   00,W
083B6:  CLRF   03
083B8:  ADDLW  A6
083BA:  MOVWF  FE9
083BC:  MOVLW  07
083BE:  ADDWFC 03,W
083C0:  MOVWF  FEA
083C2:  MOVFF  FEC,867
083C6:  MOVF   FED,F
083C8:  MOVFF  FEF,866
083CC:  MOVFF  867,869
083D0:  MOVFF  866,868
083D4:  MOVLB  8
083D6:  CLRF   x6B
083D8:  MOVLW  0A
083DA:  MOVWF  x6A
083DC:  MOVLB  0
083DE:  CALL   3F26
083E2:  MOVFF  01,5EB
083E6:  MOVLB  5
....................             Testerilizacionp[0]=Minutos1[(ProgramaSeleccionado*Pasos)+Segmento]-(Testerilizacionp[1]*10); 
083E8:  MOVF   xA4,W
083EA:  MULLW  10
083EC:  MOVF   FF3,W
083EE:  ADDWF  x93,W
083F0:  MOVWF  00
083F2:  BCF    FD8.0
083F4:  RLCF   00,F
083F6:  MOVF   00,W
083F8:  CLRF   03
083FA:  ADDLW  A6
083FC:  MOVWF  FE9
083FE:  MOVLW  07
08400:  ADDWFC 03,W
08402:  MOVWF  FEA
08404:  MOVFF  FEC,867
08408:  MOVF   FED,F
0840A:  MOVFF  FEF,866
0840E:  MOVFF  5EB,887
08412:  MOVLW  0A
08414:  MOVLB  8
08416:  MOVWF  x88
08418:  MOVLB  0
0841A:  CALL   3ED8
0841E:  MOVF   01,W
08420:  CLRF   03
08422:  MOVWF  00
08424:  BTFSC  FE8.7
08426:  DECF   03,F
08428:  MOVLB  8
0842A:  SUBWF  x66,W
0842C:  MOVWF  00
0842E:  MOVF   03,W
08430:  SUBWFB x67,W
08432:  MOVFF  00,5EA
08436:  MOVLB  5
....................              
....................          } 
....................          else{ 
08438:  BRA    84FA
....................             glcd_fillscreen(OFF); 
0843A:  MOVLB  8
0843C:  CLRF   x6D
0843E:  MOVLB  0
08440:  CALL   1424
....................             strcpy(Menus.Letra," !Programa"); 
08444:  MOVLW  08
08446:  MOVWF  FEA
08448:  MOVLW  46
0844A:  MOVWF  FE9
0844C:  MOVFF  FF2,866
08450:  BCF    FF2.7
08452:  MOVLW  00
08454:  CALL   0B4E
08458:  TBLRD*-
0845A:  TBLRD*+
0845C:  MOVF   FF5,W
0845E:  MOVWF  FEE
08460:  IORLW  00
08462:  BNZ   845A
08464:  MOVLB  8
08466:  BTFSC  x66.7
08468:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,2); 
0846A:  MOVLW  08
0846C:  MOVWF  x6E
0846E:  MOVLW  46
08470:  MOVWF  x6D
08472:  CLRF   x6F
08474:  CLRF   x70
08476:  CLRF   x71
08478:  MOVLW  02
0847A:  MOVWF  x72
0847C:  MOVLB  0
0847E:  CALL   1A52
....................             strcpy(Menus.Letra,"    Vacio!"); 
08482:  MOVLW  08
08484:  MOVWF  FEA
08486:  MOVLW  46
08488:  MOVWF  FE9
0848A:  MOVFF  FF2,866
0848E:  BCF    FF2.7
08490:  MOVLW  00
08492:  CALL   0B78
08496:  TBLRD*-
08498:  TBLRD*+
0849A:  MOVF   FF5,W
0849C:  MOVWF  FEE
0849E:  IORLW  00
084A0:  BNZ   8498
084A2:  MOVLB  8
084A4:  BTFSC  x66.7
084A6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,2); 
084A8:  MOVLW  08
084AA:  MOVWF  x6E
084AC:  MOVLW  46
084AE:  MOVWF  x6D
084B0:  CLRF   x6F
084B2:  MOVLW  14
084B4:  MOVWF  x70
084B6:  CLRF   x71
084B8:  MOVLW  02
084BA:  MOVWF  x72
084BC:  MOVLB  0
084BE:  CALL   1A52
....................             Opcion=1;Buzz_off;delay_ms(2000);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
084C2:  MOVLW  01
084C4:  MOVLB  5
084C6:  MOVWF  xA2
084C8:  BCF    F8B.4
084CA:  BCF    F94.4
084CC:  MOVLW  08
084CE:  MOVLB  8
084D0:  MOVWF  x66
084D2:  MOVLW  FA
084D4:  MOVWF  x6E
084D6:  MOVLB  0
084D8:  CALL   13A4
084DC:  MOVLB  8
084DE:  DECFSZ x66,F
084E0:  BRA    84D2
084E2:  MOVLW  01
084E4:  MOVLB  5
084E6:  MOVWF  x9B
084E8:  MOVLB  8
084EA:  CLRF   x6D
084EC:  MOVLB  0
084EE:  CALL   1424
084F2:  MOVLW  01
084F4:  MOVLB  5
084F6:  MOVWF  xA2
084F8:  BSF    x87.7
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
084FA:  BSF    F96.2
084FC:  BTFSC  F84.2
084FE:  BRA    8530
....................       { 
....................          Buzz_on;Opcion=1;Buzz_off;delay_ms(50);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08500:  BSF    F8B.4
08502:  BCF    F94.4
08504:  MOVLW  01
08506:  MOVWF  xA2
08508:  BCF    F8B.4
0850A:  BCF    F94.4
0850C:  MOVLW  32
0850E:  MOVLB  8
08510:  MOVWF  x6E
08512:  MOVLB  0
08514:  CALL   13A4
08518:  MOVLW  01
0851A:  MOVLB  5
0851C:  MOVWF  x9B
0851E:  MOVLB  8
08520:  CLRF   x6D
08522:  MOVLB  0
08524:  CALL   1424
08528:  MOVLW  01
0852A:  MOVLB  5
0852C:  MOVWF  xA2
0852E:  BSF    x87.7
....................       }  
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==5){ //Menu Editar Programa 
08530:  MOVF   x9B,W
08532:  SUBLW  05
08534:  BTFSS  FD8.2
08536:  BRA    8900
....................        
....................          if(Opcion>5) 
08538:  MOVF   xA2,W
0853A:  SUBLW  05
0853C:  BC    8542
....................          {Opcion=1;} 
0853E:  MOVLW  01
08540:  MOVWF  xA2
....................          if(Opcion<1) 
08542:  MOVF   xA2,F
08544:  BNZ   854A
....................          {Opcion=5;} 
08546:  MOVLW  05
08548:  MOVWF  xA2
....................           
....................          strcpy(Menus.Letra,"Editar"); 
0854A:  MOVLW  08
0854C:  MOVWF  FEA
0854E:  MOVLW  46
08550:  MOVWF  FE9
08552:  MOVFF  FF2,866
08556:  BCF    FF2.7
08558:  MOVLW  00
0855A:  MOVLB  0
0855C:  CALL   0BA2
08560:  TBLRD*-
08562:  TBLRD*+
08564:  MOVF   FF5,W
08566:  MOVWF  FEE
08568:  IORLW  00
0856A:  BNZ   8562
0856C:  MOVLB  8
0856E:  BTFSC  x66.7
08570:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
08572:  MOVLW  08
08574:  MOVWF  x6E
08576:  MOVLW  46
08578:  MOVWF  x6D
0857A:  MOVLW  1E
0857C:  MOVWF  x6F
0857E:  CLRF   x70
08580:  MOVLW  01
08582:  MOVWF  x71
08584:  MOVLW  02
08586:  MOVWF  x72
08588:  MOVLB  0
0858A:  CALL   1A52
....................        
....................          if(Opcion==1)    
0858E:  MOVLB  5
08590:  DECFSZ xA2,W
08592:  BRA    85DA
....................             {strcpy(Menus.Letra,"Programa 01"); 
08594:  MOVLW  08
08596:  MOVWF  FEA
08598:  MOVLW  46
0859A:  MOVWF  FE9
0859C:  MOVFF  FF2,866
085A0:  BCF    FF2.7
085A2:  MOVLW  00
085A4:  MOVLB  0
085A6:  CALL   0A52
085AA:  TBLRD*-
085AC:  TBLRD*+
085AE:  MOVF   FF5,W
085B0:  MOVWF  FEE
085B2:  IORLW  00
085B4:  BNZ   85AC
085B6:  MOVLB  8
085B8:  BTFSC  x66.7
085BA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
085BC:  MOVLW  08
085BE:  MOVWF  x6E
085C0:  MOVLW  46
085C2:  MOVWF  x6D
085C4:  CLRF   x6F
085C6:  MOVLW  12
085C8:  MOVWF  x70
085CA:  MOVLW  01
085CC:  MOVWF  x71
085CE:  MOVWF  x72
085D0:  MOVLB  0
085D2:  CALL   1A52
....................          else 
085D6:  BRA    861C
085D8:  MOVLB  5
....................             {strcpy(Menus.Letra,"Programa 01"); 
085DA:  MOVLW  08
085DC:  MOVWF  FEA
085DE:  MOVLW  46
085E0:  MOVWF  FE9
085E2:  MOVFF  FF2,866
085E6:  BCF    FF2.7
085E8:  MOVLW  00
085EA:  MOVLB  0
085EC:  CALL   0A52
085F0:  TBLRD*-
085F2:  TBLRD*+
085F4:  MOVF   FF5,W
085F6:  MOVWF  FEE
085F8:  IORLW  00
085FA:  BNZ   85F2
085FC:  MOVLB  8
085FE:  BTFSC  x66.7
08600:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);} 
08602:  MOVLW  08
08604:  MOVWF  x6E
08606:  MOVLW  46
08608:  MOVWF  x6D
0860A:  CLRF   x6F
0860C:  MOVLW  12
0860E:  MOVWF  x70
08610:  CLRF   x71
08612:  MOVLW  01
08614:  MOVWF  x72
08616:  MOVLB  0
08618:  CALL   1A52
....................           
....................          if(Opcion==2)    
0861C:  MOVLB  5
0861E:  MOVF   xA2,W
08620:  SUBLW  02
08622:  BNZ   866A
....................             {strcpy(Menus.Letra,"Programa 02"); 
08624:  MOVLW  08
08626:  MOVWF  FEA
08628:  MOVLW  46
0862A:  MOVWF  FE9
0862C:  MOVFF  FF2,866
08630:  BCF    FF2.7
08632:  MOVLW  00
08634:  MOVLB  0
08636:  CALL   0A7C
0863A:  TBLRD*-
0863C:  TBLRD*+
0863E:  MOVF   FF5,W
08640:  MOVWF  FEE
08642:  IORLW  00
08644:  BNZ   863C
08646:  MOVLB  8
08648:  BTFSC  x66.7
0864A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
0864C:  MOVLW  08
0864E:  MOVWF  x6E
08650:  MOVLW  46
08652:  MOVWF  x6D
08654:  CLRF   x6F
08656:  MOVLW  1B
08658:  MOVWF  x70
0865A:  MOVLW  01
0865C:  MOVWF  x71
0865E:  MOVWF  x72
08660:  MOVLB  0
08662:  CALL   1A52
....................          else 
08666:  BRA    86AC
08668:  MOVLB  5
....................             {strcpy(Menus.Letra,"Programa 02"); 
0866A:  MOVLW  08
0866C:  MOVWF  FEA
0866E:  MOVLW  46
08670:  MOVWF  FE9
08672:  MOVFF  FF2,866
08676:  BCF    FF2.7
08678:  MOVLW  00
0867A:  MOVLB  0
0867C:  CALL   0A7C
08680:  TBLRD*-
08682:  TBLRD*+
08684:  MOVF   FF5,W
08686:  MOVWF  FEE
08688:  IORLW  00
0868A:  BNZ   8682
0868C:  MOVLB  8
0868E:  BTFSC  x66.7
08690:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);} 
08692:  MOVLW  08
08694:  MOVWF  x6E
08696:  MOVLW  46
08698:  MOVWF  x6D
0869A:  CLRF   x6F
0869C:  MOVLW  1B
0869E:  MOVWF  x70
086A0:  CLRF   x71
086A2:  MOVLW  01
086A4:  MOVWF  x72
086A6:  MOVLB  0
086A8:  CALL   1A52
....................              
....................          if(Opcion==3)    
086AC:  MOVLB  5
086AE:  MOVF   xA2,W
086B0:  SUBLW  03
086B2:  BNZ   86FA
....................             {strcpy(Menus.Letra,"Programa 03"); 
086B4:  MOVLW  08
086B6:  MOVWF  FEA
086B8:  MOVLW  46
086BA:  MOVWF  FE9
086BC:  MOVFF  FF2,866
086C0:  BCF    FF2.7
086C2:  MOVLW  00
086C4:  MOVLB  0
086C6:  CALL   0AA6
086CA:  TBLRD*-
086CC:  TBLRD*+
086CE:  MOVF   FF5,W
086D0:  MOVWF  FEE
086D2:  IORLW  00
086D4:  BNZ   86CC
086D6:  MOVLB  8
086D8:  BTFSC  x66.7
086DA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
086DC:  MOVLW  08
086DE:  MOVWF  x6E
086E0:  MOVLW  46
086E2:  MOVWF  x6D
086E4:  CLRF   x6F
086E6:  MOVLW  24
086E8:  MOVWF  x70
086EA:  MOVLW  01
086EC:  MOVWF  x71
086EE:  MOVWF  x72
086F0:  MOVLB  0
086F2:  CALL   1A52
....................          else 
086F6:  BRA    873C
086F8:  MOVLB  5
....................             {strcpy(Menus.Letra,"Programa 03"); 
086FA:  MOVLW  08
086FC:  MOVWF  FEA
086FE:  MOVLW  46
08700:  MOVWF  FE9
08702:  MOVFF  FF2,866
08706:  BCF    FF2.7
08708:  MOVLW  00
0870A:  MOVLB  0
0870C:  CALL   0AA6
08710:  TBLRD*-
08712:  TBLRD*+
08714:  MOVF   FF5,W
08716:  MOVWF  FEE
08718:  IORLW  00
0871A:  BNZ   8712
0871C:  MOVLB  8
0871E:  BTFSC  x66.7
08720:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}    
08722:  MOVLW  08
08724:  MOVWF  x6E
08726:  MOVLW  46
08728:  MOVWF  x6D
0872A:  CLRF   x6F
0872C:  MOVLW  24
0872E:  MOVWF  x70
08730:  CLRF   x71
08732:  MOVLW  01
08734:  MOVWF  x72
08736:  MOVLB  0
08738:  CALL   1A52
....................                          
....................          if(Opcion==4)    
0873C:  MOVLB  5
0873E:  MOVF   xA2,W
08740:  SUBLW  04
08742:  BNZ   878A
....................             {strcpy(Menus.Letra,"Programa 04"); 
08744:  MOVLW  08
08746:  MOVWF  FEA
08748:  MOVLW  46
0874A:  MOVWF  FE9
0874C:  MOVFF  FF2,866
08750:  BCF    FF2.7
08752:  MOVLW  00
08754:  MOVLB  0
08756:  CALL   0AD0
0875A:  TBLRD*-
0875C:  TBLRD*+
0875E:  MOVF   FF5,W
08760:  MOVWF  FEE
08762:  IORLW  00
08764:  BNZ   875C
08766:  MOVLB  8
08768:  BTFSC  x66.7
0876A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
0876C:  MOVLW  08
0876E:  MOVWF  x6E
08770:  MOVLW  46
08772:  MOVWF  x6D
08774:  CLRF   x6F
08776:  MOVLW  2D
08778:  MOVWF  x70
0877A:  MOVLW  01
0877C:  MOVWF  x71
0877E:  MOVWF  x72
08780:  MOVLB  0
08782:  CALL   1A52
....................          else 
08786:  BRA    87CC
08788:  MOVLB  5
....................             {strcpy(Menus.Letra,"Programa 04"); 
0878A:  MOVLW  08
0878C:  MOVWF  FEA
0878E:  MOVLW  46
08790:  MOVWF  FE9
08792:  MOVFF  FF2,866
08796:  BCF    FF2.7
08798:  MOVLW  00
0879A:  MOVLB  0
0879C:  CALL   0AD0
087A0:  TBLRD*-
087A2:  TBLRD*+
087A4:  MOVF   FF5,W
087A6:  MOVWF  FEE
087A8:  IORLW  00
087AA:  BNZ   87A2
087AC:  MOVLB  8
087AE:  BTFSC  x66.7
087B0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1);}      
087B2:  MOVLW  08
087B4:  MOVWF  x6E
087B6:  MOVLW  46
087B8:  MOVWF  x6D
087BA:  CLRF   x6F
087BC:  MOVLW  2D
087BE:  MOVWF  x70
087C0:  CLRF   x71
087C2:  MOVLW  01
087C4:  MOVWF  x72
087C6:  MOVLB  0
087C8:  CALL   1A52
....................           
....................          if(Opcion==5)    
087CC:  MOVLB  5
087CE:  MOVF   xA2,W
087D0:  SUBLW  05
087D2:  BNZ   881A
....................             {strcpy(Menus.Letra,"Programa 05"); 
087D4:  MOVLW  08
087D6:  MOVWF  FEA
087D8:  MOVLW  46
087DA:  MOVWF  FE9
087DC:  MOVFF  FF2,866
087E0:  BCF    FF2.7
087E2:  MOVLW  00
087E4:  MOVLB  0
087E6:  CALL   0AFA
087EA:  TBLRD*-
087EC:  TBLRD*+
087EE:  MOVF   FF5,W
087F0:  MOVWF  FEE
087F2:  IORLW  00
087F4:  BNZ   87EC
087F6:  MOVLB  8
087F8:  BTFSC  x66.7
087FA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,54,1,1);} 
087FC:  MOVLW  08
087FE:  MOVWF  x6E
08800:  MOVLW  46
08802:  MOVWF  x6D
08804:  CLRF   x6F
08806:  MOVLW  36
08808:  MOVWF  x70
0880A:  MOVLW  01
0880C:  MOVWF  x71
0880E:  MOVWF  x72
08810:  MOVLB  0
08812:  CALL   1A52
....................          else 
08816:  BRA    885C
08818:  MOVLB  5
....................             {strcpy(Menus.Letra,"Programa 05"); 
0881A:  MOVLW  08
0881C:  MOVWF  FEA
0881E:  MOVLW  46
08820:  MOVWF  FE9
08822:  MOVFF  FF2,866
08826:  BCF    FF2.7
08828:  MOVLW  00
0882A:  MOVLB  0
0882C:  CALL   0AFA
08830:  TBLRD*-
08832:  TBLRD*+
08834:  MOVF   FF5,W
08836:  MOVWF  FEE
08838:  IORLW  00
0883A:  BNZ   8832
0883C:  MOVLB  8
0883E:  BTFSC  x66.7
08840:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,54,0,1);}      
08842:  MOVLW  08
08844:  MOVWF  x6E
08846:  MOVLW  46
08848:  MOVWF  x6D
0884A:  CLRF   x6F
0884C:  MOVLW  36
0884E:  MOVWF  x70
08850:  CLRF   x71
08852:  MOVLW  01
08854:  MOVWF  x72
08856:  MOVLB  0
08858:  CALL   1A52
....................           
....................          if(UP)//Si oprime hacia arriba 
0885C:  BSF    F92.5
0885E:  BTFSC  F80.5
08860:  BRA    887C
....................          { 
....................             Buzz_on;delay_ms(30);Opcion--;Buzz_off; 
08862:  BSF    F8B.4
08864:  BCF    F94.4
08866:  MOVLW  1E
08868:  MOVLB  8
0886A:  MOVWF  x6E
0886C:  MOVLB  0
0886E:  CALL   13A4
08872:  MOVLB  5
08874:  DECF   xA2,F
08876:  BCF    F8B.4
08878:  BCF    F94.4
0887A:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
0887C:  BSF    F96.0
0887E:  BTFSC  F84.0
08880:  BRA    889C
....................          { 
....................             Buzz_on;delay_ms(30);Opcion++; Buzz_off; 
08882:  BSF    F8B.4
08884:  BCF    F94.4
08886:  MOVLW  1E
08888:  MOVLB  8
0888A:  MOVWF  x6E
0888C:  MOVLB  0
0888E:  CALL   13A4
08892:  MOVLB  5
08894:  INCF   xA2,F
08896:  BCF    F8B.4
08898:  BCF    F94.4
0889A:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0889C:  BSF    F96.1
0889E:  BTFSC  F84.1
088A0:  BRA    88D2
....................          {  
....................             Buzz_on;delay_ms(50);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);Buzz_off;i=0; 
088A2:  BSF    F8B.4
088A4:  BCF    F94.4
088A6:  MOVLW  32
088A8:  MOVLB  8
088AA:  MOVWF  x6E
088AC:  MOVLB  0
088AE:  CALL   13A4
088B2:  MOVLW  0A
088B4:  MOVLB  5
088B6:  ADDWF  xA2,W
088B8:  MOVWF  x9B
088BA:  MOVLW  01
088BC:  MOVWF  xA2
088BE:  MOVLB  8
088C0:  CLRF   x6D
088C2:  MOVLB  0
088C4:  CALL   1424
088C8:  BCF    F8B.4
088CA:  BCF    F94.4
088CC:  MOVLB  5
088CE:  CLRF   x9D
088D0:  MOVLB  0
....................          } 
....................           
....................          if(LEFT){ 
088D2:  BSF    F96.2
088D4:  BTFSC  F84.2
088D6:  BRA    88FE
....................             Buzz_on;delay_ms(50);Menu=1;Opcion=1;glcd_fillscreen(OFF);Buzz_off; 
088D8:  BSF    F8B.4
088DA:  BCF    F94.4
088DC:  MOVLW  32
088DE:  MOVLB  8
088E0:  MOVWF  x6E
088E2:  MOVLB  0
088E4:  CALL   13A4
088E8:  MOVLW  01
088EA:  MOVLB  5
088EC:  MOVWF  x9B
088EE:  MOVWF  xA2
088F0:  MOVLB  8
088F2:  CLRF   x6D
088F4:  MOVLB  0
088F6:  CALL   1424
088FA:  BCF    F8B.4
088FC:  BCF    F94.4
088FE:  MOVLB  5
....................          } 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==6){ //Menu de Borrar Programa 
08900:  MOVF   x9B,W
08902:  SUBLW  06
08904:  BTFSS  FD8.2
08906:  BRA    8E6C
....................        
....................       if(Opcion>5) 
08908:  MOVF   xA2,W
0890A:  SUBLW  05
0890C:  BC    8912
....................          Opcion=1; 
0890E:  MOVLW  01
08910:  MOVWF  xA2
....................           
....................       if(Opcion<1) 
08912:  MOVF   xA2,F
08914:  BNZ   891A
....................          Opcion=5; 
08916:  MOVLW  05
08918:  MOVWF  xA2
....................        
....................          strcpy(Menus.Letra,"  Elimine"); 
0891A:  MOVLW  08
0891C:  MOVWF  FEA
0891E:  MOVLW  46
08920:  MOVWF  FE9
08922:  MOVFF  FF2,866
08926:  BCF    FF2.7
08928:  MOVLW  00
0892A:  MOVLB  0
0892C:  CALL   0BC8
08930:  TBLRD*-
08932:  TBLRD*+
08934:  MOVF   FF5,W
08936:  MOVWF  FEE
08938:  IORLW  00
0893A:  BNZ   8932
0893C:  MOVLB  8
0893E:  BTFSC  x66.7
08940:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
08942:  MOVLW  08
08944:  MOVWF  x6E
08946:  MOVLW  46
08948:  MOVWF  x6D
0894A:  CLRF   x6F
0894C:  CLRF   x70
0894E:  MOVLW  01
08950:  MOVWF  x71
08952:  MOVLW  02
08954:  MOVWF  x72
08956:  MOVLB  0
08958:  CALL   1A52
....................           
....................          strcpy(Menus.Letra," Programa"); 
0895C:  MOVLW  08
0895E:  MOVWF  FEA
08960:  MOVLW  46
08962:  MOVWF  FE9
08964:  MOVFF  FF2,866
08968:  BCF    FF2.7
0896A:  MOVLW  00
0896C:  CALL   0A2A
08970:  TBLRD*-
08972:  TBLRD*+
08974:  MOVF   FF5,W
08976:  MOVWF  FEE
08978:  IORLW  00
0897A:  BNZ   8972
0897C:  MOVLB  8
0897E:  BTFSC  x66.7
08980:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
08982:  MOVLW  08
08984:  MOVWF  x6E
08986:  MOVLW  46
08988:  MOVWF  x6D
0898A:  CLRF   x6F
0898C:  MOVLW  10
0898E:  MOVWF  x70
08990:  MOVLW  01
08992:  MOVWF  x71
08994:  MOVLW  02
08996:  MOVWF  x72
08998:  MOVLB  0
0899A:  CALL   1A52
....................            
....................           
....................          if(Opcion==1) 
0899E:  MOVLB  5
089A0:  DECFSZ xA2,W
089A2:  BRA    89E8
....................          { 
....................             strcpy(Menus.Letra,"Programa 01"); 
089A4:  MOVLW  08
089A6:  MOVWF  FEA
089A8:  MOVLW  46
089AA:  MOVWF  FE9
089AC:  MOVFF  FF2,866
089B0:  BCF    FF2.7
089B2:  MOVLW  00
089B4:  MOVLB  0
089B6:  CALL   0A52
089BA:  TBLRD*-
089BC:  TBLRD*+
089BE:  MOVF   FF5,W
089C0:  MOVWF  FEE
089C2:  IORLW  00
089C4:  BNZ   89BC
089C6:  MOVLB  8
089C8:  BTFSC  x66.7
089CA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
089CC:  MOVLW  08
089CE:  MOVWF  x6E
089D0:  MOVLW  46
089D2:  MOVWF  x6D
089D4:  CLRF   x6F
089D6:  MOVLW  26
089D8:  MOVWF  x70
089DA:  CLRF   x71
089DC:  MOVLW  02
089DE:  MOVWF  x72
089E0:  MOVLB  0
089E2:  CALL   1A52
089E6:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==2) 
089E8:  MOVF   xA2,W
089EA:  SUBLW  02
089EC:  BNZ   8A32
....................          { 
....................             strcpy(Menus.Letra,"Programa 02"); 
089EE:  MOVLW  08
089F0:  MOVWF  FEA
089F2:  MOVLW  46
089F4:  MOVWF  FE9
089F6:  MOVFF  FF2,866
089FA:  BCF    FF2.7
089FC:  MOVLW  00
089FE:  MOVLB  0
08A00:  CALL   0A7C
08A04:  TBLRD*-
08A06:  TBLRD*+
08A08:  MOVF   FF5,W
08A0A:  MOVWF  FEE
08A0C:  IORLW  00
08A0E:  BNZ   8A06
08A10:  MOVLB  8
08A12:  BTFSC  x66.7
08A14:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
08A16:  MOVLW  08
08A18:  MOVWF  x6E
08A1A:  MOVLW  46
08A1C:  MOVWF  x6D
08A1E:  CLRF   x6F
08A20:  MOVLW  26
08A22:  MOVWF  x70
08A24:  CLRF   x71
08A26:  MOVLW  02
08A28:  MOVWF  x72
08A2A:  MOVLB  0
08A2C:  CALL   1A52
08A30:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==3) 
08A32:  MOVF   xA2,W
08A34:  SUBLW  03
08A36:  BNZ   8A7C
....................          { 
....................             strcpy(Menus.Letra,"Programa 03"); 
08A38:  MOVLW  08
08A3A:  MOVWF  FEA
08A3C:  MOVLW  46
08A3E:  MOVWF  FE9
08A40:  MOVFF  FF2,866
08A44:  BCF    FF2.7
08A46:  MOVLW  00
08A48:  MOVLB  0
08A4A:  CALL   0AA6
08A4E:  TBLRD*-
08A50:  TBLRD*+
08A52:  MOVF   FF5,W
08A54:  MOVWF  FEE
08A56:  IORLW  00
08A58:  BNZ   8A50
08A5A:  MOVLB  8
08A5C:  BTFSC  x66.7
08A5E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
08A60:  MOVLW  08
08A62:  MOVWF  x6E
08A64:  MOVLW  46
08A66:  MOVWF  x6D
08A68:  CLRF   x6F
08A6A:  MOVLW  26
08A6C:  MOVWF  x70
08A6E:  CLRF   x71
08A70:  MOVLW  02
08A72:  MOVWF  x72
08A74:  MOVLB  0
08A76:  CALL   1A52
08A7A:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==4) 
08A7C:  MOVF   xA2,W
08A7E:  SUBLW  04
08A80:  BNZ   8AC6
....................          { 
....................             strcpy(Menus.Letra,"Programa 04"); 
08A82:  MOVLW  08
08A84:  MOVWF  FEA
08A86:  MOVLW  46
08A88:  MOVWF  FE9
08A8A:  MOVFF  FF2,866
08A8E:  BCF    FF2.7
08A90:  MOVLW  00
08A92:  MOVLB  0
08A94:  CALL   0AD0
08A98:  TBLRD*-
08A9A:  TBLRD*+
08A9C:  MOVF   FF5,W
08A9E:  MOVWF  FEE
08AA0:  IORLW  00
08AA2:  BNZ   8A9A
08AA4:  MOVLB  8
08AA6:  BTFSC  x66.7
08AA8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
08AAA:  MOVLW  08
08AAC:  MOVWF  x6E
08AAE:  MOVLW  46
08AB0:  MOVWF  x6D
08AB2:  CLRF   x6F
08AB4:  MOVLW  26
08AB6:  MOVWF  x70
08AB8:  CLRF   x71
08ABA:  MOVLW  02
08ABC:  MOVWF  x72
08ABE:  MOVLB  0
08AC0:  CALL   1A52
08AC4:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==5) 
08AC6:  MOVF   xA2,W
08AC8:  SUBLW  05
08ACA:  BNZ   8B10
....................          { 
....................             strcpy(Menus.Letra,"Programa 05"); 
08ACC:  MOVLW  08
08ACE:  MOVWF  FEA
08AD0:  MOVLW  46
08AD2:  MOVWF  FE9
08AD4:  MOVFF  FF2,866
08AD8:  BCF    FF2.7
08ADA:  MOVLW  00
08ADC:  MOVLB  0
08ADE:  CALL   0AFA
08AE2:  TBLRD*-
08AE4:  TBLRD*+
08AE6:  MOVF   FF5,W
08AE8:  MOVWF  FEE
08AEA:  IORLW  00
08AEC:  BNZ   8AE4
08AEE:  MOVLB  8
08AF0:  BTFSC  x66.7
08AF2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,38,0,2); 
08AF4:  MOVLW  08
08AF6:  MOVWF  x6E
08AF8:  MOVLW  46
08AFA:  MOVWF  x6D
08AFC:  CLRF   x6F
08AFE:  MOVLW  26
08B00:  MOVWF  x70
08B02:  CLRF   x71
08B04:  MOVLW  02
08B06:  MOVWF  x72
08B08:  MOVLB  0
08B0A:  CALL   1A52
08B0E:  MOVLB  5
....................          } 
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
08B10:  BSF    F92.5
08B12:  BTFSC  F80.5
08B14:  BRA    8B4E
....................       { 
....................          Buzz_on;delay_ms(30);Opcion++;Buzz_off; 
08B16:  BSF    F8B.4
08B18:  BCF    F94.4
08B1A:  MOVLW  1E
08B1C:  MOVLB  8
08B1E:  MOVWF  x6E
08B20:  MOVLB  0
08B22:  CALL   13A4
08B26:  MOVLB  5
08B28:  INCF   xA2,F
08B2A:  BCF    F8B.4
08B2C:  BCF    F94.4
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
08B2E:  MOVLW  28
08B30:  MOVLB  8
08B32:  MOVWF  x7E
08B34:  MOVLW  23
08B36:  MOVWF  x7F
08B38:  MOVLW  55
08B3A:  MOVWF  x80
08B3C:  MOVLW  3C
08B3E:  MOVWF  x81
08B40:  MOVLW  01
08B42:  MOVWF  x82
08B44:  CLRF   x83
08B46:  MOVLB  0
08B48:  CALL   17D8
08B4C:  MOVLB  5
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
08B4E:  BSF    F96.0
08B50:  BTFSC  F84.0
08B52:  BRA    8B8C
....................       {   
....................          Buzz_on;delay_ms(30);Opcion--;Buzz_off; 
08B54:  BSF    F8B.4
08B56:  BCF    F94.4
08B58:  MOVLW  1E
08B5A:  MOVLB  8
08B5C:  MOVWF  x6E
08B5E:  MOVLB  0
08B60:  CALL   13A4
08B64:  MOVLB  5
08B66:  DECF   xA2,F
08B68:  BCF    F8B.4
08B6A:  BCF    F94.4
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
08B6C:  MOVLW  28
08B6E:  MOVLB  8
08B70:  MOVWF  x7E
08B72:  MOVLW  23
08B74:  MOVWF  x7F
08B76:  MOVLW  55
08B78:  MOVWF  x80
08B7A:  MOVLW  3C
08B7C:  MOVWF  x81
08B7E:  MOVLW  01
08B80:  MOVWF  x82
08B82:  CLRF   x83
08B84:  MOVLB  0
08B86:  CALL   17D8
08B8A:  MOVLB  5
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
08B8C:  BSF    F96.1
08B8E:  BTFSC  F84.1
08B90:  BRA    8E2C
....................       {   
....................          Buzz_on; 
08B92:  BSF    F8B.4
08B94:  BCF    F94.4
....................          for(i=0;i<Pasos;i++){ 
08B96:  CLRF   x9D
08B98:  MOVF   x9D,W
08B9A:  SUBLW  0F
08B9C:  BNC   8C0E
....................             Temperatura1[i+((Opcion-1)*Pasos)]=0; 
08B9E:  MOVLW  01
08BA0:  SUBWF  xA2,W
08BA2:  MULLW  10
08BA4:  MOVF   FF3,W
08BA6:  ADDWF  x9D,W
08BA8:  MOVWF  00
08BAA:  BCF    FD8.0
08BAC:  RLCF   00,F
08BAE:  MOVF   00,W
08BB0:  CLRF   03
08BB2:  ADDLW  66
08BB4:  MOVWF  FE9
08BB6:  MOVLW  06
08BB8:  ADDWFC 03,W
08BBA:  MOVWF  FEA
08BBC:  CLRF   FEC
08BBE:  MOVF   FED,F
08BC0:  CLRF   FEF
....................             Horas1[i+((Opcion-1)*Pasos)]=0; 
08BC2:  MOVLW  01
08BC4:  SUBWF  xA2,W
08BC6:  MULLW  10
08BC8:  MOVF   FF3,W
08BCA:  ADDWF  x9D,W
08BCC:  MOVWF  00
08BCE:  BCF    FD8.0
08BD0:  RLCF   00,F
08BD2:  MOVF   00,W
08BD4:  CLRF   03
08BD6:  ADDLW  06
08BD8:  MOVWF  FE9
08BDA:  MOVLW  07
08BDC:  ADDWFC 03,W
08BDE:  MOVWF  FEA
08BE0:  CLRF   FEC
08BE2:  MOVF   FED,F
08BE4:  CLRF   FEF
....................             Minutos1[i+((Opcion-1)*Pasos)]=0; 
08BE6:  MOVLW  01
08BE8:  SUBWF  xA2,W
08BEA:  MULLW  10
08BEC:  MOVF   FF3,W
08BEE:  ADDWF  x9D,W
08BF0:  MOVWF  00
08BF2:  BCF    FD8.0
08BF4:  RLCF   00,F
08BF6:  MOVF   00,W
08BF8:  CLRF   03
08BFA:  ADDLW  A6
08BFC:  MOVWF  FE9
08BFE:  MOVLW  07
08C00:  ADDWFC 03,W
08C02:  MOVWF  FEA
08C04:  CLRF   FEC
08C06:  MOVF   FED,F
08C08:  CLRF   FEF
....................          } 
08C0A:  INCF   x9D,F
08C0C:  BRA    8B98
....................           
....................          for(i=0;i<Pasos;i++){ 
08C0E:  CLRF   x9D
08C10:  MOVF   x9D,W
08C12:  SUBLW  0F
08C14:  BTFSS  FD8.0
08C16:  BRA    8D48
....................             delay_ms(10);     
08C18:  MOVLW  0A
08C1A:  MOVLB  8
08C1C:  MOVWF  x6E
08C1E:  MOVLB  0
08C20:  CALL   13A4
....................             write_eeprom((i*2)+((Pasos*4)*(Opcion-1)),0); 
08C24:  BCF    FD8.0
08C26:  MOVLB  5
08C28:  RLCF   x9D,W
08C2A:  MOVLB  8
08C2C:  MOVWF  x66
08C2E:  MOVLW  01
08C30:  MOVLB  5
08C32:  SUBWF  xA2,W
08C34:  MULLW  40
08C36:  MOVF   FF3,W
08C38:  MOVLB  8
08C3A:  ADDWF  x66,F
08C3C:  CLRF   FAA
08C3E:  MOVFF  866,FA9
08C42:  CLRF   FA8
08C44:  BCF    FA6.6
08C46:  BCF    FA6.7
08C48:  BSF    FA6.2
08C4A:  MOVF   FF2,W
08C4C:  MOVWF  00
08C4E:  BCF    FF2.7
08C50:  MOVLB  F
08C52:  MOVLW  55
08C54:  MOVWF  FA7
08C56:  MOVLW  AA
08C58:  MOVWF  FA7
08C5A:  BSF    FA6.1
08C5C:  BTFSC  FA6.1
08C5E:  BRA    8C5C
08C60:  BCF    FA6.2
08C62:  MOVF   00,W
08C64:  IORWF  FF2,F
....................             delay_ms(10);     
08C66:  MOVLW  0A
08C68:  MOVLB  8
08C6A:  MOVWF  x6E
08C6C:  MOVLB  0
08C6E:  CALL   13A4
....................             write_eeprom((i*2)+1+((Pasos*4)*(Opcion-1)),0); 
08C72:  BCF    FD8.0
08C74:  MOVLB  5
08C76:  RLCF   x9D,W
08C78:  ADDLW  01
08C7A:  MOVLB  8
08C7C:  MOVWF  x66
08C7E:  MOVLW  01
08C80:  MOVLB  5
08C82:  SUBWF  xA2,W
08C84:  MULLW  40
08C86:  MOVF   FF3,W
08C88:  MOVLB  8
08C8A:  ADDWF  x66,F
08C8C:  CLRF   FAA
08C8E:  MOVFF  866,FA9
08C92:  CLRF   FA8
08C94:  BCF    FA6.6
08C96:  BCF    FA6.7
08C98:  BSF    FA6.2
08C9A:  MOVF   FF2,W
08C9C:  MOVWF  00
08C9E:  BCF    FF2.7
08CA0:  MOVLB  F
08CA2:  MOVLW  55
08CA4:  MOVWF  FA7
08CA6:  MOVLW  AA
08CA8:  MOVWF  FA7
08CAA:  BSF    FA6.1
08CAC:  BTFSC  FA6.1
08CAE:  BRA    8CAC
08CB0:  BCF    FA6.2
08CB2:  MOVF   00,W
08CB4:  IORWF  FF2,F
....................             delay_ms(10);     
08CB6:  MOVLW  0A
08CB8:  MOVLB  8
08CBA:  MOVWF  x6E
08CBC:  MOVLB  0
08CBE:  CALL   13A4
....................             write_eeprom(i+(((Pasos*4)*Opcion)-(Pasos*2)),0); 
08CC2:  MOVLB  5
08CC4:  MOVF   xA2,W
08CC6:  MULLW  40
08CC8:  MOVF   FF3,W
08CCA:  ADDLW  E0
08CCC:  ADDWF  x9D,W
08CCE:  MOVLB  8
08CD0:  MOVWF  x66
08CD2:  CLRF   FAA
08CD4:  MOVFF  866,FA9
08CD8:  CLRF   FA8
08CDA:  BCF    FA6.6
08CDC:  BCF    FA6.7
08CDE:  BSF    FA6.2
08CE0:  MOVF   FF2,W
08CE2:  MOVWF  00
08CE4:  BCF    FF2.7
08CE6:  MOVLB  F
08CE8:  MOVLW  55
08CEA:  MOVWF  FA7
08CEC:  MOVLW  AA
08CEE:  MOVWF  FA7
08CF0:  BSF    FA6.1
08CF2:  BTFSC  FA6.1
08CF4:  BRA    8CF2
08CF6:  BCF    FA6.2
08CF8:  MOVF   00,W
08CFA:  IORWF  FF2,F
....................             delay_ms(10);     
08CFC:  MOVLW  0A
08CFE:  MOVLB  8
08D00:  MOVWF  x6E
08D02:  MOVLB  0
08D04:  CALL   13A4
....................             write_eeprom(i+(((Pasos*4)*Opcion)-Pasos),0); 
08D08:  MOVLB  5
08D0A:  MOVF   xA2,W
08D0C:  MULLW  40
08D0E:  MOVF   FF3,W
08D10:  ADDLW  F0
08D12:  ADDWF  x9D,W
08D14:  MOVLB  8
08D16:  MOVWF  x66
08D18:  CLRF   FAA
08D1A:  MOVFF  866,FA9
08D1E:  CLRF   FA8
08D20:  BCF    FA6.6
08D22:  BCF    FA6.7
08D24:  BSF    FA6.2
08D26:  MOVF   FF2,W
08D28:  MOVWF  00
08D2A:  BCF    FF2.7
08D2C:  MOVLB  F
08D2E:  MOVLW  55
08D30:  MOVWF  FA7
08D32:  MOVLW  AA
08D34:  MOVWF  FA7
08D36:  BSF    FA6.1
08D38:  BTFSC  FA6.1
08D3A:  BRA    8D38
08D3C:  BCF    FA6.2
08D3E:  MOVF   00,W
08D40:  IORWF  FF2,F
....................          }  
08D42:  MOVLB  5
08D44:  INCF   x9D,F
08D46:  BRA    8C10
....................           
....................          delay_ms(200);Buzz_off;Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08D48:  MOVLW  C8
08D4A:  MOVLB  8
08D4C:  MOVWF  x6E
08D4E:  MOVLB  0
08D50:  CALL   13A4
08D54:  BCF    F8B.4
08D56:  BCF    F94.4
08D58:  MOVLW  01
08D5A:  MOVLB  5
08D5C:  MOVWF  x9B
08D5E:  MOVLB  8
08D60:  CLRF   x6D
08D62:  MOVLB  0
08D64:  CALL   1424
08D68:  MOVLW  01
08D6A:  MOVLB  5
08D6C:  MOVWF  xA2
08D6E:  BSF    x87.7
....................          glcd_fillScreen(OFF); 
08D70:  MOVLB  8
08D72:  CLRF   x6D
08D74:  MOVLB  0
08D76:  CALL   1424
....................          strcpy(Menus.Letra,"Programa"); 
08D7A:  MOVLW  08
08D7C:  MOVWF  FEA
08D7E:  MOVLW  46
08D80:  MOVWF  FE9
08D82:  MOVFF  FF2,866
08D86:  BCF    FF2.7
08D88:  MOVLW  00
08D8A:  CALL   0BF0
08D8E:  TBLRD*-
08D90:  TBLRD*+
08D92:  MOVF   FF5,W
08D94:  MOVWF  FEE
08D96:  IORLW  00
08D98:  BNZ   8D90
08D9A:  MOVLB  8
08D9C:  BTFSC  x66.7
08D9E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,15,0,0,2); 
08DA0:  MOVLW  08
08DA2:  MOVWF  x6E
08DA4:  MOVLW  46
08DA6:  MOVWF  x6D
08DA8:  MOVLW  0F
08DAA:  MOVWF  x6F
08DAC:  CLRF   x70
08DAE:  CLRF   x71
08DB0:  MOVLW  02
08DB2:  MOVWF  x72
08DB4:  MOVLB  0
08DB6:  CALL   1A52
....................          strcpy(Menus.Letra,"Eliminado"); 
08DBA:  MOVLW  08
08DBC:  MOVWF  FEA
08DBE:  MOVLW  46
08DC0:  MOVWF  FE9
08DC2:  MOVFF  FF2,866
08DC6:  BCF    FF2.7
08DC8:  MOVLW  00
08DCA:  CALL   0C18
08DCE:  TBLRD*-
08DD0:  TBLRD*+
08DD2:  MOVF   FF5,W
08DD4:  MOVWF  FEE
08DD6:  IORLW  00
08DD8:  BNZ   8DD0
08DDA:  MOVLB  8
08DDC:  BTFSC  x66.7
08DDE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,15,30,0,2); 
08DE0:  MOVLW  08
08DE2:  MOVWF  x6E
08DE4:  MOVLW  46
08DE6:  MOVWF  x6D
08DE8:  MOVLW  0F
08DEA:  MOVWF  x6F
08DEC:  MOVLW  1E
08DEE:  MOVWF  x70
08DF0:  CLRF   x71
08DF2:  MOVLW  02
08DF4:  MOVWF  x72
08DF6:  MOVLB  0
08DF8:  CALL   1A52
....................          Menu=1;glcd_update();delay_ms(1000); 
08DFC:  MOVLW  01
08DFE:  MOVLB  5
08E00:  MOVWF  x9B
08E02:  MOVLB  0
08E04:  CALL   147E
08E08:  MOVLW  04
08E0A:  MOVLB  8
08E0C:  MOVWF  x66
08E0E:  MOVLW  FA
08E10:  MOVWF  x6E
08E12:  MOVLB  0
08E14:  CALL   13A4
08E18:  MOVLB  8
08E1A:  DECFSZ x66,F
08E1C:  BRA    8E0E
....................          glcd_fillScreen(OFF);unidad=1; 
08E1E:  CLRF   x6D
08E20:  MOVLB  0
08E22:  CALL   1424
08E26:  MOVLW  01
08E28:  MOVLB  5
08E2A:  MOVWF  x9C
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
08E2C:  BSF    F96.2
08E2E:  BTFSC  F84.2
08E30:  BRA    8E6C
....................       { 
....................          Buzz_on;Opcion=1;Buzz_off;delay_ms(500);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08E32:  BSF    F8B.4
08E34:  BCF    F94.4
08E36:  MOVLW  01
08E38:  MOVWF  xA2
08E3A:  BCF    F8B.4
08E3C:  BCF    F94.4
08E3E:  MOVLW  02
08E40:  MOVLB  8
08E42:  MOVWF  x66
08E44:  MOVLW  FA
08E46:  MOVWF  x6E
08E48:  MOVLB  0
08E4A:  CALL   13A4
08E4E:  MOVLB  8
08E50:  DECFSZ x66,F
08E52:  BRA    8E44
08E54:  MOVLW  01
08E56:  MOVLB  5
08E58:  MOVWF  x9B
08E5A:  MOVLB  8
08E5C:  CLRF   x6D
08E5E:  MOVLB  0
08E60:  CALL   1424
08E64:  MOVLW  01
08E66:  MOVLB  5
08E68:  MOVWF  xA2
08E6A:  BSF    x87.7
....................       }  
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Cambio de Contraseña 
08E6C:  MOVF   x9B,W
08E6E:  SUBLW  08
08E70:  BTFSS  FD8.2
08E72:  BRA    9350
....................          
....................       strcpy(Menus.Letra,"Clave"); 
08E74:  MOVLW  08
08E76:  MOVWF  FEA
08E78:  MOVLW  46
08E7A:  MOVWF  FE9
08E7C:  MOVFF  FF2,866
08E80:  BCF    FF2.7
08E82:  MOVLW  00
08E84:  MOVLB  0
08E86:  CALL   07D8
08E8A:  TBLRD*-
08E8C:  TBLRD*+
08E8E:  MOVF   FF5,W
08E90:  MOVWF  FEE
08E92:  IORLW  00
08E94:  BNZ   8E8C
08E96:  MOVLB  8
08E98:  BTFSC  x66.7
08E9A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
08E9C:  MOVLW  08
08E9E:  MOVWF  x6E
08EA0:  MOVLW  46
08EA2:  MOVWF  x6D
08EA4:  MOVLW  1E
08EA6:  MOVWF  x6F
08EA8:  CLRF   x70
08EAA:  MOVLW  01
08EAC:  MOVWF  x71
08EAE:  MOVLW  02
08EB0:  MOVWF  x72
08EB2:  MOVLB  0
08EB4:  CALL   1A52
....................        
....................       if(unidad==1) 
08EB8:  MOVLB  5
08EBA:  DECFSZ x9C,W
08EBC:  BRA    8F1C
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
08EBE:  MOVFF  5EE,86F
08EC2:  MOVLW  14
08EC4:  MOVLB  8
08EC6:  MOVWF  x70
08EC8:  MOVLW  1E
08ECA:  MOVWF  x71
08ECC:  MOVLW  01
08ECE:  MOVWF  x72
08ED0:  MOVLB  0
08ED2:  CALL   1CA4
....................          displayContrasena(Contrasena[1],40,30,0); 
08ED6:  MOVFF  5EF,86F
08EDA:  MOVLW  28
08EDC:  MOVLB  8
08EDE:  MOVWF  x70
08EE0:  MOVLW  1E
08EE2:  MOVWF  x71
08EE4:  CLRF   x72
08EE6:  MOVLB  0
08EE8:  CALL   1CA4
....................          displayContrasena(Contrasena[2],60,30,0); 
08EEC:  MOVFF  5F0,86F
08EF0:  MOVLW  3C
08EF2:  MOVLB  8
08EF4:  MOVWF  x70
08EF6:  MOVLW  1E
08EF8:  MOVWF  x71
08EFA:  CLRF   x72
08EFC:  MOVLB  0
08EFE:  CALL   1CA4
....................          displayContrasena(Contrasena[3],80,30,0); 
08F02:  MOVFF  5F1,86F
08F06:  MOVLW  50
08F08:  MOVLB  8
08F0A:  MOVWF  x70
08F0C:  MOVLW  1E
08F0E:  MOVWF  x71
08F10:  CLRF   x72
08F12:  MOVLB  0
08F14:  CALL   1CA4
....................       } 
....................       else 
08F18:  BRA    9044
08F1A:  MOVLB  5
....................       { 
....................          if(unidad==2) 
08F1C:  MOVF   x9C,W
08F1E:  SUBLW  02
08F20:  BNZ   8F80
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
08F22:  MOVFF  5EE,86F
08F26:  MOVLW  14
08F28:  MOVLB  8
08F2A:  MOVWF  x70
08F2C:  MOVLW  1E
08F2E:  MOVWF  x71
08F30:  CLRF   x72
08F32:  MOVLB  0
08F34:  CALL   1CA4
....................             displayContrasena(Contrasena[1],40,30,1); 
08F38:  MOVFF  5EF,86F
08F3C:  MOVLW  28
08F3E:  MOVLB  8
08F40:  MOVWF  x70
08F42:  MOVLW  1E
08F44:  MOVWF  x71
08F46:  MOVLW  01
08F48:  MOVWF  x72
08F4A:  MOVLB  0
08F4C:  CALL   1CA4
....................             displayContrasena(Contrasena[2],60,30,0); 
08F50:  MOVFF  5F0,86F
08F54:  MOVLW  3C
08F56:  MOVLB  8
08F58:  MOVWF  x70
08F5A:  MOVLW  1E
08F5C:  MOVWF  x71
08F5E:  CLRF   x72
08F60:  MOVLB  0
08F62:  CALL   1CA4
....................             displayContrasena(Contrasena[3],80,30,0); 
08F66:  MOVFF  5F1,86F
08F6A:  MOVLW  50
08F6C:  MOVLB  8
08F6E:  MOVWF  x70
08F70:  MOVLW  1E
08F72:  MOVWF  x71
08F74:  CLRF   x72
08F76:  MOVLB  0
08F78:  CALL   1CA4
....................          } 
....................          else 
08F7C:  BRA    9044
08F7E:  MOVLB  5
....................          { 
....................             if(unidad==3) 
08F80:  MOVF   x9C,W
08F82:  SUBLW  03
08F84:  BNZ   8FE4
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
08F86:  MOVFF  5EE,86F
08F8A:  MOVLW  14
08F8C:  MOVLB  8
08F8E:  MOVWF  x70
08F90:  MOVLW  1E
08F92:  MOVWF  x71
08F94:  CLRF   x72
08F96:  MOVLB  0
08F98:  CALL   1CA4
....................                displayContrasena(Contrasena[1],40,30,0); 
08F9C:  MOVFF  5EF,86F
08FA0:  MOVLW  28
08FA2:  MOVLB  8
08FA4:  MOVWF  x70
08FA6:  MOVLW  1E
08FA8:  MOVWF  x71
08FAA:  CLRF   x72
08FAC:  MOVLB  0
08FAE:  CALL   1CA4
....................                displayContrasena(Contrasena[2],60,30,1); 
08FB2:  MOVFF  5F0,86F
08FB6:  MOVLW  3C
08FB8:  MOVLB  8
08FBA:  MOVWF  x70
08FBC:  MOVLW  1E
08FBE:  MOVWF  x71
08FC0:  MOVLW  01
08FC2:  MOVWF  x72
08FC4:  MOVLB  0
08FC6:  CALL   1CA4
....................                displayContrasena(Contrasena[3],80,30,0); 
08FCA:  MOVFF  5F1,86F
08FCE:  MOVLW  50
08FD0:  MOVLB  8
08FD2:  MOVWF  x70
08FD4:  MOVLW  1E
08FD6:  MOVWF  x71
08FD8:  CLRF   x72
08FDA:  MOVLB  0
08FDC:  CALL   1CA4
....................             } 
....................             else 
08FE0:  BRA    9044
08FE2:  MOVLB  5
....................             { 
....................                if(unidad==4) 
08FE4:  MOVF   x9C,W
08FE6:  SUBLW  04
08FE8:  BNZ   9046
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
08FEA:  MOVFF  5EE,86F
08FEE:  MOVLW  14
08FF0:  MOVLB  8
08FF2:  MOVWF  x70
08FF4:  MOVLW  1E
08FF6:  MOVWF  x71
08FF8:  CLRF   x72
08FFA:  MOVLB  0
08FFC:  CALL   1CA4
....................                   displayContrasena(Contrasena[1],40,30,0); 
09000:  MOVFF  5EF,86F
09004:  MOVLW  28
09006:  MOVLB  8
09008:  MOVWF  x70
0900A:  MOVLW  1E
0900C:  MOVWF  x71
0900E:  CLRF   x72
09010:  MOVLB  0
09012:  CALL   1CA4
....................                   displayContrasena(Contrasena[2],60,30,0); 
09016:  MOVFF  5F0,86F
0901A:  MOVLW  3C
0901C:  MOVLB  8
0901E:  MOVWF  x70
09020:  MOVLW  1E
09022:  MOVWF  x71
09024:  CLRF   x72
09026:  MOVLB  0
09028:  CALL   1CA4
....................                   displayContrasena(Contrasena[3],80,30,1); 
0902C:  MOVFF  5F1,86F
09030:  MOVLW  50
09032:  MOVLB  8
09034:  MOVWF  x70
09036:  MOVLW  1E
09038:  MOVWF  x71
0903A:  MOVLW  01
0903C:  MOVWF  x72
0903E:  MOVLB  0
09040:  CALL   1CA4
09044:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
09046:  BSF    F92.5
09048:  BTFSC  F80.5
0904A:  BRA    90C0
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
0904C:  BSF    F8B.4
0904E:  BCF    F94.4
09050:  MOVLW  0A
09052:  MOVLB  8
09054:  MOVWF  x6E
09056:  MOVLB  0
09058:  CALL   13A4
0905C:  BCF    F8B.4
0905E:  BCF    F94.4
....................          delay_ms(30); 
09060:  MOVLW  1E
09062:  MOVLB  8
09064:  MOVWF  x6E
09066:  MOVLB  0
09068:  CALL   13A4
....................          for(i=1;i<=4;i++) 
0906C:  MOVLW  01
0906E:  MOVLB  5
09070:  MOVWF  x9D
09072:  MOVF   x9D,W
09074:  SUBLW  04
09076:  BNC   90C0
....................          { 
....................             if(unidad==i) 
09078:  MOVF   x9D,W
0907A:  SUBWF  x9C,W
0907C:  BNZ   90BC
....................             { 
....................                Contrasena[i-1]++; 
0907E:  MOVLW  01
09080:  SUBWF  x9D,W
09082:  CLRF   03
09084:  ADDLW  EE
09086:  MOVWF  FE9
09088:  MOVLW  05
0908A:  ADDWFC 03,W
0908C:  MOVWF  FEA
0908E:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
09090:  MOVLW  01
09092:  SUBWF  x9D,W
09094:  CLRF   03
09096:  ADDLW  EE
09098:  MOVWF  FE9
0909A:  MOVLW  05
0909C:  ADDWFC 03,W
0909E:  MOVWF  FEA
090A0:  BTFSC  FEF.7
090A2:  BRA    90BC
090A4:  MOVF   FEF,W
090A6:  SUBLW  09
090A8:  BC    90BC
....................                { 
....................                   Contrasena[i-1]=0; 
090AA:  MOVLW  01
090AC:  SUBWF  x9D,W
090AE:  CLRF   03
090B0:  ADDLW  EE
090B2:  MOVWF  FE9
090B4:  MOVLW  05
090B6:  ADDWFC 03,W
090B8:  MOVWF  FEA
090BA:  CLRF   FEF
....................                } 
....................             } 
....................          } 
090BC:  INCF   x9D,F
090BE:  BRA    9072
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
090C0:  BSF    F96.0
090C2:  BTFSC  F84.0
090C4:  BRA    9138
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
090C6:  BSF    F8B.4
090C8:  BCF    F94.4
090CA:  MOVLW  0A
090CC:  MOVLB  8
090CE:  MOVWF  x6E
090D0:  MOVLB  0
090D2:  CALL   13A4
090D6:  BCF    F8B.4
090D8:  BCF    F94.4
....................          delay_ms(30); 
090DA:  MOVLW  1E
090DC:  MOVLB  8
090DE:  MOVWF  x6E
090E0:  MOVLB  0
090E2:  CALL   13A4
....................          for(i=1;i<=4;i++) 
090E6:  MOVLW  01
090E8:  MOVLB  5
090EA:  MOVWF  x9D
090EC:  MOVF   x9D,W
090EE:  SUBLW  04
090F0:  BNC   9138
....................          { 
....................             if(unidad==i) 
090F2:  MOVF   x9D,W
090F4:  SUBWF  x9C,W
090F6:  BNZ   9134
....................             {Contrasena[i-1]--;  
090F8:  MOVLW  01
090FA:  SUBWF  x9D,W
090FC:  CLRF   03
090FE:  ADDLW  EE
09100:  MOVWF  FE9
09102:  MOVLW  05
09104:  ADDWFC 03,W
09106:  MOVWF  FEA
09108:  DECF   FEF,F
....................             if(Contrasena[i-1]<0) 
0910A:  MOVLW  01
0910C:  SUBWF  x9D,W
0910E:  CLRF   03
09110:  ADDLW  EE
09112:  MOVWF  FE9
09114:  MOVLW  05
09116:  ADDWFC 03,W
09118:  MOVWF  FEA
0911A:  BTFSC  FEF.7
0911C:  BRA    9120
0911E:  BRA    9134
....................             {Contrasena[i-1]=9;} 
09120:  MOVLW  01
09122:  SUBWF  x9D,W
09124:  CLRF   03
09126:  ADDLW  EE
09128:  MOVWF  FE9
0912A:  MOVLW  05
0912C:  ADDWFC 03,W
0912E:  MOVWF  FEA
09130:  MOVLW  09
09132:  MOVWF  FEF
....................             } 
....................          }   
09134:  INCF   x9D,F
09136:  BRA    90EC
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
09138:  BSF    F96.1
0913A:  BTFSC  F84.1
0913C:  BRA    9162
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off;delay_ms(30);unidad++; 
0913E:  BSF    F8B.4
09140:  BCF    F94.4
09142:  MOVLW  0A
09144:  MOVLB  8
09146:  MOVWF  x6E
09148:  MOVLB  0
0914A:  CALL   13A4
0914E:  BCF    F8B.4
09150:  BCF    F94.4
09152:  MOVLW  1E
09154:  MOVLB  8
09156:  MOVWF  x6E
09158:  MOVLB  0
0915A:  CALL   13A4
0915E:  MOVLB  5
09160:  INCF   x9C,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
09162:  BSF    F96.2
09164:  BTFSC  F84.2
09166:  BRA    91A4
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
09168:  BSF    F8B.4
0916A:  BCF    F94.4
0916C:  MOVLW  0A
0916E:  MOVLB  8
09170:  MOVWF  x6E
09172:  MOVLB  0
09174:  CALL   13A4
09178:  BCF    F8B.4
0917A:  BCF    F94.4
0917C:  MOVLW  04
0917E:  MOVLB  8
09180:  MOVWF  x66
09182:  MOVLW  AF
09184:  MOVWF  x6E
09186:  MOVLB  0
09188:  CALL   13A4
0918C:  MOVLB  8
0918E:  DECFSZ x66,F
09190:  BRA    9182
09192:  MOVLW  01
09194:  MOVLB  5
09196:  MOVWF  x9B
09198:  MOVLB  8
0919A:  CLRF   x6D
0919C:  MOVLB  0
0919E:  CALL   1424
091A2:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
091A4:  MOVF   x9C,W
091A6:  SUBLW  04
091A8:  BTFSC  FD8.0
091AA:  BRA    9350
....................       {glcd_fillScreen(OFF); 
091AC:  MOVLB  8
091AE:  CLRF   x6D
091B0:  MOVLB  0
091B2:  CALL   1424
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
091B6:  MOVLB  5
091B8:  MOVF   xF2,W
091BA:  SUBWF  xEE,W
091BC:  BNZ   928E
091BE:  MOVF   xF3,W
091C0:  SUBWF  xEF,W
091C2:  BNZ   928E
091C4:  MOVF   xF4,W
091C6:  SUBWF  xF0,W
091C8:  BNZ   928E
091CA:  MOVF   xF5,W
091CC:  SUBWF  xF1,W
091CE:  BNZ   928E
....................          { 
....................             glcd_fillScreen(OFF); 
091D0:  MOVLB  8
091D2:  CLRF   x6D
091D4:  MOVLB  0
091D6:  CALL   1424
....................             strcpy(Menus.Letra,"Clave"); 
091DA:  MOVLW  08
091DC:  MOVWF  FEA
091DE:  MOVLW  46
091E0:  MOVWF  FE9
091E2:  MOVFF  FF2,866
091E6:  BCF    FF2.7
091E8:  MOVLW  00
091EA:  CALL   07D8
091EE:  TBLRD*-
091F0:  TBLRD*+
091F2:  MOVF   FF5,W
091F4:  MOVWF  FEE
091F6:  IORLW  00
091F8:  BNZ   91F0
091FA:  MOVLB  8
091FC:  BTFSC  x66.7
091FE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
09200:  MOVLW  08
09202:  MOVWF  x6E
09204:  MOVLW  46
09206:  MOVWF  x6D
09208:  MOVLW  1E
0920A:  MOVWF  x6F
0920C:  CLRF   x70
0920E:  CLRF   x71
09210:  MOVLW  02
09212:  MOVWF  x72
09214:  MOVLB  0
09216:  CALL   1A52
....................             strcpy(Menus.Letra,"Correcta"); 
0921A:  MOVLW  08
0921C:  MOVWF  FEA
0921E:  MOVLW  46
09220:  MOVWF  FE9
09222:  MOVFF  FF2,866
09226:  BCF    FF2.7
09228:  MOVLW  00
0922A:  CALL   07FC
0922E:  TBLRD*-
09230:  TBLRD*+
09232:  MOVF   FF5,W
09234:  MOVWF  FEE
09236:  IORLW  00
09238:  BNZ   9230
0923A:  MOVLB  8
0923C:  BTFSC  x66.7
0923E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
09240:  MOVLW  08
09242:  MOVWF  x6E
09244:  MOVLW  46
09246:  MOVWF  x6D
09248:  MOVLW  0F
0924A:  MOVWF  x6F
0924C:  MOVLW  1E
0924E:  MOVWF  x70
09250:  CLRF   x71
09252:  MOVLW  02
09254:  MOVWF  x72
09256:  MOVLB  0
09258:  CALL   1A52
....................             Menu=91;glcd_update();delay_ms(1000); 
0925C:  MOVLW  5B
0925E:  MOVLB  5
09260:  MOVWF  x9B
09262:  MOVLB  0
09264:  CALL   147E
09268:  MOVLW  04
0926A:  MOVLB  8
0926C:  MOVWF  x66
0926E:  MOVLW  FA
09270:  MOVWF  x6E
09272:  MOVLB  0
09274:  CALL   13A4
09278:  MOVLB  8
0927A:  DECFSZ x66,F
0927C:  BRA    926E
....................             glcd_fillScreen(OFF);unidad=1; 
0927E:  CLRF   x6D
09280:  MOVLB  0
09282:  CALL   1424
09286:  MOVLW  01
09288:  MOVLB  5
0928A:  MOVWF  x9C
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
0928C:  BRA    9350
....................          { 
....................             glcd_fillScreen(OFF); 
0928E:  MOVLB  8
09290:  CLRF   x6D
09292:  MOVLB  0
09294:  CALL   1424
....................             strcpy(Menus.Letra,"Clave"); 
09298:  MOVLW  08
0929A:  MOVWF  FEA
0929C:  MOVLW  46
0929E:  MOVWF  FE9
092A0:  MOVFF  FF2,866
092A4:  BCF    FF2.7
092A6:  MOVLW  00
092A8:  CALL   07D8
092AC:  TBLRD*-
092AE:  TBLRD*+
092B0:  MOVF   FF5,W
092B2:  MOVWF  FEE
092B4:  IORLW  00
092B6:  BNZ   92AE
092B8:  MOVLB  8
092BA:  BTFSC  x66.7
092BC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
092BE:  MOVLW  08
092C0:  MOVWF  x6E
092C2:  MOVLW  46
092C4:  MOVWF  x6D
092C6:  MOVLW  1E
092C8:  MOVWF  x6F
092CA:  CLRF   x70
092CC:  CLRF   x71
092CE:  MOVLW  02
092D0:  MOVWF  x72
092D2:  MOVLB  0
092D4:  CALL   1A52
....................             strcpy(Menus.Letra,"Incorrecta"); 
092D8:  MOVLW  08
092DA:  MOVWF  FEA
092DC:  MOVLW  46
092DE:  MOVWF  FE9
092E0:  MOVFF  FF2,866
092E4:  BCF    FF2.7
092E6:  MOVLW  00
092E8:  CALL   0824
092EC:  TBLRD*-
092EE:  TBLRD*+
092F0:  MOVF   FF5,W
092F2:  MOVWF  FEE
092F4:  IORLW  00
092F6:  BNZ   92EE
092F8:  MOVLB  8
092FA:  BTFSC  x66.7
092FC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
092FE:  MOVLW  08
09300:  MOVWF  x6E
09302:  MOVLW  46
09304:  MOVWF  x6D
09306:  CLRF   x6F
09308:  MOVLW  1E
0930A:  MOVWF  x70
0930C:  CLRF   x71
0930E:  MOVLW  02
09310:  MOVWF  x72
09312:  MOVLB  0
09314:  CALL   1A52
....................             Menu=1;glcd_update();delay_ms(1000); 
09318:  MOVLW  01
0931A:  MOVLB  5
0931C:  MOVWF  x9B
0931E:  MOVLB  0
09320:  CALL   147E
09324:  MOVLW  04
09326:  MOVLB  8
09328:  MOVWF  x66
0932A:  MOVLW  FA
0932C:  MOVWF  x6E
0932E:  MOVLB  0
09330:  CALL   13A4
09334:  MOVLB  8
09336:  DECFSZ x66,F
09338:  BRA    932A
....................             glcd_fillScreen(OFF);unidad=1; 
0933A:  CLRF   x6D
0933C:  MOVLB  0
0933E:  CALL   1424
09342:  MOVLW  01
09344:  MOVLB  5
09346:  MOVWF  x9C
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
09348:  CLRF   xEE
0934A:  CLRF   xEF
0934C:  CLRF   xF0
0934E:  CLRF   xF1
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
09350:  MOVF   x9B,W
09352:  SUBLW  5B
09354:  BTFSS  FD8.2
09356:  BRA    9792
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
09358:  MOVLW  08
0935A:  MOVWF  FEA
0935C:  MOVLW  46
0935E:  MOVWF  FE9
09360:  MOVFF  FF2,866
09364:  BCF    FF2.7
09366:  MOVLW  00
09368:  MOVLB  0
0936A:  CALL   0C40
0936E:  TBLRD*-
09370:  TBLRD*+
09372:  MOVF   FF5,W
09374:  MOVWF  FEE
09376:  IORLW  00
09378:  BNZ   9370
0937A:  MOVLB  8
0937C:  BTFSC  x66.7
0937E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
09380:  MOVLW  08
09382:  MOVWF  x6E
09384:  MOVLW  46
09386:  MOVWF  x6D
09388:  CLRF   x6F
0938A:  CLRF   x70
0938C:  MOVLW  01
0938E:  MOVWF  x71
09390:  MOVLW  02
09392:  MOVWF  x72
09394:  MOVLB  0
09396:  CALL   1A52
....................        
....................       if(unidad==1) 
0939A:  MOVLB  5
0939C:  DECFSZ x9C,W
0939E:  BRA    93FE
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
093A0:  MOVFF  5F2,86F
093A4:  MOVLW  14
093A6:  MOVLB  8
093A8:  MOVWF  x70
093AA:  MOVLW  1E
093AC:  MOVWF  x71
093AE:  MOVLW  01
093B0:  MOVWF  x72
093B2:  MOVLB  0
093B4:  CALL   1CA4
....................          displayContrasena(Password[1],40,30,0); 
093B8:  MOVFF  5F3,86F
093BC:  MOVLW  28
093BE:  MOVLB  8
093C0:  MOVWF  x70
093C2:  MOVLW  1E
093C4:  MOVWF  x71
093C6:  CLRF   x72
093C8:  MOVLB  0
093CA:  CALL   1CA4
....................          displayContrasena(Password[2],60,30,0); 
093CE:  MOVFF  5F4,86F
093D2:  MOVLW  3C
093D4:  MOVLB  8
093D6:  MOVWF  x70
093D8:  MOVLW  1E
093DA:  MOVWF  x71
093DC:  CLRF   x72
093DE:  MOVLB  0
093E0:  CALL   1CA4
....................          displayContrasena(Password[3],80,30,0); 
093E4:  MOVFF  5F5,86F
093E8:  MOVLW  50
093EA:  MOVLB  8
093EC:  MOVWF  x70
093EE:  MOVLW  1E
093F0:  MOVWF  x71
093F2:  CLRF   x72
093F4:  MOVLB  0
093F6:  CALL   1CA4
....................       } 
....................       else 
093FA:  BRA    9526
093FC:  MOVLB  5
....................       { 
....................          if(unidad==2) 
093FE:  MOVF   x9C,W
09400:  SUBLW  02
09402:  BNZ   9462
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
09404:  MOVFF  5F2,86F
09408:  MOVLW  14
0940A:  MOVLB  8
0940C:  MOVWF  x70
0940E:  MOVLW  1E
09410:  MOVWF  x71
09412:  CLRF   x72
09414:  MOVLB  0
09416:  CALL   1CA4
....................             displayContrasena(Password[1],40,30,1); 
0941A:  MOVFF  5F3,86F
0941E:  MOVLW  28
09420:  MOVLB  8
09422:  MOVWF  x70
09424:  MOVLW  1E
09426:  MOVWF  x71
09428:  MOVLW  01
0942A:  MOVWF  x72
0942C:  MOVLB  0
0942E:  CALL   1CA4
....................             displayContrasena(Password[2],60,30,0); 
09432:  MOVFF  5F4,86F
09436:  MOVLW  3C
09438:  MOVLB  8
0943A:  MOVWF  x70
0943C:  MOVLW  1E
0943E:  MOVWF  x71
09440:  CLRF   x72
09442:  MOVLB  0
09444:  CALL   1CA4
....................             displayContrasena(Password[3],80,30,0); 
09448:  MOVFF  5F5,86F
0944C:  MOVLW  50
0944E:  MOVLB  8
09450:  MOVWF  x70
09452:  MOVLW  1E
09454:  MOVWF  x71
09456:  CLRF   x72
09458:  MOVLB  0
0945A:  CALL   1CA4
....................          } 
....................          else 
0945E:  BRA    9526
09460:  MOVLB  5
....................          { 
....................             if(unidad==3) 
09462:  MOVF   x9C,W
09464:  SUBLW  03
09466:  BNZ   94C6
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
09468:  MOVFF  5F2,86F
0946C:  MOVLW  14
0946E:  MOVLB  8
09470:  MOVWF  x70
09472:  MOVLW  1E
09474:  MOVWF  x71
09476:  CLRF   x72
09478:  MOVLB  0
0947A:  CALL   1CA4
....................                displayContrasena(Password[1],40,30,0); 
0947E:  MOVFF  5F3,86F
09482:  MOVLW  28
09484:  MOVLB  8
09486:  MOVWF  x70
09488:  MOVLW  1E
0948A:  MOVWF  x71
0948C:  CLRF   x72
0948E:  MOVLB  0
09490:  CALL   1CA4
....................                displayContrasena(Password[2],60,30,1); 
09494:  MOVFF  5F4,86F
09498:  MOVLW  3C
0949A:  MOVLB  8
0949C:  MOVWF  x70
0949E:  MOVLW  1E
094A0:  MOVWF  x71
094A2:  MOVLW  01
094A4:  MOVWF  x72
094A6:  MOVLB  0
094A8:  CALL   1CA4
....................                displayContrasena(Password[3],80,30,0); 
094AC:  MOVFF  5F5,86F
094B0:  MOVLW  50
094B2:  MOVLB  8
094B4:  MOVWF  x70
094B6:  MOVLW  1E
094B8:  MOVWF  x71
094BA:  CLRF   x72
094BC:  MOVLB  0
094BE:  CALL   1CA4
....................             } 
....................             else 
094C2:  BRA    9526
094C4:  MOVLB  5
....................             { 
....................                if(unidad==4) 
094C6:  MOVF   x9C,W
094C8:  SUBLW  04
094CA:  BNZ   9528
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
094CC:  MOVFF  5F2,86F
094D0:  MOVLW  14
094D2:  MOVLB  8
094D4:  MOVWF  x70
094D6:  MOVLW  1E
094D8:  MOVWF  x71
094DA:  CLRF   x72
094DC:  MOVLB  0
094DE:  CALL   1CA4
....................                   displayContrasena(Password[1],40,30,0); 
094E2:  MOVFF  5F3,86F
094E6:  MOVLW  28
094E8:  MOVLB  8
094EA:  MOVWF  x70
094EC:  MOVLW  1E
094EE:  MOVWF  x71
094F0:  CLRF   x72
094F2:  MOVLB  0
094F4:  CALL   1CA4
....................                   displayContrasena(Password[2],60,30,0); 
094F8:  MOVFF  5F4,86F
094FC:  MOVLW  3C
094FE:  MOVLB  8
09500:  MOVWF  x70
09502:  MOVLW  1E
09504:  MOVWF  x71
09506:  CLRF   x72
09508:  MOVLB  0
0950A:  CALL   1CA4
....................                   displayContrasena(Password[3],80,30,1); 
0950E:  MOVFF  5F5,86F
09512:  MOVLW  50
09514:  MOVLB  8
09516:  MOVWF  x70
09518:  MOVLW  1E
0951A:  MOVWF  x71
0951C:  MOVLW  01
0951E:  MOVWF  x72
09520:  MOVLB  0
09522:  CALL   1CA4
09526:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
09528:  BSF    F92.5
0952A:  BTFSC  F80.5
0952C:  BRA    95A2
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
0952E:  BSF    F8B.4
09530:  BCF    F94.4
09532:  MOVLW  0A
09534:  MOVLB  8
09536:  MOVWF  x6E
09538:  MOVLB  0
0953A:  CALL   13A4
0953E:  BCF    F8B.4
09540:  BCF    F94.4
....................          delay_ms(30); 
09542:  MOVLW  1E
09544:  MOVLB  8
09546:  MOVWF  x6E
09548:  MOVLB  0
0954A:  CALL   13A4
....................          for(i=1;i<=4;i++) 
0954E:  MOVLW  01
09550:  MOVLB  5
09552:  MOVWF  x9D
09554:  MOVF   x9D,W
09556:  SUBLW  04
09558:  BNC   95A2
....................          { 
....................             if(unidad==i) 
0955A:  MOVF   x9D,W
0955C:  SUBWF  x9C,W
0955E:  BNZ   959E
....................             { 
....................                Password[i-1]++; 
09560:  MOVLW  01
09562:  SUBWF  x9D,W
09564:  CLRF   03
09566:  ADDLW  F2
09568:  MOVWF  FE9
0956A:  MOVLW  05
0956C:  ADDWFC 03,W
0956E:  MOVWF  FEA
09570:  INCF   FEF,F
....................                if(Password[i-1]>9)    
09572:  MOVLW  01
09574:  SUBWF  x9D,W
09576:  CLRF   03
09578:  ADDLW  F2
0957A:  MOVWF  FE9
0957C:  MOVLW  05
0957E:  ADDWFC 03,W
09580:  MOVWF  FEA
09582:  BTFSC  FEF.7
09584:  BRA    959E
09586:  MOVF   FEF,W
09588:  SUBLW  09
0958A:  BC    959E
....................                { 
....................                   Password[i-1]=0; 
0958C:  MOVLW  01
0958E:  SUBWF  x9D,W
09590:  CLRF   03
09592:  ADDLW  F2
09594:  MOVWF  FE9
09596:  MOVLW  05
09598:  ADDWFC 03,W
0959A:  MOVWF  FEA
0959C:  CLRF   FEF
....................                } 
....................             } 
....................          } 
0959E:  INCF   x9D,F
095A0:  BRA    9554
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
095A2:  BSF    F96.0
095A4:  BTFSC  F84.0
095A6:  BRA    961A
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off; 
095A8:  BSF    F8B.4
095AA:  BCF    F94.4
095AC:  MOVLW  0A
095AE:  MOVLB  8
095B0:  MOVWF  x6E
095B2:  MOVLB  0
095B4:  CALL   13A4
095B8:  BCF    F8B.4
095BA:  BCF    F94.4
....................          delay_ms(30); 
095BC:  MOVLW  1E
095BE:  MOVLB  8
095C0:  MOVWF  x6E
095C2:  MOVLB  0
095C4:  CALL   13A4
....................          for(i=1;i<=4;i++) 
095C8:  MOVLW  01
095CA:  MOVLB  5
095CC:  MOVWF  x9D
095CE:  MOVF   x9D,W
095D0:  SUBLW  04
095D2:  BNC   961A
....................             { 
....................                if(unidad==i) 
095D4:  MOVF   x9D,W
095D6:  SUBWF  x9C,W
095D8:  BNZ   9616
....................                { 
....................                   Password[i-1]--; 
095DA:  MOVLW  01
095DC:  SUBWF  x9D,W
095DE:  CLRF   03
095E0:  ADDLW  F2
095E2:  MOVWF  FE9
095E4:  MOVLW  05
095E6:  ADDWFC 03,W
095E8:  MOVWF  FEA
095EA:  DECF   FEF,F
....................                   if(Password[i-1]<0) 
095EC:  MOVLW  01
095EE:  SUBWF  x9D,W
095F0:  CLRF   03
095F2:  ADDLW  F2
095F4:  MOVWF  FE9
095F6:  MOVLW  05
095F8:  ADDWFC 03,W
095FA:  MOVWF  FEA
095FC:  BTFSC  FEF.7
095FE:  BRA    9602
09600:  BRA    9616
....................                   { 
....................                      Password[i-1]=9; 
09602:  MOVLW  01
09604:  SUBWF  x9D,W
09606:  CLRF   03
09608:  ADDLW  F2
0960A:  MOVWF  FE9
0960C:  MOVLW  05
0960E:  ADDWFC 03,W
09610:  MOVWF  FEA
09612:  MOVLW  09
09614:  MOVWF  FEF
....................                   } 
....................                } 
....................             }        
09616:  INCF   x9D,F
09618:  BRA    95CE
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
0961A:  BSF    F96.1
0961C:  BTFSC  F84.1
0961E:  BRA    9644
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off;delay_ms(30);unidad++; 
09620:  BSF    F8B.4
09622:  BCF    F94.4
09624:  MOVLW  0A
09626:  MOVLB  8
09628:  MOVWF  x6E
0962A:  MOVLB  0
0962C:  CALL   13A4
09630:  BCF    F8B.4
09632:  BCF    F94.4
09634:  MOVLW  1E
09636:  MOVLB  8
09638:  MOVWF  x6E
0963A:  MOVLB  0
0963C:  CALL   13A4
09640:  MOVLB  5
09642:  INCF   x9C,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
09644:  BSF    F96.2
09646:  BTFSC  F84.2
09648:  BRA    9686
....................       { 
....................          Buzz_on;delay_ms(10);Buzz_off;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
0964A:  BSF    F8B.4
0964C:  BCF    F94.4
0964E:  MOVLW  0A
09650:  MOVLB  8
09652:  MOVWF  x6E
09654:  MOVLB  0
09656:  CALL   13A4
0965A:  BCF    F8B.4
0965C:  BCF    F94.4
0965E:  MOVLW  04
09660:  MOVLB  8
09662:  MOVWF  x66
09664:  MOVLW  AF
09666:  MOVWF  x6E
09668:  MOVLB  0
0966A:  CALL   13A4
0966E:  MOVLB  8
09670:  DECFSZ x66,F
09672:  BRA    9664
09674:  MOVLW  01
09676:  MOVLB  5
09678:  MOVWF  x9B
0967A:  MOVLB  8
0967C:  CLRF   x6D
0967E:  MOVLB  0
09680:  CALL   1424
09684:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
09686:  MOVF   x9C,W
09688:  SUBLW  04
0968A:  BTFSC  FD8.0
0968C:  BRA    9792
....................       { 
....................          Opcion=1;unidad=1; 
0968E:  MOVLW  01
09690:  MOVWF  xA2
09692:  MOVWF  x9C
....................          write_eeprom(460,Password[0]); 
09694:  MOVWF  FAA
09696:  MOVLW  CC
09698:  MOVWF  FA9
0969A:  MOVFF  5F2,FA8
0969E:  BCF    FA6.6
096A0:  BCF    FA6.7
096A2:  BSF    FA6.2
096A4:  MOVF   FF2,W
096A6:  MOVWF  00
096A8:  BCF    FF2.7
096AA:  MOVLB  F
096AC:  MOVLW  55
096AE:  MOVWF  FA7
096B0:  MOVLW  AA
096B2:  MOVWF  FA7
096B4:  BSF    FA6.1
096B6:  BTFSC  FA6.1
096B8:  BRA    96B6
096BA:  BCF    FA6.2
096BC:  MOVF   00,W
096BE:  IORWF  FF2,F
....................          delay_ms(50);    
096C0:  MOVLW  32
096C2:  MOVLB  8
096C4:  MOVWF  x6E
096C6:  MOVLB  0
096C8:  CALL   13A4
....................          write_eeprom(461,Password[1]); 
096CC:  MOVLW  01
096CE:  MOVWF  FAA
096D0:  MOVLW  CD
096D2:  MOVWF  FA9
096D4:  MOVFF  5F3,FA8
096D8:  BCF    FA6.6
096DA:  BCF    FA6.7
096DC:  BSF    FA6.2
096DE:  MOVF   FF2,W
096E0:  MOVWF  00
096E2:  BCF    FF2.7
096E4:  MOVLB  F
096E6:  MOVLW  55
096E8:  MOVWF  FA7
096EA:  MOVLW  AA
096EC:  MOVWF  FA7
096EE:  BSF    FA6.1
096F0:  BTFSC  FA6.1
096F2:  BRA    96F0
096F4:  BCF    FA6.2
096F6:  MOVF   00,W
096F8:  IORWF  FF2,F
....................          delay_ms(50);    
096FA:  MOVLW  32
096FC:  MOVLB  8
096FE:  MOVWF  x6E
09700:  MOVLB  0
09702:  CALL   13A4
....................          write_eeprom(462,Password[2]); 
09706:  MOVLW  01
09708:  MOVWF  FAA
0970A:  MOVLW  CE
0970C:  MOVWF  FA9
0970E:  MOVFF  5F4,FA8
09712:  BCF    FA6.6
09714:  BCF    FA6.7
09716:  BSF    FA6.2
09718:  MOVF   FF2,W
0971A:  MOVWF  00
0971C:  BCF    FF2.7
0971E:  MOVLB  F
09720:  MOVLW  55
09722:  MOVWF  FA7
09724:  MOVLW  AA
09726:  MOVWF  FA7
09728:  BSF    FA6.1
0972A:  BTFSC  FA6.1
0972C:  BRA    972A
0972E:  BCF    FA6.2
09730:  MOVF   00,W
09732:  IORWF  FF2,F
....................          delay_ms(50);    
09734:  MOVLW  32
09736:  MOVLB  8
09738:  MOVWF  x6E
0973A:  MOVLB  0
0973C:  CALL   13A4
....................          write_eeprom(463,Password[3]); 
09740:  MOVLW  01
09742:  MOVWF  FAA
09744:  MOVLW  CF
09746:  MOVWF  FA9
09748:  MOVFF  5F5,FA8
0974C:  BCF    FA6.6
0974E:  BCF    FA6.7
09750:  BSF    FA6.2
09752:  MOVF   FF2,W
09754:  MOVWF  00
09756:  BCF    FF2.7
09758:  MOVLB  F
0975A:  MOVLW  55
0975C:  MOVWF  FA7
0975E:  MOVLW  AA
09760:  MOVWF  FA7
09762:  BSF    FA6.1
09764:  BTFSC  FA6.1
09766:  BRA    9764
09768:  BCF    FA6.2
0976A:  MOVF   00,W
0976C:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
0976E:  MOVLW  04
09770:  MOVLB  8
09772:  MOVWF  x66
09774:  MOVLW  FA
09776:  MOVWF  x6E
09778:  MOVLB  0
0977A:  CALL   13A4
0977E:  MOVLB  8
09780:  DECFSZ x66,F
09782:  BRA    9774
09784:  CLRF   x6D
09786:  MOVLB  0
09788:  CALL   1424
0978C:  MOVLW  01
0978E:  MOVLB  5
09790:  MOVWF  x9B
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu>10 && Menu<16){ //Menu Editar Programa 01, Programa 02, Programa 03, Programa 04 y Programa 05 
09792:  MOVF   x9B,W
09794:  SUBLW  0A
09796:  BTFSC  FD8.0
09798:  BRA    9A8C
0979A:  MOVF   x9B,W
0979C:  SUBLW  0F
0979E:  BTFSS  FD8.0
097A0:  BRA    9A8C
....................        
....................          if(Opcion>3) 
097A2:  MOVF   xA2,W
097A4:  SUBLW  03
097A6:  BC    97B4
....................          { 
....................             Opcion=1; 
097A8:  MOVLW  01
097AA:  MOVWF  xA2
....................             if(i<15){ 
097AC:  MOVF   x9D,W
097AE:  SUBLW  0E
097B0:  BNC   97B4
....................                i++;   
097B2:  INCF   x9D,F
....................             } 
....................          } 
....................           
....................          if(Opcion<1) 
097B4:  MOVF   xA2,F
097B6:  BNZ   97C2
....................          { 
....................             if(i>0) 
097B8:  MOVF   x9D,F
097BA:  BZ    97BE
....................                i--; 
097BC:  DECF   x9D,F
....................                 
....................             Opcion=3; 
097BE:  MOVLW  03
097C0:  MOVWF  xA2
....................          } 
....................           
....................          if(Menu==11) 
097C2:  MOVF   x9B,W
097C4:  SUBLW  0B
097C6:  BNZ   97CC
....................             Programa=1; 
097C8:  MOVLW  01
097CA:  MOVWF  x98
....................           
....................          if(Menu==12) 
097CC:  MOVF   x9B,W
097CE:  SUBLW  0C
097D0:  BNZ   97D6
....................             Programa=2; 
097D2:  MOVLW  02
097D4:  MOVWF  x98
....................              
....................          if(Menu==13) 
097D6:  MOVF   x9B,W
097D8:  SUBLW  0D
097DA:  BNZ   97E0
....................             Programa=3; 
097DC:  MOVLW  03
097DE:  MOVWF  x98
....................              
....................          if(Menu==14) 
097E0:  MOVF   x9B,W
097E2:  SUBLW  0E
097E4:  BNZ   97EA
....................             Programa=4; 
097E6:  MOVLW  04
097E8:  MOVWF  x98
....................              
....................          if(Menu==15) 
097EA:  MOVF   x9B,W
097EC:  SUBLW  0F
097EE:  BNZ   97F4
....................             Programa=5;    
097F0:  MOVLW  05
097F2:  MOVWF  x98
....................           
....................          MuestraSegmento(Opcion,i,Programa); 
097F4:  MOVFF  5A2,866
097F8:  MOVFF  59D,867
097FC:  MOVFF  598,868
09800:  MOVLB  0
09802:  GOTO   4836
....................           
....................          if(RIGHT && LEFT){ 
09806:  BSF    F96.1
09808:  BTFSC  F84.1
0980A:  BRA    9A3A
0980C:  BSF    F96.2
0980E:  BTFSC  F84.2
09810:  BRA    9A3A
....................             Buzz_on;Menu=5;Opcion=1;glcd_fillscreen(OFF);delay_ms(500);Buzz_off; 
09812:  BSF    F8B.4
09814:  BCF    F94.4
09816:  MOVLW  05
09818:  MOVLB  5
0981A:  MOVWF  x9B
0981C:  MOVLW  01
0981E:  MOVWF  xA2
09820:  MOVLB  8
09822:  CLRF   x6D
09824:  MOVLB  0
09826:  CALL   1424
0982A:  MOVLW  02
0982C:  MOVLB  8
0982E:  MOVWF  x66
09830:  MOVLW  FA
09832:  MOVWF  x6E
09834:  MOVLB  0
09836:  CALL   13A4
0983A:  MOVLB  8
0983C:  DECFSZ x66,F
0983E:  BRA    9830
09840:  BCF    F8B.4
09842:  BCF    F94.4
....................              
....................             for(i=0;i<Pasos;i++){ 
09844:  MOVLB  5
09846:  CLRF   x9D
09848:  MOVF   x9D,W
0984A:  SUBLW  0F
0984C:  BTFSS  FD8.0
0984E:  BRA    9A38
....................                delay_ms(10);     
09850:  MOVLW  0A
09852:  MOVLB  8
09854:  MOVWF  x6E
09856:  MOVLB  0
09858:  CALL   13A4
....................                write_eeprom((i*2)+((Pasos*4)*(Programa-1)),make8(Temperatura1[i+((Programa-1)*Pasos)],0)); 
0985C:  BCF    FD8.0
0985E:  MOVLB  5
09860:  RLCF   x9D,W
09862:  MOVLB  8
09864:  MOVWF  x66
09866:  MOVLW  01
09868:  MOVLB  5
0986A:  SUBWF  x98,W
0986C:  MULLW  40
0986E:  MOVF   FF3,W
09870:  MOVLB  8
09872:  ADDWF  x66,F
09874:  MOVLW  01
09876:  MOVLB  5
09878:  SUBWF  x98,W
0987A:  MULLW  10
0987C:  MOVF   FF3,W
0987E:  ADDWF  x9D,W
09880:  MOVWF  00
09882:  BCF    FD8.0
09884:  RLCF   00,F
09886:  MOVF   00,W
09888:  CLRF   03
0988A:  ADDLW  66
0988C:  MOVWF  FE9
0988E:  MOVLW  06
09890:  ADDWFC 03,W
09892:  MOVWF  FEA
09894:  MOVFF  FEC,868
09898:  MOVF   FED,F
0989A:  MOVFF  FEF,867
0989E:  MOVFF  867,869
098A2:  CLRF   FAA
098A4:  MOVFF  866,FA9
098A8:  MOVFF  869,FA8
098AC:  BCF    FA6.6
098AE:  BCF    FA6.7
098B0:  BSF    FA6.2
098B2:  MOVF   FF2,W
098B4:  MOVWF  00
098B6:  BCF    FF2.7
098B8:  MOVLB  F
098BA:  MOVLW  55
098BC:  MOVWF  FA7
098BE:  MOVLW  AA
098C0:  MOVWF  FA7
098C2:  BSF    FA6.1
098C4:  BTFSC  FA6.1
098C6:  BRA    98C4
098C8:  BCF    FA6.2
098CA:  MOVF   00,W
098CC:  IORWF  FF2,F
....................                delay_ms(10);     
098CE:  MOVLW  0A
098D0:  MOVLB  8
098D2:  MOVWF  x6E
098D4:  MOVLB  0
098D6:  CALL   13A4
....................                write_eeprom((i*2)+1+((Pasos*4)*(Programa-1)),make8(Temperatura1[i+((Programa-1)*Pasos)],1)); 
098DA:  BCF    FD8.0
098DC:  MOVLB  5
098DE:  RLCF   x9D,W
098E0:  ADDLW  01
098E2:  MOVLB  8
098E4:  MOVWF  x66
098E6:  MOVLW  01
098E8:  MOVLB  5
098EA:  SUBWF  x98,W
098EC:  MULLW  40
098EE:  MOVF   FF3,W
098F0:  MOVLB  8
098F2:  ADDWF  x66,F
098F4:  MOVLW  01
098F6:  MOVLB  5
098F8:  SUBWF  x98,W
098FA:  MULLW  10
098FC:  MOVF   FF3,W
098FE:  ADDWF  x9D,W
09900:  MOVWF  00
09902:  BCF    FD8.0
09904:  RLCF   00,F
09906:  MOVF   00,W
09908:  CLRF   03
0990A:  ADDLW  66
0990C:  MOVWF  FE9
0990E:  MOVLW  06
09910:  ADDWFC 03,W
09912:  MOVWF  FEA
09914:  MOVFF  FEC,868
09918:  MOVF   FED,F
0991A:  MOVFF  FEF,867
0991E:  MOVFF  868,869
09922:  CLRF   FAA
09924:  MOVFF  866,FA9
09928:  MOVFF  869,FA8
0992C:  BCF    FA6.6
0992E:  BCF    FA6.7
09930:  BSF    FA6.2
09932:  MOVF   FF2,W
09934:  MOVWF  00
09936:  BCF    FF2.7
09938:  MOVLB  F
0993A:  MOVLW  55
0993C:  MOVWF  FA7
0993E:  MOVLW  AA
09940:  MOVWF  FA7
09942:  BSF    FA6.1
09944:  BTFSC  FA6.1
09946:  BRA    9944
09948:  BCF    FA6.2
0994A:  MOVF   00,W
0994C:  IORWF  FF2,F
....................                delay_ms(10);     
0994E:  MOVLW  0A
09950:  MOVLB  8
09952:  MOVWF  x6E
09954:  MOVLB  0
09956:  CALL   13A4
....................                write_eeprom(i+(((Pasos*4)*Programa)-((Pasos*2))),Horas1[i+((Programa-1)*Pasos)]); 
0995A:  MOVLB  5
0995C:  MOVF   x98,W
0995E:  MULLW  40
09960:  MOVF   FF3,W
09962:  ADDLW  E0
09964:  ADDWF  x9D,W
09966:  MOVLB  8
09968:  MOVWF  x66
0996A:  MOVLW  01
0996C:  MOVLB  5
0996E:  SUBWF  x98,W
09970:  MULLW  10
09972:  MOVF   FF3,W
09974:  ADDWF  x9D,W
09976:  MOVWF  00
09978:  BCF    FD8.0
0997A:  RLCF   00,F
0997C:  MOVF   00,W
0997E:  CLRF   03
09980:  ADDLW  06
09982:  MOVWF  FE9
09984:  MOVLW  07
09986:  ADDWFC 03,W
09988:  MOVWF  FEA
0998A:  MOVFF  FEC,868
0998E:  MOVF   FED,F
09990:  MOVFF  FEF,867
09994:  CLRF   FAA
09996:  MOVFF  866,FA9
0999A:  MOVFF  867,FA8
0999E:  BCF    FA6.6
099A0:  BCF    FA6.7
099A2:  BSF    FA6.2
099A4:  MOVF   FF2,W
099A6:  MOVWF  00
099A8:  BCF    FF2.7
099AA:  MOVLB  F
099AC:  MOVLW  55
099AE:  MOVWF  FA7
099B0:  MOVLW  AA
099B2:  MOVWF  FA7
099B4:  BSF    FA6.1
099B6:  BTFSC  FA6.1
099B8:  BRA    99B6
099BA:  BCF    FA6.2
099BC:  MOVF   00,W
099BE:  IORWF  FF2,F
....................                delay_ms(10);     
099C0:  MOVLW  0A
099C2:  MOVLB  8
099C4:  MOVWF  x6E
099C6:  MOVLB  0
099C8:  CALL   13A4
....................                write_eeprom(i+(((Pasos*4)*Programa)-Pasos),Minutos1[i+((Programa-1)*Pasos)]); 
099CC:  MOVLB  5
099CE:  MOVF   x98,W
099D0:  MULLW  40
099D2:  MOVF   FF3,W
099D4:  ADDLW  F0
099D6:  ADDWF  x9D,W
099D8:  MOVLB  8
099DA:  MOVWF  x66
099DC:  MOVLW  01
099DE:  MOVLB  5
099E0:  SUBWF  x98,W
099E2:  MULLW  10
099E4:  MOVF   FF3,W
099E6:  ADDWF  x9D,W
099E8:  MOVWF  00
099EA:  BCF    FD8.0
099EC:  RLCF   00,F
099EE:  MOVF   00,W
099F0:  CLRF   03
099F2:  ADDLW  A6
099F4:  MOVWF  FE9
099F6:  MOVLW  07
099F8:  ADDWFC 03,W
099FA:  MOVWF  FEA
099FC:  MOVFF  FEC,868
09A00:  MOVF   FED,F
09A02:  MOVFF  FEF,867
09A06:  CLRF   FAA
09A08:  MOVFF  866,FA9
09A0C:  MOVFF  867,FA8
09A10:  BCF    FA6.6
09A12:  BCF    FA6.7
09A14:  BSF    FA6.2
09A16:  MOVF   FF2,W
09A18:  MOVWF  00
09A1A:  BCF    FF2.7
09A1C:  MOVLB  F
09A1E:  MOVLW  55
09A20:  MOVWF  FA7
09A22:  MOVLW  AA
09A24:  MOVWF  FA7
09A26:  BSF    FA6.1
09A28:  BTFSC  FA6.1
09A2A:  BRA    9A28
09A2C:  BCF    FA6.2
09A2E:  MOVF   00,W
09A30:  IORWF  FF2,F
....................             }  
09A32:  MOVLB  5
09A34:  INCF   x9D,F
09A36:  BRA    9848
09A38:  MOVLB  0
....................          } 
....................           
....................          if(RIGHT)//Si oprime SET 
09A3A:  BSF    F96.1
09A3C:  BTFSC  F84.1
09A3E:  BRA    9A62
....................          {  
....................             Buzz_on;delay_ms(50);Opcion++;glcd_fillscreen(OFF);Buzz_off; 
09A40:  BSF    F8B.4
09A42:  BCF    F94.4
09A44:  MOVLW  32
09A46:  MOVLB  8
09A48:  MOVWF  x6E
09A4A:  MOVLB  0
09A4C:  CALL   13A4
09A50:  MOVLB  5
09A52:  INCF   xA2,F
09A54:  MOVLB  8
09A56:  CLRF   x6D
09A58:  MOVLB  0
09A5A:  CALL   1424
09A5E:  BCF    F8B.4
09A60:  BCF    F94.4
....................          } 
....................           
....................          if(LEFT){ 
09A62:  BSF    F96.2
09A64:  BTFSC  F84.2
09A66:  BRA    9A8A
....................             Buzz_on;delay_ms(50);Opcion--;glcd_fillscreen(OFF);Buzz_off; 
09A68:  BSF    F8B.4
09A6A:  BCF    F94.4
09A6C:  MOVLW  32
09A6E:  MOVLB  8
09A70:  MOVWF  x6E
09A72:  MOVLB  0
09A74:  CALL   13A4
09A78:  MOVLB  5
09A7A:  DECF   xA2,F
09A7C:  MOVLB  8
09A7E:  CLRF   x6D
09A80:  MOVLB  0
09A82:  CALL   1424
09A86:  BCF    F8B.4
09A88:  BCF    F94.4
09A8A:  MOVLB  5
....................          } 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
09A8C:  MOVF   x9B,W
09A8E:  SUBLW  14
09A90:  BTFSS  FD8.2
09A92:  GOTO   ACBC
....................        
....................       // Muestra imagen de fondo en Display GLCD       
....................       glcd_imagen(5); 
09A96:  MOVLW  05
09A98:  MOVLB  8
09A9A:  MOVWF  x66
09A9C:  MOVLB  0
09A9E:  GOTO   54F0
....................       //flag_display=0; 
....................  
....................       if(UP && DOWN)//Si oprime hacia abajo 
09AA2:  BSF    F92.5
09AA4:  BTFSC  F80.5
09AA6:  BRA    9ACA
09AA8:  BSF    F96.0
09AAA:  BTFSC  F84.0
09AAC:  BRA    9ACA
....................       { 
....................          glcd_init(ON);delay_ms(200);flag_display=!flag_display;          
09AAE:  MOVLW  01
09AB0:  MOVLB  8
09AB2:  MOVWF  x66
09AB4:  MOVLB  0
09AB6:  CALL   1536
09ABA:  MOVLW  C8
09ABC:  MOVLB  8
09ABE:  MOVWF  x6E
09AC0:  MOVLB  0
09AC2:  CALL   13A4
09AC6:  MOVLB  5
09AC8:  BTG    x95.5
....................       } 
....................  
....................       if(Temperatura>1250 || Temperatura<0) 
09ACA:  MOVLB  8
09ACC:  CLRF   x69
09ACE:  MOVLW  40
09AD0:  MOVWF  x68
09AD2:  MOVLW  1C
09AD4:  MOVWF  x67
09AD6:  MOVLW  89
09AD8:  MOVWF  x66
09ADA:  MOVFF  62D,86D
09ADE:  MOVFF  62C,86C
09AE2:  MOVFF  62B,86B
09AE6:  MOVFF  62A,86A
09AEA:  MOVLB  0
09AEC:  CALL   1D90
09AF0:  BC    9B14
09AF2:  MOVFF  62D,869
09AF6:  MOVFF  62C,868
09AFA:  MOVFF  62B,867
09AFE:  MOVFF  62A,866
09B02:  MOVLB  8
09B04:  CLRF   x6D
09B06:  CLRF   x6C
09B08:  CLRF   x6B
09B0A:  CLRF   x6A
09B0C:  MOVLB  0
09B0E:  CALL   1D90
09B12:  BNC   9BB8
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
09B14:  MOVLB  8
09B16:  CLRF   x7E
09B18:  MOVLW  37
09B1A:  MOVWF  x7F
09B1C:  MOVLW  7F
09B1E:  MOVWF  x80
09B20:  MOVLW  3F
09B22:  MOVWF  x81
09B24:  MOVLW  01
09B26:  MOVWF  x82
09B28:  CLRF   x83
09B2A:  MOVLB  0
09B2C:  CALL   17D8
....................          strcpy(Menus.Letra,"Status:Sensor Descon."); 
09B30:  MOVLW  08
09B32:  MOVWF  FEA
09B34:  MOVLW  46
09B36:  MOVWF  FE9
09B38:  MOVFF  FF2,866
09B3C:  BCF    FF2.7
09B3E:  MOVLW  00
09B40:  CALL   0C6A
09B44:  TBLRD*-
09B46:  TBLRD*+
09B48:  MOVF   FF5,W
09B4A:  MOVWF  FEE
09B4C:  IORLW  00
09B4E:  BNZ   9B46
09B50:  MOVLB  8
09B52:  BTFSC  x66.7
09B54:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
09B56:  MOVLW  08
09B58:  MOVWF  x6E
09B5A:  MOVLW  46
09B5C:  MOVWF  x6D
09B5E:  CLRF   x6F
09B60:  MOVLW  37
09B62:  MOVWF  x70
09B64:  MOVLW  02
09B66:  MOVWF  x71
09B68:  MOVLW  01
09B6A:  MOVWF  x72
09B6C:  MOVLB  0
09B6E:  CALL   1A52
....................          tiempo_esterilizacion=0; 
09B72:  MOVLB  5
09B74:  CLRF   xA3
....................          Resistencia_off; 
09B76:  BCF    F8B.0
09B78:  BCF    F94.0
....................          Tpulso=0.0; 
09B7A:  MOVLB  6
09B7C:  CLRF   x01
09B7E:  CLRF   x00
09B80:  MOVLB  5
09B82:  CLRF   xFF
09B84:  CLRF   xFE
....................          flag_tiempocalentamiento=0; 
09B86:  BCF    x95.4
....................          Buzz_on; 
09B88:  BSF    F8B.4
09B8A:  BCF    F94.4
....................          delay_ms(500); 
09B8C:  MOVLW  02
09B8E:  MOVLB  8
09B90:  MOVWF  x66
09B92:  MOVLW  FA
09B94:  MOVWF  x6E
09B96:  MOVLB  0
09B98:  CALL   13A4
09B9C:  MOVLB  8
09B9E:  DECFSZ x66,F
09BA0:  BRA    9B92
....................          Buzz_off; 
09BA2:  BCF    F8B.4
09BA4:  BCF    F94.4
....................          delay_ms(250); 
09BA6:  MOVLW  FA
09BA8:  MOVWF  x6E
09BAA:  MOVLB  0
09BAC:  CALL   13A4
....................          Control=0; 
09BB0:  MOVLB  5
09BB2:  CLRF   x99
....................       } 
....................       else 
09BB4:  BRA    A24C
09BB6:  MOVLB  0
....................       { 
....................           
....................          if(Pausa==0 && !DOOR && !TERM) 
09BB8:  MOVLB  5
09BBA:  MOVF   x9F,F
09BBC:  BTFSS  FD8.2
09BBE:  BRA    9F2A
09BC0:  BSF    F92.4
09BC2:  BTFSC  F80.4
09BC4:  BRA    9F2A
09BC6:  BSF    F92.3
09BC8:  BTFSC  F80.3
09BCA:  BRA    9F2A
....................          { 
....................             Control=1; 
09BCC:  MOVLW  01
09BCE:  MOVWF  x99
....................              
....................             if(Temperatura>Setpoint+AlTem && AlTem>0){ 
09BD0:  MOVFF  5BB,873
09BD4:  MOVFF  5BA,872
09BD8:  MOVLB  0
09BDA:  CALL   1D5A
09BDE:  BCF    FD8.1
09BE0:  MOVFF  639,875
09BE4:  MOVFF  638,874
09BE8:  MOVFF  637,873
09BEC:  MOVFF  636,872
09BF0:  MOVFF  03,879
09BF4:  MOVFF  02,878
09BF8:  MOVFF  01,877
09BFC:  MOVFF  00,876
09C00:  CALL   1F68
09C04:  MOVFF  03,869
09C08:  MOVFF  02,868
09C0C:  MOVFF  01,867
09C10:  MOVFF  00,866
09C14:  MOVFF  62D,86D
09C18:  MOVFF  62C,86C
09C1C:  MOVFF  62B,86B
09C20:  MOVFF  62A,86A
09C24:  CALL   1D90
09C28:  BNC   9C42
09C2A:  MOVLB  5
09C2C:  MOVF   xBA,F
09C2E:  BNZ   9C3A
09C30:  MOVF   xBB,F
09C32:  BTFSS  FD8.2
09C34:  BRA    9C3A
09C36:  MOVLB  0
09C38:  BRA    9C42
....................                Alarma=5; 
09C3A:  MOVLW  05
09C3C:  MOVWF  xA5
....................             }else{   
09C3E:  BRA    9F2A
09C40:  MOVLB  0
....................                Alarma=10; 
09C42:  MOVLW  0A
09C44:  MOVLB  5
09C46:  MOVWF  xA5
....................                if((Temperatura>=Setpoint-10) && (Temperatura<Setpoint+50)) 
09C48:  BSF    FD8.1
09C4A:  MOVFF  639,875
09C4E:  MOVFF  638,874
09C52:  MOVFF  637,873
09C56:  MOVFF  636,872
09C5A:  MOVLB  8
09C5C:  CLRF   x79
09C5E:  CLRF   x78
09C60:  MOVLW  20
09C62:  MOVWF  x77
09C64:  MOVLW  82
09C66:  MOVWF  x76
09C68:  MOVLB  0
09C6A:  CALL   1F68
09C6E:  MOVFF  03,869
09C72:  MOVFF  02,868
09C76:  MOVFF  01,867
09C7A:  MOVFF  00,866
09C7E:  MOVFF  62D,86D
09C82:  MOVFF  62C,86C
09C86:  MOVFF  62B,86B
09C8A:  MOVFF  62A,86A
09C8E:  CALL   1D90
09C92:  BC    9C98
09C94:  BTFSS  FD8.2
09C96:  BRA    9E0C
09C98:  BCF    FD8.1
09C9A:  MOVFF  639,875
09C9E:  MOVFF  638,874
09CA2:  MOVFF  637,873
09CA6:  MOVFF  636,872
09CAA:  MOVLB  8
09CAC:  CLRF   x79
09CAE:  CLRF   x78
09CB0:  MOVLW  48
09CB2:  MOVWF  x77
09CB4:  MOVLW  84
09CB6:  MOVWF  x76
09CB8:  MOVLB  0
09CBA:  CALL   1F68
09CBE:  MOVFF  62D,869
09CC2:  MOVFF  62C,868
09CC6:  MOVFF  62B,867
09CCA:  MOVFF  62A,866
09CCE:  MOVFF  03,86D
09CD2:  MOVFF  02,86C
09CD6:  MOVFF  01,86B
09CDA:  MOVFF  00,86A
09CDE:  CALL   1D90
09CE2:  BTFSS  FD8.0
09CE4:  BRA    9E0C
....................                { 
....................                   if(Pendiente!=0){ 
09CE6:  MOVFF  631,869
09CEA:  MOVFF  630,868
09CEE:  MOVFF  62F,867
09CF2:  MOVFF  62E,866
09CF6:  MOVLB  8
09CF8:  CLRF   x6D
09CFA:  CLRF   x6C
09CFC:  CLRF   x6B
09CFE:  CLRF   x6A
09D00:  MOVLB  0
09D02:  CALL   1D90
09D06:  BZ    9D70
....................                      tiempo_esterilizacion=1; 
09D08:  MOVLW  01
09D0A:  MOVLB  5
09D0C:  MOVWF  xA3
....................                      if(flag_display==0){ 
09D0E:  BTFSC  x95.5
09D10:  BRA    9D72
....................                         glcd_rect(0, 55, 127, 63, YES, OFF); 
09D12:  MOVLB  8
09D14:  CLRF   x7E
09D16:  MOVLW  37
09D18:  MOVWF  x7F
09D1A:  MOVLW  7F
09D1C:  MOVWF  x80
09D1E:  MOVLW  3F
09D20:  MOVWF  x81
09D22:  MOVLW  01
09D24:  MOVWF  x82
09D26:  CLRF   x83
09D28:  MOVLB  0
09D2A:  CALL   17D8
....................                         strcpy(Menus.Letra,"Status:Controlando"); 
09D2E:  MOVLW  08
09D30:  MOVWF  FEA
09D32:  MOVLW  46
09D34:  MOVWF  FE9
09D36:  MOVFF  FF2,866
09D3A:  BCF    FF2.7
09D3C:  MOVLW  00
09D3E:  CALL   0C9E
09D42:  TBLRD*-
09D44:  TBLRD*+
09D46:  MOVF   FF5,W
09D48:  MOVWF  FEE
09D4A:  IORLW  00
09D4C:  BNZ   9D44
09D4E:  MOVLB  8
09D50:  BTFSC  x66.7
09D52:  BSF    FF2.7
....................                         displayMenu(Menus.Letra,0,55,2,1); 
09D54:  MOVLW  08
09D56:  MOVWF  x6E
09D58:  MOVLW  46
09D5A:  MOVWF  x6D
09D5C:  CLRF   x6F
09D5E:  MOVLW  37
09D60:  MOVWF  x70
09D62:  MOVLW  02
09D64:  MOVWF  x71
09D66:  MOVLW  01
09D68:  MOVWF  x72
09D6A:  MOVLB  0
09D6C:  CALL   1A52
09D70:  MOVLB  5
....................                      } 
....................                   } 
....................                    
....................                   if(Pendiente==0){ 
09D72:  MOVFF  631,869
09D76:  MOVFF  630,868
09D7A:  MOVFF  62F,867
09D7E:  MOVFF  62E,866
09D82:  MOVLB  8
09D84:  CLRF   x6D
09D86:  CLRF   x6C
09D88:  CLRF   x6B
09D8A:  CLRF   x6A
09D8C:  MOVLB  0
09D8E:  CALL   1D90
09D92:  BNZ   9E00
....................                      if(flag_display==0){ 
09D94:  MOVLB  5
09D96:  BTFSC  x95.5
09D98:  BRA    9DFA
....................                         glcd_rect(0, 55, 127, 63, YES, OFF); 
09D9A:  MOVLB  8
09D9C:  CLRF   x7E
09D9E:  MOVLW  37
09DA0:  MOVWF  x7F
09DA2:  MOVLW  7F
09DA4:  MOVWF  x80
09DA6:  MOVLW  3F
09DA8:  MOVWF  x81
09DAA:  MOVLW  01
09DAC:  MOVWF  x82
09DAE:  CLRF   x83
09DB0:  MOVLB  0
09DB2:  CALL   17D8
....................                         strcpy(Menus.Letra,"Status:Meseta  "); 
09DB6:  MOVLW  08
09DB8:  MOVWF  FEA
09DBA:  MOVLW  46
09DBC:  MOVWF  FE9
09DBE:  MOVFF  FF2,866
09DC2:  BCF    FF2.7
09DC4:  MOVLW  00
09DC6:  CALL   0CD0
09DCA:  TBLRD*-
09DCC:  TBLRD*+
09DCE:  MOVF   FF5,W
09DD0:  MOVWF  FEE
09DD2:  IORLW  00
09DD4:  BNZ   9DCC
09DD6:  MOVLB  8
09DD8:  BTFSC  x66.7
09DDA:  BSF    FF2.7
....................                         displayMenu(Menus.Letra,0,55,2,1); 
09DDC:  MOVLW  08
09DDE:  MOVWF  x6E
09DE0:  MOVLW  46
09DE2:  MOVWF  x6D
09DE4:  CLRF   x6F
09DE6:  MOVLW  37
09DE8:  MOVWF  x70
09DEA:  MOVLW  02
09DEC:  MOVWF  x71
09DEE:  MOVLW  01
09DF0:  MOVWF  x72
09DF2:  MOVLB  0
09DF4:  CALL   1A52
09DF8:  MOVLB  5
....................                      } 
....................                      tiempo_esterilizacion=2; 
09DFA:  MOVLW  02
09DFC:  MOVWF  xA3
09DFE:  MOVLB  0
....................                   } 
....................                   Controla(); 
09E00:  CALL   58B8
....................                   flag_tiempocalentamiento=0; 
09E04:  MOVLB  5
09E06:  BCF    x95.4
....................                } 
....................                else 
09E08:  BRA    9F2A
09E0A:  MOVLB  0
....................                { 
....................                   if(Pendiente!=0){ 
09E0C:  MOVFF  631,869
09E10:  MOVFF  630,868
09E14:  MOVFF  62F,867
09E18:  MOVFF  62E,866
09E1C:  MOVLB  8
09E1E:  CLRF   x6D
09E20:  CLRF   x6C
09E22:  CLRF   x6B
09E24:  CLRF   x6A
09E26:  MOVLB  0
09E28:  CALL   1D90
09E2C:  BZ    9E96
....................                      tiempo_esterilizacion=1; 
09E2E:  MOVLW  01
09E30:  MOVLB  5
09E32:  MOVWF  xA3
....................                      if(flag_display==0){ 
09E34:  BTFSC  x95.5
09E36:  BRA    9E98
....................                         glcd_rect(0, 55, 127, 63, YES, OFF); 
09E38:  MOVLB  8
09E3A:  CLRF   x7E
09E3C:  MOVLW  37
09E3E:  MOVWF  x7F
09E40:  MOVLW  7F
09E42:  MOVWF  x80
09E44:  MOVLW  3F
09E46:  MOVWF  x81
09E48:  MOVLW  01
09E4A:  MOVWF  x82
09E4C:  CLRF   x83
09E4E:  MOVLB  0
09E50:  CALL   17D8
....................                         strcpy(Menus.Letra,"Status:Rampa  "); 
09E54:  MOVLW  08
09E56:  MOVWF  FEA
09E58:  MOVLW  46
09E5A:  MOVWF  FE9
09E5C:  MOVFF  FF2,866
09E60:  BCF    FF2.7
09E62:  MOVLW  00
09E64:  CALL   0CFE
09E68:  TBLRD*-
09E6A:  TBLRD*+
09E6C:  MOVF   FF5,W
09E6E:  MOVWF  FEE
09E70:  IORLW  00
09E72:  BNZ   9E6A
09E74:  MOVLB  8
09E76:  BTFSC  x66.7
09E78:  BSF    FF2.7
....................                         displayMenu(Menus.Letra,0,55,2,1); 
09E7A:  MOVLW  08
09E7C:  MOVWF  x6E
09E7E:  MOVLW  46
09E80:  MOVWF  x6D
09E82:  CLRF   x6F
09E84:  MOVLW  37
09E86:  MOVWF  x70
09E88:  MOVLW  02
09E8A:  MOVWF  x71
09E8C:  MOVLW  01
09E8E:  MOVWF  x72
09E90:  MOVLB  0
09E92:  CALL   1A52
09E96:  MOVLB  5
....................                      } 
....................                   } 
....................                    
....................                   if(Pendiente==0){ 
09E98:  MOVFF  631,869
09E9C:  MOVFF  630,868
09EA0:  MOVFF  62F,867
09EA4:  MOVFF  62E,866
09EA8:  MOVLB  8
09EAA:  CLRF   x6D
09EAC:  CLRF   x6C
09EAE:  CLRF   x6B
09EB0:  CLRF   x6A
09EB2:  MOVLB  0
09EB4:  CALL   1D90
09EB8:  BNZ   9F24
....................                      if(flag_display==0){ 
09EBA:  MOVLB  5
09EBC:  BTFSC  x95.5
09EBE:  BRA    9F20
....................                         glcd_rect(0, 55, 127, 63, YES, OFF); 
09EC0:  MOVLB  8
09EC2:  CLRF   x7E
09EC4:  MOVLW  37
09EC6:  MOVWF  x7F
09EC8:  MOVLW  7F
09ECA:  MOVWF  x80
09ECC:  MOVLW  3F
09ECE:  MOVWF  x81
09ED0:  MOVLW  01
09ED2:  MOVWF  x82
09ED4:  CLRF   x83
09ED6:  MOVLB  0
09ED8:  CALL   17D8
....................                         strcpy(Menus.Letra,"Status:Calentando"); 
09EDC:  MOVLW  08
09EDE:  MOVWF  FEA
09EE0:  MOVLW  46
09EE2:  MOVWF  FE9
09EE4:  MOVFF  FF2,866
09EE8:  BCF    FF2.7
09EEA:  MOVLW  00
09EEC:  CALL   0D2C
09EF0:  TBLRD*-
09EF2:  TBLRD*+
09EF4:  MOVF   FF5,W
09EF6:  MOVWF  FEE
09EF8:  IORLW  00
09EFA:  BNZ   9EF2
09EFC:  MOVLB  8
09EFE:  BTFSC  x66.7
09F00:  BSF    FF2.7
....................                         displayMenu(Menus.Letra,0,55,2,1); 
09F02:  MOVLW  08
09F04:  MOVWF  x6E
09F06:  MOVLW  46
09F08:  MOVWF  x6D
09F0A:  CLRF   x6F
09F0C:  MOVLW  37
09F0E:  MOVWF  x70
09F10:  MOVLW  02
09F12:  MOVWF  x71
09F14:  MOVLW  01
09F16:  MOVWF  x72
09F18:  MOVLB  0
09F1A:  CALL   1A52
09F1E:  MOVLB  5
....................                      } 
....................                      tiempo_esterilizacion=0; 
09F20:  CLRF   xA3
09F22:  MOVLB  0
....................                   } 
....................                   Controla(); 
09F24:  CALL   58B8
09F28:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................           
....................          if(Pausa==1 && !DOOR) 
09F2A:  DECFSZ x9F,W
09F2C:  BRA    9F90
09F2E:  BSF    F92.4
09F30:  BTFSC  F80.4
09F32:  BRA    9F90
....................          { 
....................             flag_tiempocalentamiento=0; 
09F34:  BCF    x95.4
....................             strcpy(Menus.Letra,"Status:Pausado"); 
09F36:  MOVLW  08
09F38:  MOVWF  FEA
09F3A:  MOVLW  46
09F3C:  MOVWF  FE9
09F3E:  MOVFF  FF2,866
09F42:  BCF    FF2.7
09F44:  MOVLW  00
09F46:  MOVLB  0
09F48:  CALL   0D5C
09F4C:  TBLRD*-
09F4E:  TBLRD*+
09F50:  MOVF   FF5,W
09F52:  MOVWF  FEE
09F54:  IORLW  00
09F56:  BNZ   9F4E
09F58:  MOVLB  8
09F5A:  BTFSC  x66.7
09F5C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
09F5E:  MOVLW  08
09F60:  MOVWF  x6E
09F62:  MOVLW  46
09F64:  MOVWF  x6D
09F66:  CLRF   x6F
09F68:  MOVLW  37
09F6A:  MOVWF  x70
09F6C:  MOVLW  02
09F6E:  MOVWF  x71
09F70:  MOVLW  01
09F72:  MOVWF  x72
09F74:  MOVLB  0
09F76:  CALL   1A52
....................             tiempo_esterilizacion=0; 
09F7A:  MOVLB  5
09F7C:  CLRF   xA3
....................             Control=0; 
09F7E:  CLRF   x99
....................             Resistencia_off; 
09F80:  BCF    F8B.0
09F82:  BCF    F94.0
....................             Tpulso=0.0; 
09F84:  MOVLB  6
09F86:  CLRF   x01
09F88:  CLRF   x00
09F8A:  MOVLB  5
09F8C:  CLRF   xFF
09F8E:  CLRF   xFE
....................          } 
....................           
....................          if(DOOR) 
09F90:  BSF    F92.4
09F92:  BTFSS  F80.4
09F94:  BRA    A0C6
....................          { 
....................             Control=0;             
09F96:  CLRF   x99
....................             flag_tiempocalentamiento=0; 
09F98:  BCF    x95.4
....................             tiempo_esterilizacion=0; 
09F9A:  CLRF   xA3
....................             Resistencia_off; 
09F9C:  BCF    F8B.0
09F9E:  BCF    F94.0
....................             Tpulso=0.0; 
09FA0:  MOVLB  6
09FA2:  CLRF   x01
09FA4:  CLRF   x00
09FA6:  MOVLB  5
09FA8:  CLRF   xFF
09FAA:  CLRF   xFE
....................             if(flag_clear2==0) 
09FAC:  BTFSC  x95.2
09FAE:  BRA    A04C
....................             { 
....................                //Ganancia=read_eeprom(90); 
....................                //Ganancia=Setpoint*(Ganancia/Coeficiente); 
....................                //glcd_fillScreen(OFF); 
....................                Ganancia=GananciaIn*(Setpoint/Coeficiente); 
09FB0:  MOVFF  639,86D
09FB4:  MOVFF  638,86C
09FB8:  MOVFF  637,86B
09FBC:  MOVFF  636,86A
09FC0:  MOVFF  621,871
09FC4:  MOVFF  620,870
09FC8:  MOVFF  61F,86F
09FCC:  MOVFF  61E,86E
09FD0:  MOVLB  0
09FD2:  CALL   1E0A
09FD6:  MOVFF  615,88A
09FDA:  MOVFF  614,889
09FDE:  MOVFF  613,888
09FE2:  MOVFF  612,887
09FE6:  MOVFF  03,88E
09FEA:  MOVFF  02,88D
09FEE:  MOVFF  01,88C
09FF2:  MOVFF  00,88B
09FF6:  CALL   32D2
09FFA:  MOVFF  03,619
09FFE:  MOVFF  02,618
0A002:  MOVFF  01,617
0A006:  MOVFF  00,616
....................                glcd_fillScreen(OFF); 
0A00A:  MOVLB  8
0A00C:  CLRF   x6D
0A00E:  MOVLB  0
0A010:  CALL   1424
....................                glcd_init(ON); 
0A014:  MOVLW  01
0A016:  MOVLB  8
0A018:  MOVWF  x66
0A01A:  MOVLB  0
0A01C:  CALL   1536
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0A020:  MOVLB  8
0A022:  CLRF   x7E
0A024:  MOVLW  37
0A026:  MOVWF  x7F
0A028:  MOVLW  7F
0A02A:  MOVWF  x80
0A02C:  MOVLW  3F
0A02E:  MOVWF  x81
0A030:  MOVLW  01
0A032:  MOVWF  x82
0A034:  CLRF   x83
0A036:  MOVLB  0
0A038:  CALL   17D8
....................                Tpulso=0.0; 
0A03C:  MOVLB  6
0A03E:  CLRF   x01
0A040:  CLRF   x00
0A042:  MOVLB  5
0A044:  CLRF   xFF
0A046:  CLRF   xFE
....................                flag_clear2=1; 
0A048:  BSF    x95.2
....................                flag_ganancia=0; 
0A04A:  CLRF   x8E
....................             } 
....................             strcpy(Menus.Letra,"Status:Puerta Abierta"); 
0A04C:  MOVLW  08
0A04E:  MOVWF  FEA
0A050:  MOVLW  46
0A052:  MOVWF  FE9
0A054:  MOVFF  FF2,866
0A058:  BCF    FF2.7
0A05A:  MOVLW  00
0A05C:  MOVLB  0
0A05E:  CALL   0D8A
0A062:  TBLRD*-
0A064:  TBLRD*+
0A066:  MOVF   FF5,W
0A068:  MOVWF  FEE
0A06A:  IORLW  00
0A06C:  BNZ   A064
0A06E:  MOVLB  8
0A070:  BTFSC  x66.7
0A072:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
0A074:  MOVLW  08
0A076:  MOVWF  x6E
0A078:  MOVLW  46
0A07A:  MOVWF  x6D
0A07C:  CLRF   x6F
0A07E:  MOVLW  37
0A080:  MOVWF  x70
0A082:  MOVLW  02
0A084:  MOVWF  x71
0A086:  MOVLW  01
0A088:  MOVWF  x72
0A08A:  MOVLB  0
0A08C:  CALL   1A52
....................             Buzz_on; 
0A090:  BSF    F8B.4
0A092:  BCF    F94.4
....................             delay_ms(1000); 
0A094:  MOVLW  04
0A096:  MOVLB  8
0A098:  MOVWF  x66
0A09A:  MOVLW  FA
0A09C:  MOVWF  x6E
0A09E:  MOVLB  0
0A0A0:  CALL   13A4
0A0A4:  MOVLB  8
0A0A6:  DECFSZ x66,F
0A0A8:  BRA    A09A
....................             Buzz_off; 
0A0AA:  BCF    F8B.4
0A0AC:  BCF    F94.4
....................             delay_ms(1000); 
0A0AE:  MOVLW  04
0A0B0:  MOVWF  x66
0A0B2:  MOVLW  FA
0A0B4:  MOVWF  x6E
0A0B6:  MOVLB  0
0A0B8:  CALL   13A4
0A0BC:  MOVLB  8
0A0BE:  DECFSZ x66,F
0A0C0:  BRA    A0B2
....................          } 
....................          else 
0A0C2:  BRA    A24E
0A0C4:  MOVLB  5
....................          { 
....................             if(flag_clear2==1){ 
0A0C6:  BTFSS  x95.2
0A0C8:  BRA    A0F4
....................                glcd_fillScreen(OFF); 
0A0CA:  MOVLB  8
0A0CC:  CLRF   x6D
0A0CE:  MOVLB  0
0A0D0:  CALL   1424
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0A0D4:  MOVLB  8
0A0D6:  CLRF   x7E
0A0D8:  MOVLW  37
0A0DA:  MOVWF  x7F
0A0DC:  MOVLW  7F
0A0DE:  MOVWF  x80
0A0E0:  MOVLW  3F
0A0E2:  MOVWF  x81
0A0E4:  MOVLW  01
0A0E6:  MOVWF  x82
0A0E8:  CLRF   x83
0A0EA:  MOVLB  0
0A0EC:  CALL   17D8
....................                flag_clear2=0; 
0A0F0:  MOVLB  5
0A0F2:  BCF    x95.2
....................             } 
....................             if(TERM || Alarma==5){ 
0A0F4:  BSF    F92.3
0A0F6:  BTFSC  F80.3
0A0F8:  BRA    A102
0A0FA:  MOVF   xA5,W
0A0FC:  SUBLW  05
0A0FE:  BTFSS  FD8.2
0A100:  BRA    A222
....................             Control=0;             
0A102:  CLRF   x99
....................             flag_tiempocalentamiento=0; 
0A104:  BCF    x95.4
....................             tiempo_esterilizacion=0; 
0A106:  CLRF   xA3
....................             Resistencia_off; 
0A108:  BCF    F8B.0
0A10A:  BCF    F94.0
....................             Tpulso=0.0; 
0A10C:  MOVLB  6
0A10E:  CLRF   x01
0A110:  CLRF   x00
0A112:  MOVLB  5
0A114:  CLRF   xFF
0A116:  CLRF   xFE
....................             if(flag_clear3==0){ 
0A118:  BTFSC  x95.3
0A11A:  BRA    A150
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0A11C:  MOVLB  8
0A11E:  CLRF   x7E
0A120:  MOVLW  37
0A122:  MOVWF  x7F
0A124:  MOVLW  7F
0A126:  MOVWF  x80
0A128:  MOVLW  3F
0A12A:  MOVWF  x81
0A12C:  MOVLW  01
0A12E:  MOVWF  x82
0A130:  CLRF   x83
0A132:  MOVLB  0
0A134:  CALL   17D8
....................                tiempo_esterilizacion=0; 
0A138:  MOVLB  5
0A13A:  CLRF   xA3
....................                Resistencia_off; 
0A13C:  BCF    F8B.0
0A13E:  BCF    F94.0
....................                Tpulso=0.0; 
0A140:  MOVLB  6
0A142:  CLRF   x01
0A144:  CLRF   x00
0A146:  MOVLB  5
0A148:  CLRF   xFF
0A14A:  CLRF   xFE
....................                flag_clear3=1; 
0A14C:  BSF    x95.3
....................                flag_ganancia=0; 
0A14E:  CLRF   x8E
....................             } 
....................             strcpy(Menus.Letra,"Status:Sobre Temp"); 
0A150:  MOVLW  08
0A152:  MOVWF  FEA
0A154:  MOVLW  46
0A156:  MOVWF  FE9
0A158:  MOVFF  FF2,866
0A15C:  BCF    FF2.7
0A15E:  MOVLW  00
0A160:  MOVLB  0
0A162:  CALL   0DBE
0A166:  TBLRD*-
0A168:  TBLRD*+
0A16A:  MOVF   FF5,W
0A16C:  MOVWF  FEE
0A16E:  IORLW  00
0A170:  BNZ   A168
0A172:  MOVLB  8
0A174:  BTFSC  x66.7
0A176:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1);  
0A178:  MOVLW  08
0A17A:  MOVWF  x6E
0A17C:  MOVLW  46
0A17E:  MOVWF  x6D
0A180:  CLRF   x6F
0A182:  MOVLW  37
0A184:  MOVWF  x70
0A186:  MOVLW  02
0A188:  MOVWF  x71
0A18A:  MOVLW  01
0A18C:  MOVWF  x72
0A18E:  MOVLB  0
0A190:  CALL   1A52
....................             Ganancia=gananciaIn*(Setpoint/150); 
0A194:  MOVFF  639,86D
0A198:  MOVFF  638,86C
0A19C:  MOVFF  637,86B
0A1A0:  MOVFF  636,86A
0A1A4:  MOVLB  8
0A1A6:  CLRF   x71
0A1A8:  CLRF   x70
0A1AA:  MOVLW  16
0A1AC:  MOVWF  x6F
0A1AE:  MOVLW  86
0A1B0:  MOVWF  x6E
0A1B2:  MOVLB  0
0A1B4:  CALL   1E0A
0A1B8:  MOVFF  615,88A
0A1BC:  MOVFF  614,889
0A1C0:  MOVFF  613,888
0A1C4:  MOVFF  612,887
0A1C8:  MOVFF  03,88E
0A1CC:  MOVFF  02,88D
0A1D0:  MOVFF  01,88C
0A1D4:  MOVFF  00,88B
0A1D8:  CALL   32D2
0A1DC:  MOVFF  03,619
0A1E0:  MOVFF  02,618
0A1E4:  MOVFF  01,617
0A1E8:  MOVFF  00,616
....................             Buzz_on; 
0A1EC:  BSF    F8B.4
0A1EE:  BCF    F94.4
....................             delay_ms(500); 
0A1F0:  MOVLW  02
0A1F2:  MOVLB  8
0A1F4:  MOVWF  x66
0A1F6:  MOVLW  FA
0A1F8:  MOVWF  x6E
0A1FA:  MOVLB  0
0A1FC:  CALL   13A4
0A200:  MOVLB  8
0A202:  DECFSZ x66,F
0A204:  BRA    A1F6
....................             Buzz_off; 
0A206:  BCF    F8B.4
0A208:  BCF    F94.4
....................             delay_ms(500); 
0A20A:  MOVLW  02
0A20C:  MOVWF  x66
0A20E:  MOVLW  FA
0A210:  MOVWF  x6E
0A212:  MOVLB  0
0A214:  CALL   13A4
0A218:  MOVLB  8
0A21A:  DECFSZ x66,F
0A21C:  BRA    A20E
....................          }else{ 
0A21E:  BRA    A24E
0A220:  MOVLB  5
....................             Alarma=0; 
0A222:  CLRF   xA5
....................             if(flag_clear3==1){ 
0A224:  BTFSS  x95.3
0A226:  BRA    A248
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0A228:  MOVLB  8
0A22A:  CLRF   x7E
0A22C:  MOVLW  37
0A22E:  MOVWF  x7F
0A230:  MOVLW  7F
0A232:  MOVWF  x80
0A234:  MOVLW  3F
0A236:  MOVWF  x81
0A238:  MOVLW  01
0A23A:  MOVWF  x82
0A23C:  CLRF   x83
0A23E:  MOVLB  0
0A240:  CALL   17D8
....................                flag_clear3=0; 
0A244:  MOVLB  5
0A246:  BCF    x95.3
....................             } 
....................             Buzz_off; 
0A248:  BCF    F8B.4
0A24A:  BCF    F94.4
0A24C:  MOVLB  8
....................          }  
....................          } 
....................       } 
....................       /* 
....................       if(UP)//Si oprime hacia arriba 
....................       { 
....................          glcd_fillscreen(OFF); 
....................                glcd_line(27,0,27,55,ON); 
....................                glcd_line(27,55,127,55,ON); 
....................                 
....................                strcpy(Menus.Letra,"Grafica Rampas");displayMenu(Menus.Letra,0,0,1,1);  
....................                 
....................                glcd_line(24,55-10,27,55-10,ON); 
....................                strcpy(Menus.Letra,"300");displayMenu(Menus.Letra,0,55-15,2,1);  
....................                glcd_line(24,55-20,27,55-20,ON); 
....................                strcpy(Menus.Letra,"600");displayMenu(Menus.Letra,0,55-25,2,1);  
....................                glcd_line(24,55-30,27,55-30,ON); 
....................                strcpy(Menus.Letra,"900");displayMenu(Menus.Letra,0,55-35,2,1); 
....................                glcd_line(24,55-40,27,55-40,ON); 
....................                strcpy(Menus.Letra,"1200");displayMenu(Menus.Letra,0,55-45,2,1);  
....................                 
....................                glcd_line(27+0,55-TempeInicial/30,27+(100/Pasos),55-Temperatura1[ProgramaSeleccionado*Pasos]/30,ON); 
....................                for(i=1;i<Pasos;i++){ 
....................                   glcd_line(27+(i+1*(100/Pasos)),55-Temperatura1[(ProgramaSeleccionado*Pasos)+i]/30,27+(i+2*(100/Pasos)),55-Temperatura1[(ProgramaSeleccionado*Pasos)+i+1]/30,ON); 
....................                } 
....................                glcd_update(); 
....................                for(i=0;i<80;i++) 
....................                { 
....................                   Temperatura=Leer_Sensor(MediaMovil); 
....................                } 
....................             delay_ms(3000); 
....................             glcd_fillscreen(OFF); 
....................       } 
....................       */       
....................       if(DOWN)//Si oprime hacia abajo 
0A24E:  BSF    F96.0
0A250:  BTFSC  F84.0
0A252:  BRA    A254
....................       {   
....................       } 
....................        
....................       if(RIGHT)//Si oprime SET 
0A254:  BSF    F96.1
0A256:  BTFSC  F84.1
0A258:  BRA    A2A8
....................       {   
....................          if(Pausa!=2) 
0A25A:  MOVLB  5
0A25C:  MOVF   x9F,W
0A25E:  SUBLW  02
0A260:  BZ    A2A8
....................          { 
....................             if(Pausa==0) 
0A262:  MOVF   x9F,F
0A264:  BNZ   A27A
....................             { 
....................                delay_ms(200);Pausa=1; 
0A266:  MOVLW  C8
0A268:  MOVLB  8
0A26A:  MOVWF  x6E
0A26C:  MOVLB  0
0A26E:  CALL   13A4
0A272:  MOVLW  01
0A274:  MOVLB  5
0A276:  MOVWF  x9F
....................             } 
....................             else 
0A278:  BRA    A28A
....................             { 
....................                delay_ms(200);Pausa=0; 
0A27A:  MOVLW  C8
0A27C:  MOVLB  8
0A27E:  MOVWF  x6E
0A280:  MOVLB  0
0A282:  CALL   13A4
0A286:  MOVLB  5
0A288:  CLRF   x9F
....................             } 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
0A28A:  MOVLB  8
0A28C:  CLRF   x7E
0A28E:  MOVLW  37
0A290:  MOVWF  x7F
0A292:  MOVLW  7F
0A294:  MOVWF  x80
0A296:  MOVLW  3F
0A298:  MOVWF  x81
0A29A:  MOVLW  01
0A29C:  MOVWF  x82
0A29E:  CLRF   x83
0A2A0:  MOVLB  0
0A2A2:  CALL   17D8
0A2A6:  MOVLB  5
....................          } 
....................       } 
....................        
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
0A2A8:  MOVLB  5
0A2AA:  BTFSS  x95.0
0A2AC:  BRA    A944
....................       {                  
....................           
....................          Lectura=0; 
0A2AE:  BCF    x95.0
....................          Potencia=(100.0/Tciclo)*Tpulso; 
0A2B0:  MOVLB  8
0A2B2:  CLRF   x6D
0A2B4:  CLRF   x6C
0A2B6:  MOVLW  48
0A2B8:  MOVWF  x6B
0A2BA:  MOVLW  85
0A2BC:  MOVWF  x6A
0A2BE:  MOVFF  5FD,871
0A2C2:  MOVFF  5FC,870
0A2C6:  MOVFF  5FB,86F
0A2CA:  MOVFF  5FA,86E
0A2CE:  MOVLB  0
0A2D0:  CALL   1E0A
0A2D4:  MOVFF  00,866
0A2D8:  MOVFF  01,867
0A2DC:  MOVFF  02,868
0A2E0:  MOVFF  03,869
0A2E4:  MOVFF  03,88A
0A2E8:  MOVFF  02,889
0A2EC:  MOVFF  01,888
0A2F0:  MOVFF  00,887
0A2F4:  MOVFF  601,88E
0A2F8:  MOVFF  600,88D
0A2FC:  MOVFF  5FF,88C
0A300:  MOVFF  5FE,88B
0A304:  CALL   32D2
0A308:  MOVFF  03,5E1
0A30C:  MOVFF  02,5E0
0A310:  MOVFF  01,5DF
0A314:  MOVFF  00,5DE
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(Temperatura>1250 || Temperatura<0) 
0A318:  MOVLB  8
0A31A:  CLRF   x69
0A31C:  MOVLW  40
0A31E:  MOVWF  x68
0A320:  MOVLW  1C
0A322:  MOVWF  x67
0A324:  MOVLW  89
0A326:  MOVWF  x66
0A328:  MOVFF  62D,86D
0A32C:  MOVFF  62C,86C
0A330:  MOVFF  62B,86B
0A334:  MOVFF  62A,86A
0A338:  MOVLB  0
0A33A:  CALL   1D90
0A33E:  BC    A362
0A340:  MOVFF  62D,869
0A344:  MOVFF  62C,868
0A348:  MOVFF  62B,867
0A34C:  MOVFF  62A,866
0A350:  MOVLB  8
0A352:  CLRF   x6D
0A354:  CLRF   x6C
0A356:  CLRF   x6B
0A358:  CLRF   x6A
0A35A:  MOVLB  0
0A35C:  CALL   1D90
0A360:  BNC   A3CC
....................          { 
....................             glcd_rect(15, 29, 69, 45, YES, OFF); 
0A362:  MOVLW  0F
0A364:  MOVLB  8
0A366:  MOVWF  x7E
0A368:  MOVLW  1D
0A36A:  MOVWF  x7F
0A36C:  MOVLW  45
0A36E:  MOVWF  x80
0A370:  MOVLW  2D
0A372:  MOVWF  x81
0A374:  MOVLW  01
0A376:  MOVWF  x82
0A378:  CLRF   x83
0A37A:  MOVLB  0
0A37C:  CALL   17D8
....................             strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
0A380:  MOVLW  08
0A382:  MOVWF  FEA
0A384:  MOVLW  46
0A386:  MOVWF  FE9
0A388:  MOVFF  FF2,866
0A38C:  BCF    FF2.7
0A38E:  MOVLW  00
0A390:  CALL   0DEE
0A394:  TBLRD*-
0A396:  TBLRD*+
0A398:  MOVF   FF5,W
0A39A:  MOVWF  FEE
0A39C:  IORLW  00
0A39E:  BNZ   A396
0A3A0:  MOVLB  8
0A3A2:  BTFSC  x66.7
0A3A4:  BSF    FF2.7
0A3A6:  MOVLW  08
0A3A8:  MOVWF  x6E
0A3AA:  MOVLW  46
0A3AC:  MOVWF  x6D
0A3AE:  MOVLW  0F
0A3B0:  MOVWF  x6F
0A3B2:  MOVLW  1D
0A3B4:  MOVWF  x70
0A3B6:  MOVLW  02
0A3B8:  MOVWF  x71
0A3BA:  MOVWF  x72
0A3BC:  MOVLB  0
0A3BE:  CALL   1A52
....................             Desconectado=1; 
0A3C2:  MOVLB  5
0A3C4:  BSF    x87.2
....................             Control=0; 
0A3C6:  CLRF   x99
....................          } 
....................          else 
0A3C8:  BRA    A452
0A3CA:  MOVLB  0
....................          { 
....................             if(Desconectado==1) 
0A3CC:  MOVLB  5
0A3CE:  BTFSS  x87.2
0A3D0:  BRA    A416
....................             { 
....................                Desconectado=0; 
0A3D2:  BCF    x87.2
....................                delay_ms(2000); 
0A3D4:  MOVLW  08
0A3D6:  MOVLB  8
0A3D8:  MOVWF  x66
0A3DA:  MOVLW  FA
0A3DC:  MOVWF  x6E
0A3DE:  MOVLB  0
0A3E0:  CALL   13A4
0A3E4:  MOVLB  8
0A3E6:  DECFSZ x66,F
0A3E8:  BRA    A3DA
....................                for(i=0;i<80;i++) 
0A3EA:  MOVLB  5
0A3EC:  CLRF   x9D
0A3EE:  MOVF   x9D,W
0A3F0:  SUBLW  4F
0A3F2:  BNC   A416
....................                { 
....................                   Temperatura=Leer_Sensor(80); 
0A3F4:  MOVLW  50
0A3F6:  MOVLB  8
0A3F8:  MOVWF  x66
0A3FA:  MOVLB  0
0A3FC:  CALL   33C8
0A400:  MOVFF  03,62D
0A404:  MOVFF  02,62C
0A408:  MOVFF  01,62B
0A40C:  MOVFF  00,62A
....................                } 
0A410:  MOVLB  5
0A412:  INCF   x9D,F
0A414:  BRA    A3EE
....................             } 
....................              
....................                displayT(Temperatura,15,29,2); 
0A416:  MOVFF  62D,875
0A41A:  MOVFF  62C,874
0A41E:  MOVFF  62B,873
0A422:  MOVFF  62A,872
0A426:  MOVLB  0
0A428:  CALL   587C
0A42C:  MOVFF  02,867
0A430:  MOVFF  01,866
0A434:  MOVFF  02,869
0A438:  MOVFF  01,868
0A43C:  MOVLW  0F
0A43E:  MOVLB  8
0A440:  MOVWF  x6A
0A442:  MOVLW  1D
0A444:  MOVWF  x6B
0A446:  MOVLW  02
0A448:  MOVWF  x6C
0A44A:  MOVLB  0
0A44C:  GOTO   68AE
0A450:  MOVLB  5
....................              
....................             //displayTemperatura(Temperatura,15,29,0,2); 
....................          } 
....................  
....................          //displayT(Temperatura,15,29,2); 
....................             Dibuja=0; 
0A452:  BCF    x95.7
....................             glcd_circle(74,30,2,NO,ON); 
0A454:  MOVLW  4A
0A456:  MOVLB  8
0A458:  MOVWF  x7E
0A45A:  MOVLW  1E
0A45C:  MOVWF  x7F
0A45E:  MOVLW  02
0A460:  MOVWF  x80
0A462:  CLRF   x81
0A464:  MOVLW  01
0A466:  MOVWF  x82
0A468:  MOVLB  0
0A46A:  CALL   4214
....................             strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
0A46E:  MOVLW  08
0A470:  MOVWF  FEA
0A472:  MOVLW  46
0A474:  MOVWF  FE9
0A476:  MOVFF  FF2,866
0A47A:  BCF    FF2.7
0A47C:  MOVLW  00
0A47E:  CALL   06D2
0A482:  TBLRD*-
0A484:  TBLRD*+
0A486:  MOVF   FF5,W
0A488:  MOVWF  FEE
0A48A:  IORLW  00
0A48C:  BNZ   A484
0A48E:  MOVLB  8
0A490:  BTFSC  x66.7
0A492:  BSF    FF2.7
0A494:  MOVLW  08
0A496:  MOVWF  x6E
0A498:  MOVLW  46
0A49A:  MOVWF  x6D
0A49C:  MOVLW  4B
0A49E:  MOVWF  x6F
0A4A0:  MOVLW  1E
0A4A2:  MOVWF  x70
0A4A4:  MOVLW  02
0A4A6:  MOVWF  x71
0A4A8:  MOVWF  x72
0A4AA:  MOVLB  0
0A4AC:  CALL   1A52
....................              
....................             displayTemperatura(Setpoint,30,45,0,1); 
0A4B0:  MOVFF  639,875
0A4B4:  MOVFF  638,874
0A4B8:  MOVFF  637,873
0A4BC:  MOVFF  636,872
0A4C0:  CALL   587C
0A4C4:  MOVFF  02,867
0A4C8:  MOVFF  01,866
0A4CC:  MOVFF  02,86C
0A4D0:  MOVFF  01,86B
0A4D4:  MOVLW  1E
0A4D6:  MOVLB  8
0A4D8:  MOVWF  x6D
0A4DA:  MOVLW  2D
0A4DC:  MOVWF  x6E
0A4DE:  CLRF   x6F
0A4E0:  MOVLW  01
0A4E2:  MOVWF  x70
0A4E4:  MOVLB  0
0A4E6:  CALL   405C
....................             glcd_circle(60,47,1,NO,ON); 
0A4EA:  MOVLW  3C
0A4EC:  MOVLB  8
0A4EE:  MOVWF  x7E
0A4F0:  MOVLW  2F
0A4F2:  MOVWF  x7F
0A4F4:  MOVLW  01
0A4F6:  MOVWF  x80
0A4F8:  CLRF   x81
0A4FA:  MOVWF  x82
0A4FC:  MOVLB  0
0A4FE:  CALL   4214
....................             strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,63,45,2,1); 
0A502:  MOVLW  08
0A504:  MOVWF  FEA
0A506:  MOVLW  46
0A508:  MOVWF  FE9
0A50A:  MOVFF  FF2,866
0A50E:  BCF    FF2.7
0A510:  MOVLW  00
0A512:  CALL   06D2
0A516:  TBLRD*-
0A518:  TBLRD*+
0A51A:  MOVF   FF5,W
0A51C:  MOVWF  FEE
0A51E:  IORLW  00
0A520:  BNZ   A518
0A522:  MOVLB  8
0A524:  BTFSC  x66.7
0A526:  BSF    FF2.7
0A528:  MOVLW  08
0A52A:  MOVWF  x6E
0A52C:  MOVLW  46
0A52E:  MOVWF  x6D
0A530:  MOVLW  3F
0A532:  MOVWF  x6F
0A534:  MOVLW  2D
0A536:  MOVWF  x70
0A538:  MOVLW  02
0A53A:  MOVWF  x71
0A53C:  MOVLW  01
0A53E:  MOVWF  x72
0A540:  MOVLB  0
0A542:  CALL   1A52
....................             strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
0A546:  MOVLW  08
0A548:  MOVWF  FEA
0A54A:  MOVLW  46
0A54C:  MOVWF  FE9
0A54E:  MOVFF  FF2,866
0A552:  BCF    FF2.7
0A554:  MOVLW  00
0A556:  CALL   0E12
0A55A:  TBLRD*-
0A55C:  TBLRD*+
0A55E:  MOVF   FF5,W
0A560:  MOVWF  FEE
0A562:  IORLW  00
0A564:  BNZ   A55C
0A566:  MOVLB  8
0A568:  BTFSC  x66.7
0A56A:  BSF    FF2.7
0A56C:  MOVLW  08
0A56E:  MOVWF  x6E
0A570:  MOVLW  46
0A572:  MOVWF  x6D
0A574:  CLRF   x6F
0A576:  MOVLW  2D
0A578:  MOVWF  x70
0A57A:  MOVLW  02
0A57C:  MOVWF  x71
0A57E:  MOVLW  01
0A580:  MOVWF  x72
0A582:  MOVLB  0
0A584:  CALL   1A52
....................              
....................             strcpy(Menus.Letra,"Power:");displayMenu(Menus.Letra,91,32,2,1); 
0A588:  MOVLW  08
0A58A:  MOVWF  FEA
0A58C:  MOVLW  46
0A58E:  MOVWF  FE9
0A590:  MOVFF  FF2,866
0A594:  BCF    FF2.7
0A596:  MOVLW  00
0A598:  CALL   0E36
0A59C:  TBLRD*-
0A59E:  TBLRD*+
0A5A0:  MOVF   FF5,W
0A5A2:  MOVWF  FEE
0A5A4:  IORLW  00
0A5A6:  BNZ   A59E
0A5A8:  MOVLB  8
0A5AA:  BTFSC  x66.7
0A5AC:  BSF    FF2.7
0A5AE:  MOVLW  08
0A5B0:  MOVWF  x6E
0A5B2:  MOVLW  46
0A5B4:  MOVWF  x6D
0A5B6:  MOVLW  5B
0A5B8:  MOVWF  x6F
0A5BA:  MOVLW  20
0A5BC:  MOVWF  x70
0A5BE:  MOVLW  02
0A5C0:  MOVWF  x71
0A5C2:  MOVLW  01
0A5C4:  MOVWF  x72
0A5C6:  MOVLB  0
0A5C8:  CALL   1A52
....................             displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
0A5CC:  MOVFF  5E1,875
0A5D0:  MOVFF  5E0,874
0A5D4:  MOVFF  5DF,873
0A5D8:  MOVFF  5DE,872
0A5DC:  CALL   587C
0A5E0:  MOVFF  01,866
0A5E4:  MOVFF  01,869
0A5E8:  MOVLW  61
0A5EA:  MOVLB  8
0A5EC:  MOVWF  x6A
0A5EE:  MOVLW  2A
0A5F0:  MOVWF  x6B
0A5F2:  MOVLW  03
0A5F4:  MOVWF  x6C
0A5F6:  MOVLW  01
0A5F8:  MOVWF  x6D
0A5FA:  MOVLB  0
0A5FC:  CALL   3C6E
0A600:  MOVLW  08
0A602:  MOVWF  FEA
0A604:  MOVLW  46
0A606:  MOVWF  FE9
0A608:  MOVFF  FF2,866
0A60C:  BCF    FF2.7
0A60E:  MOVLW  00
0A610:  CALL   0E5C
0A614:  TBLRD*-
0A616:  TBLRD*+
0A618:  MOVF   FF5,W
0A61A:  MOVWF  FEE
0A61C:  IORLW  00
0A61E:  BNZ   A616
0A620:  MOVLB  8
0A622:  BTFSC  x66.7
0A624:  BSF    FF2.7
0A626:  MOVLW  08
0A628:  MOVWF  x6E
0A62A:  MOVLW  46
0A62C:  MOVWF  x6D
0A62E:  MOVLW  73
0A630:  MOVWF  x6F
0A632:  MOVLW  2A
0A634:  MOVWF  x70
0A636:  MOVLW  02
0A638:  MOVWF  x71
0A63A:  MOVLW  01
0A63C:  MOVWF  x72
0A63E:  MOVLB  0
0A640:  CALL   1A52
....................             strcpy(Menus.Letra,"Segm.");displayMenu(Menus.Letra,95,10,2,1); 
0A644:  MOVLW  08
0A646:  MOVWF  FEA
0A648:  MOVLW  46
0A64A:  MOVWF  FE9
0A64C:  MOVFF  FF2,866
0A650:  BCF    FF2.7
0A652:  MOVLW  00
0A654:  CALL   0E7C
0A658:  TBLRD*-
0A65A:  TBLRD*+
0A65C:  MOVF   FF5,W
0A65E:  MOVWF  FEE
0A660:  IORLW  00
0A662:  BNZ   A65A
0A664:  MOVLB  8
0A666:  BTFSC  x66.7
0A668:  BSF    FF2.7
0A66A:  MOVLW  08
0A66C:  MOVWF  x6E
0A66E:  MOVLW  46
0A670:  MOVWF  x6D
0A672:  MOVLW  5F
0A674:  MOVWF  x6F
0A676:  MOVLW  0A
0A678:  MOVWF  x70
0A67A:  MOVLW  02
0A67C:  MOVWF  x71
0A67E:  MOVLW  01
0A680:  MOVWF  x72
0A682:  MOVLB  0
0A684:  CALL   1A52
....................             displayTiempo(Segmento,96,20,3,1); 
0A688:  MOVFF  593,869
0A68C:  MOVLW  60
0A68E:  MOVLB  8
0A690:  MOVWF  x6A
0A692:  MOVLW  14
0A694:  MOVWF  x6B
0A696:  MOVLW  03
0A698:  MOVWF  x6C
0A69A:  MOVLW  01
0A69C:  MOVWF  x6D
0A69E:  MOVLB  0
0A6A0:  CALL   3C6E
....................             glcd_rect(90, 0, 127, 54, NO, ON); 
0A6A4:  MOVLW  5A
0A6A6:  MOVLB  8
0A6A8:  MOVWF  x7E
0A6AA:  CLRF   x7F
0A6AC:  MOVLW  7F
0A6AE:  MOVWF  x80
0A6B0:  MOVLW  36
0A6B2:  MOVWF  x81
0A6B4:  CLRF   x82
0A6B6:  MOVLW  01
0A6B8:  MOVWF  x83
0A6BA:  MOVLB  0
0A6BC:  CALL   17D8
....................              
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          if(flag_display==1){ 
0A6C0:  MOVLB  5
0A6C2:  BTFSS  x95.5
0A6C4:  BRA    A73A
....................             displayTiempo(penMufla,97,1,3,1); 
0A6C6:  MOVFF  65D,875
0A6CA:  MOVFF  65C,874
0A6CE:  MOVFF  65B,873
0A6D2:  MOVFF  65A,872
0A6D6:  MOVLB  0
0A6D8:  CALL   587C
0A6DC:  MOVFF  01,866
0A6E0:  MOVFF  01,869
0A6E4:  MOVLW  61
0A6E6:  MOVLB  8
0A6E8:  MOVWF  x6A
0A6EA:  MOVLW  01
0A6EC:  MOVWF  x6B
0A6EE:  MOVLW  03
0A6F0:  MOVWF  x6C
0A6F2:  MOVLW  01
0A6F4:  MOVWF  x6D
0A6F6:  MOVLB  0
0A6F8:  CALL   3C6E
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayFloat(Setpoint-TempeInicial,97,13,1); 
....................             displayFloat(sensores(0),97,10,1);} 
0A6FC:  MOVLB  8
0A6FE:  CLRF   x67
0A700:  MOVLB  0
0A702:  CALL   3258
0A706:  MOVFF  00,866
0A70A:  MOVFF  01,867
0A70E:  MOVFF  02,868
0A712:  MOVFF  03,869
0A716:  MOVFF  03,86D
0A71A:  MOVFF  02,86C
0A71E:  MOVFF  01,86B
0A722:  MOVFF  00,86A
0A726:  MOVLW  61
0A728:  MOVLB  8
0A72A:  MOVWF  x6E
0A72C:  MOVLW  0A
0A72E:  MOVWF  x6F
0A730:  MOVLW  01
0A732:  MOVWF  x70
0A734:  MOVLB  0
0A736:  CALL   6B98
....................   //       else{ 
.................... //            glcd_rect(60, 46, 88, 52, YES, OFF); 
.................... //            glcd_rect(97, 13, 88, 52, YES, OFF); 
....................          //} 
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................             displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
0A73A:  MOVFF  5E9,869
0A73E:  MOVLW  14
0A740:  MOVLB  8
0A742:  MOVWF  x6A
0A744:  MOVLW  02
0A746:  MOVWF  x6B
0A748:  CLRF   x6C
0A74A:  MOVWF  x6D
0A74C:  MOVLB  0
0A74E:  CALL   3C6E
0A752:  MOVFF  5E8,869
0A756:  MOVLW  21
0A758:  MOVLB  8
0A75A:  MOVWF  x6A
0A75C:  MOVLW  02
0A75E:  MOVWF  x6B
0A760:  CLRF   x6C
0A762:  MOVWF  x6D
0A764:  MOVLB  0
0A766:  CALL   3C6E
....................             strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
0A76A:  MOVLW  08
0A76C:  MOVWF  FEA
0A76E:  MOVLW  46
0A770:  MOVWF  FE9
0A772:  MOVFF  FF2,866
0A776:  BCF    FF2.7
0A778:  MOVLW  00
0A77A:  CALL   0EA0
0A77E:  TBLRD*-
0A780:  TBLRD*+
0A782:  MOVF   FF5,W
0A784:  MOVWF  FEE
0A786:  IORLW  00
0A788:  BNZ   A780
0A78A:  MOVLB  8
0A78C:  BTFSC  x66.7
0A78E:  BSF    FF2.7
0A790:  MOVLW  08
0A792:  MOVWF  x6E
0A794:  MOVLW  46
0A796:  MOVWF  x6D
0A798:  MOVLW  2E
0A79A:  MOVWF  x6F
0A79C:  MOVLW  02
0A79E:  MOVWF  x70
0A7A0:  MOVWF  x71
0A7A2:  MOVWF  x72
0A7A4:  MOVLB  0
0A7A6:  CALL   1A52
....................             displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
0A7AA:  MOVFF  5E7,869
0A7AE:  MOVLW  37
0A7B0:  MOVLB  8
0A7B2:  MOVWF  x6A
0A7B4:  MOVLW  02
0A7B6:  MOVWF  x6B
0A7B8:  CLRF   x6C
0A7BA:  MOVWF  x6D
0A7BC:  MOVLB  0
0A7BE:  CALL   3C6E
0A7C2:  MOVFF  5E6,869
0A7C6:  MOVLW  44
0A7C8:  MOVLB  8
0A7CA:  MOVWF  x6A
0A7CC:  MOVLW  02
0A7CE:  MOVWF  x6B
0A7D0:  CLRF   x6C
0A7D2:  MOVWF  x6D
0A7D4:  MOVLB  0
0A7D6:  CALL   3C6E
....................              
....................             // Muestra Valor de esterilizacion actual. 
....................             strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
0A7DA:  MOVLW  08
0A7DC:  MOVWF  FEA
0A7DE:  MOVLW  46
0A7E0:  MOVWF  FE9
0A7E2:  MOVFF  FF2,866
0A7E6:  BCF    FF2.7
0A7E8:  MOVLW  00
0A7EA:  CALL   0EC0
0A7EE:  TBLRD*-
0A7F0:  TBLRD*+
0A7F2:  MOVF   FF5,W
0A7F4:  MOVWF  FEE
0A7F6:  IORLW  00
0A7F8:  BNZ   A7F0
0A7FA:  MOVLB  8
0A7FC:  BTFSC  x66.7
0A7FE:  BSF    FF2.7
0A800:  MOVLW  08
0A802:  MOVWF  x6E
0A804:  MOVLW  46
0A806:  MOVWF  x6D
0A808:  CLRF   x6F
0A80A:  MOVLW  12
0A80C:  MOVWF  x70
0A80E:  MOVLW  02
0A810:  MOVWF  x71
0A812:  MOVLW  01
0A814:  MOVWF  x72
0A816:  MOVLB  0
0A818:  CALL   1A52
....................             //displayTiempos(Horas1[Segmento],30,18,2,1);//displayTiempo(Testerilizacionp[2],36,18,0,1); 
....................             displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
0A81C:  MOVFF  5ED,869
0A820:  MOVLW  1E
0A822:  MOVLB  8
0A824:  MOVWF  x6A
0A826:  MOVLW  12
0A828:  MOVWF  x6B
0A82A:  CLRF   x6C
0A82C:  MOVLW  01
0A82E:  MOVWF  x6D
0A830:  MOVLB  0
0A832:  CALL   3C6E
0A836:  MOVFF  5EC,869
0A83A:  MOVLW  24
0A83C:  MOVLB  8
0A83E:  MOVWF  x6A
0A840:  MOVLW  12
0A842:  MOVWF  x6B
0A844:  CLRF   x6C
0A846:  MOVLW  01
0A848:  MOVWF  x6D
0A84A:  MOVLB  0
0A84C:  CALL   3C6E
....................             strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
0A850:  MOVLW  08
0A852:  MOVWF  FEA
0A854:  MOVLW  46
0A856:  MOVWF  FE9
0A858:  MOVFF  FF2,866
0A85C:  BCF    FF2.7
0A85E:  MOVLW  00
0A860:  CALL   0EA0
0A864:  TBLRD*-
0A866:  TBLRD*+
0A868:  MOVF   FF5,W
0A86A:  MOVWF  FEE
0A86C:  IORLW  00
0A86E:  BNZ   A866
0A870:  MOVLB  8
0A872:  BTFSC  x66.7
0A874:  BSF    FF2.7
0A876:  MOVLW  08
0A878:  MOVWF  x6E
0A87A:  MOVLW  46
0A87C:  MOVWF  x6D
0A87E:  MOVLW  2A
0A880:  MOVWF  x6F
0A882:  MOVLW  12
0A884:  MOVWF  x70
0A886:  MOVLW  02
0A888:  MOVWF  x71
0A88A:  MOVLW  01
0A88C:  MOVWF  x72
0A88E:  MOVLB  0
0A890:  CALL   1A52
....................             //displayTiempos(Minutos1[Segmento],48,18,2,1);//displayTiempo(Testerilizacionp[0],54,18,0,1); 
....................             displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
0A894:  MOVFF  5EB,869
0A898:  MOVLW  30
0A89A:  MOVLB  8
0A89C:  MOVWF  x6A
0A89E:  MOVLW  12
0A8A0:  MOVWF  x6B
0A8A2:  CLRF   x6C
0A8A4:  MOVLW  01
0A8A6:  MOVWF  x6D
0A8A8:  MOVLB  0
0A8AA:  CALL   3C6E
0A8AE:  MOVFF  5EA,869
0A8B2:  MOVLW  36
0A8B4:  MOVLB  8
0A8B6:  MOVWF  x6A
0A8B8:  MOVLW  12
0A8BA:  MOVWF  x6B
0A8BC:  CLRF   x6C
0A8BE:  MOVLW  01
0A8C0:  MOVWF  x6D
0A8C2:  MOVLB  0
0A8C4:  CALL   3C6E
....................             strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
0A8C8:  MOVLW  08
0A8CA:  MOVWF  FEA
0A8CC:  MOVLW  46
0A8CE:  MOVWF  FE9
0A8D0:  MOVFF  FF2,866
0A8D4:  BCF    FF2.7
0A8D6:  MOVLW  00
0A8D8:  CALL   0EE4
0A8DC:  TBLRD*-
0A8DE:  TBLRD*+
0A8E0:  MOVF   FF5,W
0A8E2:  MOVWF  FEE
0A8E4:  IORLW  00
0A8E6:  BNZ   A8DE
0A8E8:  MOVLB  8
0A8EA:  BTFSC  x66.7
0A8EC:  BSF    FF2.7
0A8EE:  MOVLW  08
0A8F0:  MOVWF  x6E
0A8F2:  MOVLW  46
0A8F4:  MOVWF  x6D
0A8F6:  MOVLW  3C
0A8F8:  MOVWF  x6F
0A8FA:  MOVLW  12
0A8FC:  MOVWF  x70
0A8FE:  MOVLW  02
0A900:  MOVWF  x71
0A902:  MOVLW  01
0A904:  MOVWF  x72
0A906:  MOVLB  0
0A908:  CALL   1A52
....................           
....................             glcd_rect(0, 0, 89, 27, NO, ON); 
0A90C:  MOVLB  8
0A90E:  CLRF   x7E
0A910:  CLRF   x7F
0A912:  MOVLW  59
0A914:  MOVWF  x80
0A916:  MOVLW  1B
0A918:  MOVWF  x81
0A91A:  CLRF   x82
0A91C:  MOVLW  01
0A91E:  MOVWF  x83
0A920:  MOVLB  0
0A922:  CALL   17D8
....................             glcd_rect(0, 27, 89, 54, NO, ON); 
0A926:  MOVLB  8
0A928:  CLRF   x7E
0A92A:  MOVLW  1B
0A92C:  MOVWF  x7F
0A92E:  MOVLW  59
0A930:  MOVWF  x80
0A932:  MOVLW  36
0A934:  MOVWF  x81
0A936:  CLRF   x82
0A938:  MOVLW  01
0A93A:  MOVWF  x83
0A93C:  MOVLB  0
0A93E:  CALL   17D8
0A942:  MOVLB  5
....................       }  
....................       
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && Pausa<3) 
0A944:  MOVF   xEA,W
0A946:  XORLW  80
0A948:  MOVWF  00
0A94A:  MOVF   xE6,W
0A94C:  XORLW  80
0A94E:  SUBWF  00,W
0A950:  BZ    A956
0A952:  BTFSC  FD8.0
0A954:  BRA    AA58
0A956:  MOVF   xEB,W
0A958:  XORLW  80
0A95A:  MOVWF  00
0A95C:  MOVF   xE7,W
0A95E:  XORLW  80
0A960:  SUBWF  00,W
0A962:  BZ    A968
0A964:  BTFSC  FD8.0
0A966:  BRA    AA58
0A968:  MOVF   xEC,W
0A96A:  XORLW  80
0A96C:  MOVWF  00
0A96E:  MOVF   xE8,W
0A970:  XORLW  80
0A972:  SUBWF  00,W
0A974:  BZ    A978
0A976:  BC    AA58
0A978:  MOVF   xED,W
0A97A:  XORLW  80
0A97C:  MOVWF  00
0A97E:  MOVF   xE9,W
0A980:  XORLW  80
0A982:  SUBWF  00,W
0A984:  BZ    A988
0A986:  BC    AA58
0A988:  MOVF   x9F,W
0A98A:  SUBLW  02
0A98C:  BNC   AA58
....................       { 
....................          flag_calcula=0; 
0A98E:  BCF    x95.1
....................          if(Segmento<Segmentos){ 
0A990:  MOVF   x92,W
0A992:  SUBWF  x93,W
0A994:  BC    A9A2
....................             Segmento++; 
0A996:  INCF   x93,F
....................             Testerilizacion[0]=0; 
0A998:  CLRF   xE6
....................             Testerilizacion[1]=0; 
0A99A:  CLRF   xE7
....................             Testerilizacion[2]=0; 
0A99C:  CLRF   xE8
....................             Testerilizacion[3]=0; 
0A99E:  CLRF   xE9
....................          } 
....................          else{ 
0A9A0:  BRA    A9A6
....................             Pausa=3; 
0A9A2:  MOVLW  03
0A9A4:  MOVWF  x9F
....................          } 
....................          glcd_fillScreen(OFF); 
0A9A6:  MOVLB  8
0A9A8:  CLRF   x6D
0A9AA:  MOVLB  0
0A9AC:  CALL   1424
....................          Buzz_on; 
0A9B0:  BSF    F8B.4
0A9B2:  BCF    F94.4
....................          delay_ms(1000); 
0A9B4:  MOVLW  04
0A9B6:  MOVLB  8
0A9B8:  MOVWF  x66
0A9BA:  MOVLW  FA
0A9BC:  MOVWF  x6E
0A9BE:  MOVLB  0
0A9C0:  CALL   13A4
0A9C4:  MOVLB  8
0A9C6:  DECFSZ x66,F
0A9C8:  BRA    A9BA
....................          Buzz_off; 
0A9CA:  BCF    F8B.4
0A9CC:  BCF    F94.4
....................          delay_ms(1000); 
0A9CE:  MOVLW  04
0A9D0:  MOVWF  x66
0A9D2:  MOVLW  FA
0A9D4:  MOVWF  x6E
0A9D6:  MOVLB  0
0A9D8:  CALL   13A4
0A9DC:  MOVLB  8
0A9DE:  DECFSZ x66,F
0A9E0:  BRA    A9D2
....................          glcd_init(ON); 
0A9E2:  MOVLW  01
0A9E4:  MOVWF  x66
0A9E6:  MOVLB  0
0A9E8:  CALL   1536
....................          strcpy(Menus.Letra,"Status:Cambio Seg."); 
0A9EC:  MOVLW  08
0A9EE:  MOVWF  FEA
0A9F0:  MOVLW  46
0A9F2:  MOVWF  FE9
0A9F4:  MOVFF  FF2,866
0A9F8:  BCF    FF2.7
0A9FA:  MOVLW  00
0A9FC:  CALL   0F08
0AA00:  TBLRD*-
0AA02:  TBLRD*+
0AA04:  MOVF   FF5,W
0AA06:  MOVWF  FEE
0AA08:  IORLW  00
0AA0A:  BNZ   AA02
0AA0C:  MOVLB  8
0AA0E:  BTFSC  x66.7
0AA10:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1);          
0AA12:  MOVLW  08
0AA14:  MOVWF  x6E
0AA16:  MOVLW  46
0AA18:  MOVWF  x6D
0AA1A:  CLRF   x6F
0AA1C:  MOVLW  37
0AA1E:  MOVWF  x70
0AA20:  MOVLW  02
0AA22:  MOVWF  x71
0AA24:  MOVLW  01
0AA26:  MOVWF  x72
0AA28:  MOVLB  0
0AA2A:  CALL   1A52
....................          delay_ms(500); 
0AA2E:  MOVLW  02
0AA30:  MOVLB  8
0AA32:  MOVWF  x66
0AA34:  MOVLW  FA
0AA36:  MOVWF  x6E
0AA38:  MOVLB  0
0AA3A:  CALL   13A4
0AA3E:  MOVLB  8
0AA40:  DECFSZ x66,F
0AA42:  BRA    AA34
....................           
....................          if(Pausa==3){ 
0AA44:  MOVLB  5
0AA46:  MOVF   x9F,W
0AA48:  SUBLW  03
0AA4A:  BNZ   AA58
....................             glcd_fillScreen(OFF); 
0AA4C:  MOVLB  8
0AA4E:  CLRF   x6D
0AA50:  MOVLB  0
0AA52:  CALL   1424
0AA56:  MOVLB  5
....................          } 
....................       }  
....................        
....................       if(tinicio>=60) 
0AA58:  MOVF   xB1,F
0AA5A:  BNZ   AA62
0AA5C:  MOVF   xB0,W
0AA5E:  SUBLW  3B
0AA60:  BC    AA9E
....................       { 
....................          tinicio=0; 
0AA62:  CLRF   xB1
0AA64:  CLRF   xB0
....................          Testerilizacion[0]++; 
0AA66:  INCF   xE6,F
....................          if(Testerilizacion[0]>9) 
0AA68:  BTFSC  xE6.7
0AA6A:  BRA    AA76
0AA6C:  MOVF   xE6,W
0AA6E:  SUBLW  09
0AA70:  BC    AA76
....................          { 
....................             Testerilizacion[0]=0; 
0AA72:  CLRF   xE6
....................             Testerilizacion[1]++; 
0AA74:  INCF   xE7,F
....................          } 
....................          if(Testerilizacion[1]>5) 
0AA76:  BTFSC  xE7.7
0AA78:  BRA    AA84
0AA7A:  MOVF   xE7,W
0AA7C:  SUBLW  05
0AA7E:  BC    AA84
....................          { 
....................             Testerilizacion[1]=0; 
0AA80:  CLRF   xE7
....................             Testerilizacion[2]++; 
0AA82:  INCF   xE8,F
....................          } 
....................          if(Testerilizacion[2]>9) 
0AA84:  BTFSC  xE8.7
0AA86:  BRA    AA92
0AA88:  MOVF   xE8,W
0AA8A:  SUBLW  09
0AA8C:  BC    AA92
....................          { 
....................             Testerilizacion[2]=0; 
0AA8E:  CLRF   xE8
....................             Testerilizacion[3]++; 
0AA90:  INCF   xE9,F
....................          } 
....................          if(Testerilizacion[3]>9) 
0AA92:  BTFSC  xE9.7
0AA94:  BRA    AA9E
0AA96:  MOVF   xE9,W
0AA98:  SUBLW  09
0AA9A:  BC    AA9E
....................          { 
....................             Testerilizacion[3]=0; 
0AA9C:  CLRF   xE9
....................          } 
....................       } 
....................        
....................       if(LEFT)//Si oprime boton de Toma. 
0AA9E:  BSF    F96.2
0AAA0:  BTFSC  F84.2
0AAA2:  BRA    AAE2
....................       { 
....................          if(Pausa<3){ 
0AAA4:  MOVF   x9F,W
0AAA6:  SUBLW  02
0AAA8:  BNC   AAE2
....................             if(Pausa!=2) 
0AAAA:  MOVF   x9F,W
0AAAC:  SUBLW  02
0AAAE:  BZ    AAE2
....................             { 
....................                delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1;Menu=1; 
0AAB0:  MOVLW  02
0AAB2:  MOVLB  8
0AAB4:  MOVWF  x66
0AAB6:  MOVLW  FA
0AAB8:  MOVWF  x6E
0AABA:  MOVLB  0
0AABC:  CALL   13A4
0AAC0:  MOVLB  8
0AAC2:  DECFSZ x66,F
0AAC4:  BRA    AAB6
0AAC6:  MOVLW  1E
0AAC8:  MOVLB  5
0AACA:  MOVWF  x9B
0AACC:  MOVLB  8
0AACE:  CLRF   x6D
0AAD0:  MOVLB  0
0AAD2:  CALL   1424
0AAD6:  MOVLW  01
0AAD8:  MOVLB  5
0AADA:  MOVWF  xA2
0AADC:  BSF    x87.7
0AADE:  MOVWF  x9F
0AAE0:  MOVWF  x9B
....................             } 
....................          } 
....................       } 
....................        
....................       if(Pausa==3 && !DOOR){          
0AAE2:  MOVF   x9F,W
0AAE4:  SUBLW  03
0AAE6:  BTFSS  FD8.2
0AAE8:  BRA    ACBC
0AAEA:  BSF    F92.4
0AAEC:  BTFSC  F80.4
0AAEE:  BRA    ACBC
....................          //strcpy(Menus.Letra,"Status:Finalizado"); 
....................          if(Temperatura>80){ 
0AAF0:  MOVLB  8
0AAF2:  CLRF   x69
0AAF4:  CLRF   x68
0AAF6:  MOVLW  20
0AAF8:  MOVWF  x67
0AAFA:  MOVLW  85
0AAFC:  MOVWF  x66
0AAFE:  MOVFF  62D,86D
0AB02:  MOVFF  62C,86C
0AB06:  MOVFF  62B,86B
0AB0A:  MOVFF  62A,86A
0AB0E:  MOVLB  0
0AB10:  CALL   1D90
0AB14:  BNC   ABDE
....................             if(mensaje){ 
0AB16:  MOVLB  5
0AB18:  BTFSS  x87.3
0AB1A:  BRA    AB7E
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0AB1C:  MOVLB  8
0AB1E:  CLRF   x7E
0AB20:  MOVLW  37
0AB22:  MOVWF  x7F
0AB24:  MOVLW  7F
0AB26:  MOVWF  x80
0AB28:  MOVLW  3F
0AB2A:  MOVWF  x81
0AB2C:  MOVLW  01
0AB2E:  MOVWF  x82
0AB30:  CLRF   x83
0AB32:  MOVLB  0
0AB34:  CALL   17D8
....................                strcpy(Menus.Letra,"NO APAGUE EL EQUIPO"); 
0AB38:  MOVLW  08
0AB3A:  MOVWF  FEA
0AB3C:  MOVLW  46
0AB3E:  MOVWF  FE9
0AB40:  MOVFF  FF2,866
0AB44:  BCF    FF2.7
0AB46:  MOVLW  00
0AB48:  CALL   0F3A
0AB4C:  TBLRD*-
0AB4E:  TBLRD*+
0AB50:  MOVF   FF5,W
0AB52:  MOVWF  FEE
0AB54:  IORLW  00
0AB56:  BNZ   AB4E
0AB58:  MOVLB  8
0AB5A:  BTFSC  x66.7
0AB5C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
0AB5E:  MOVLW  08
0AB60:  MOVWF  x6E
0AB62:  MOVLW  46
0AB64:  MOVWF  x6D
0AB66:  CLRF   x6F
0AB68:  MOVLW  37
0AB6A:  MOVWF  x70
0AB6C:  MOVLW  02
0AB6E:  MOVWF  x71
0AB70:  MOVLW  01
0AB72:  MOVWF  x72
0AB74:  MOVLB  0
0AB76:  CALL   1A52
....................             }else{ 
0AB7A:  BRA    ABDC
0AB7C:  MOVLB  5
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0AB7E:  MOVLB  8
0AB80:  CLRF   x7E
0AB82:  MOVLW  37
0AB84:  MOVWF  x7F
0AB86:  MOVLW  7F
0AB88:  MOVWF  x80
0AB8A:  MOVLW  3F
0AB8C:  MOVWF  x81
0AB8E:  MOVLW  01
0AB90:  MOVWF  x82
0AB92:  CLRF   x83
0AB94:  MOVLB  0
0AB96:  CALL   17D8
....................                strcpy(Menus.Letra,"Status:Finalizado"); 
0AB9A:  MOVLW  08
0AB9C:  MOVWF  FEA
0AB9E:  MOVLW  46
0ABA0:  MOVWF  FE9
0ABA2:  MOVFF  FF2,866
0ABA6:  BCF    FF2.7
0ABA8:  MOVLW  00
0ABAA:  CALL   0F6C
0ABAE:  TBLRD*-
0ABB0:  TBLRD*+
0ABB2:  MOVF   FF5,W
0ABB4:  MOVWF  FEE
0ABB6:  IORLW  00
0ABB8:  BNZ   ABB0
0ABBA:  MOVLB  8
0ABBC:  BTFSC  x66.7
0ABBE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
0ABC0:  MOVLW  08
0ABC2:  MOVWF  x6E
0ABC4:  MOVLW  46
0ABC6:  MOVWF  x6D
0ABC8:  CLRF   x6F
0ABCA:  MOVLW  37
0ABCC:  MOVWF  x70
0ABCE:  MOVLW  02
0ABD0:  MOVWF  x71
0ABD2:  MOVLW  01
0ABD4:  MOVWF  x72
0ABD6:  MOVLB  0
0ABD8:  CALL   1A52
....................             } 
....................          }else{ 
0ABDC:  BRA    ACA4
....................             if(mensaje){ 
0ABDE:  MOVLB  5
0ABE0:  BTFSS  x87.3
0ABE2:  BRA    AC46
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0ABE4:  MOVLB  8
0ABE6:  CLRF   x7E
0ABE8:  MOVLW  37
0ABEA:  MOVWF  x7F
0ABEC:  MOVLW  7F
0ABEE:  MOVWF  x80
0ABF0:  MOVLW  3F
0ABF2:  MOVWF  x81
0ABF4:  MOVLW  01
0ABF6:  MOVWF  x82
0ABF8:  CLRF   x83
0ABFA:  MOVLB  0
0ABFC:  CALL   17D8
....................                strcpy(Menus.Letra,"Puede apagar la Mufla"); 
0AC00:  MOVLW  08
0AC02:  MOVWF  FEA
0AC04:  MOVLW  46
0AC06:  MOVWF  FE9
0AC08:  MOVFF  FF2,866
0AC0C:  BCF    FF2.7
0AC0E:  MOVLW  00
0AC10:  CALL   0F9C
0AC14:  TBLRD*-
0AC16:  TBLRD*+
0AC18:  MOVF   FF5,W
0AC1A:  MOVWF  FEE
0AC1C:  IORLW  00
0AC1E:  BNZ   AC16
0AC20:  MOVLB  8
0AC22:  BTFSC  x66.7
0AC24:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
0AC26:  MOVLW  08
0AC28:  MOVWF  x6E
0AC2A:  MOVLW  46
0AC2C:  MOVWF  x6D
0AC2E:  CLRF   x6F
0AC30:  MOVLW  37
0AC32:  MOVWF  x70
0AC34:  MOVLW  02
0AC36:  MOVWF  x71
0AC38:  MOVLW  01
0AC3A:  MOVWF  x72
0AC3C:  MOVLB  0
0AC3E:  CALL   1A52
....................             }else{ 
0AC42:  BRA    ACA4
0AC44:  MOVLB  5
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0AC46:  MOVLB  8
0AC48:  CLRF   x7E
0AC4A:  MOVLW  37
0AC4C:  MOVWF  x7F
0AC4E:  MOVLW  7F
0AC50:  MOVWF  x80
0AC52:  MOVLW  3F
0AC54:  MOVWF  x81
0AC56:  MOVLW  01
0AC58:  MOVWF  x82
0AC5A:  CLRF   x83
0AC5C:  MOVLB  0
0AC5E:  CALL   17D8
....................                strcpy(Menus.Letra,"Status:Finalizado"); 
0AC62:  MOVLW  08
0AC64:  MOVWF  FEA
0AC66:  MOVLW  46
0AC68:  MOVWF  FE9
0AC6A:  MOVFF  FF2,866
0AC6E:  BCF    FF2.7
0AC70:  MOVLW  00
0AC72:  CALL   0F6C
0AC76:  TBLRD*-
0AC78:  TBLRD*+
0AC7A:  MOVF   FF5,W
0AC7C:  MOVWF  FEE
0AC7E:  IORLW  00
0AC80:  BNZ   AC78
0AC82:  MOVLB  8
0AC84:  BTFSC  x66.7
0AC86:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
0AC88:  MOVLW  08
0AC8A:  MOVWF  x6E
0AC8C:  MOVLW  46
0AC8E:  MOVWF  x6D
0AC90:  CLRF   x6F
0AC92:  MOVLW  37
0AC94:  MOVWF  x70
0AC96:  MOVLW  02
0AC98:  MOVWF  x71
0AC9A:  MOVLW  01
0AC9C:  MOVWF  x72
0AC9E:  MOVLB  0
0ACA0:  CALL   1A52
....................             } 
....................          } 
....................          tiempo_esterilizacion=4; 
0ACA4:  MOVLW  04
0ACA6:  MOVLB  5
0ACA8:  MOVWF  xA3
....................          Control=0; 
0ACAA:  CLRF   x99
....................          Resistencia_off; 
0ACAC:  BCF    F8B.0
0ACAE:  BCF    F94.0
....................          Tpulso=0.0; 
0ACB0:  MOVLB  6
0ACB2:  CLRF   x01
0ACB4:  CLRF   x00
0ACB6:  MOVLB  5
0ACB8:  CLRF   xFF
0ACBA:  CLRF   xFE
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
0ACBC:  MOVF   x9B,W
0ACBE:  SUBLW  64
0ACC0:  BTFSS  FD8.2
0ACC2:  GOTO   B4E8
....................        
....................       if(Opcion>13) 
0ACC6:  MOVF   xA2,W
0ACC8:  SUBLW  0D
0ACCA:  BC    ACD0
....................       {Opcion=1;} 
0ACCC:  MOVLW  01
0ACCE:  MOVWF  xA2
....................       if(Opcion<1) 
0ACD0:  MOVF   xA2,F
0ACD2:  BNZ   ACD8
....................       {Opcion=13;} 
0ACD4:  MOVLW  0D
0ACD6:  MOVWF  xA2
....................        
....................       if(Opcion<=6){ 
0ACD8:  MOVF   xA2,W
0ACDA:  SUBLW  06
0ACDC:  BTFSS  FD8.0
0ACDE:  BRA    B03C
....................          if(Opcion==1)    
0ACE0:  DECFSZ xA2,W
0ACE2:  BRA    AD28
....................             {strcpy(Menus.Letra,"Proporcional"); 
0ACE4:  MOVLW  08
0ACE6:  MOVWF  FEA
0ACE8:  MOVLW  46
0ACEA:  MOVWF  FE9
0ACEC:  MOVFF  FF2,866
0ACF0:  BCF    FF2.7
0ACF2:  MOVLW  00
0ACF4:  MOVLB  0
0ACF6:  CALL   0FD0
0ACFA:  TBLRD*-
0ACFC:  TBLRD*+
0ACFE:  MOVF   FF5,W
0AD00:  MOVWF  FEE
0AD02:  IORLW  00
0AD04:  BNZ   ACFC
0AD06:  MOVLB  8
0AD08:  BTFSC  x66.7
0AD0A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
0AD0C:  MOVLW  08
0AD0E:  MOVWF  x6E
0AD10:  MOVLW  46
0AD12:  MOVWF  x6D
0AD14:  CLRF   x6F
0AD16:  CLRF   x70
0AD18:  MOVLW  01
0AD1A:  MOVWF  x71
0AD1C:  MOVWF  x72
0AD1E:  MOVLB  0
0AD20:  CALL   1A52
....................          else 
0AD24:  BRA    AD68
0AD26:  MOVLB  5
....................             {strcpy(Menus.Letra,"Proporcional"); 
0AD28:  MOVLW  08
0AD2A:  MOVWF  FEA
0AD2C:  MOVLW  46
0AD2E:  MOVWF  FE9
0AD30:  MOVFF  FF2,866
0AD34:  BCF    FF2.7
0AD36:  MOVLW  00
0AD38:  MOVLB  0
0AD3A:  CALL   0FD0
0AD3E:  TBLRD*-
0AD40:  TBLRD*+
0AD42:  MOVF   FF5,W
0AD44:  MOVWF  FEE
0AD46:  IORLW  00
0AD48:  BNZ   AD40
0AD4A:  MOVLB  8
0AD4C:  BTFSC  x66.7
0AD4E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
0AD50:  MOVLW  08
0AD52:  MOVWF  x6E
0AD54:  MOVLW  46
0AD56:  MOVWF  x6D
0AD58:  CLRF   x6F
0AD5A:  CLRF   x70
0AD5C:  CLRF   x71
0AD5E:  MOVLW  01
0AD60:  MOVWF  x72
0AD62:  MOVLB  0
0AD64:  CALL   1A52
....................           
....................          if(Opcion==2)    
0AD68:  MOVLB  5
0AD6A:  MOVF   xA2,W
0AD6C:  SUBLW  02
0AD6E:  BNZ   ADB6
....................             {strcpy(Menus.Letra,"Integral"); 
0AD70:  MOVLW  08
0AD72:  MOVWF  FEA
0AD74:  MOVLW  46
0AD76:  MOVWF  FE9
0AD78:  MOVFF  FF2,866
0AD7C:  BCF    FF2.7
0AD7E:  MOVLW  00
0AD80:  MOVLB  0
0AD82:  CALL   0FFC
0AD86:  TBLRD*-
0AD88:  TBLRD*+
0AD8A:  MOVF   FF5,W
0AD8C:  MOVWF  FEE
0AD8E:  IORLW  00
0AD90:  BNZ   AD88
0AD92:  MOVLB  8
0AD94:  BTFSC  x66.7
0AD96:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
0AD98:  MOVLW  08
0AD9A:  MOVWF  x6E
0AD9C:  MOVLW  46
0AD9E:  MOVWF  x6D
0ADA0:  CLRF   x6F
0ADA2:  MOVLW  09
0ADA4:  MOVWF  x70
0ADA6:  MOVLW  01
0ADA8:  MOVWF  x71
0ADAA:  MOVWF  x72
0ADAC:  MOVLB  0
0ADAE:  CALL   1A52
....................          else 
0ADB2:  BRA    ADF8
0ADB4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Integral"); 
0ADB6:  MOVLW  08
0ADB8:  MOVWF  FEA
0ADBA:  MOVLW  46
0ADBC:  MOVWF  FE9
0ADBE:  MOVFF  FF2,866
0ADC2:  BCF    FF2.7
0ADC4:  MOVLW  00
0ADC6:  MOVLB  0
0ADC8:  CALL   0FFC
0ADCC:  TBLRD*-
0ADCE:  TBLRD*+
0ADD0:  MOVF   FF5,W
0ADD2:  MOVWF  FEE
0ADD4:  IORLW  00
0ADD6:  BNZ   ADCE
0ADD8:  MOVLB  8
0ADDA:  BTFSC  x66.7
0ADDC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
0ADDE:  MOVLW  08
0ADE0:  MOVWF  x6E
0ADE2:  MOVLW  46
0ADE4:  MOVWF  x6D
0ADE6:  CLRF   x6F
0ADE8:  MOVLW  09
0ADEA:  MOVWF  x70
0ADEC:  CLRF   x71
0ADEE:  MOVLW  01
0ADF0:  MOVWF  x72
0ADF2:  MOVLB  0
0ADF4:  CALL   1A52
....................              
....................          if(Opcion==3)    
0ADF8:  MOVLB  5
0ADFA:  MOVF   xA2,W
0ADFC:  SUBLW  03
0ADFE:  BNZ   AE46
....................             {strcpy(Menus.Letra,"Derivativo"); 
0AE00:  MOVLW  08
0AE02:  MOVWF  FEA
0AE04:  MOVLW  46
0AE06:  MOVWF  FE9
0AE08:  MOVFF  FF2,866
0AE0C:  BCF    FF2.7
0AE0E:  MOVLW  00
0AE10:  MOVLB  0
0AE12:  CALL   1024
0AE16:  TBLRD*-
0AE18:  TBLRD*+
0AE1A:  MOVF   FF5,W
0AE1C:  MOVWF  FEE
0AE1E:  IORLW  00
0AE20:  BNZ   AE18
0AE22:  MOVLB  8
0AE24:  BTFSC  x66.7
0AE26:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
0AE28:  MOVLW  08
0AE2A:  MOVWF  x6E
0AE2C:  MOVLW  46
0AE2E:  MOVWF  x6D
0AE30:  CLRF   x6F
0AE32:  MOVLW  12
0AE34:  MOVWF  x70
0AE36:  MOVLW  01
0AE38:  MOVWF  x71
0AE3A:  MOVWF  x72
0AE3C:  MOVLB  0
0AE3E:  CALL   1A52
....................          else 
0AE42:  BRA    AE88
0AE44:  MOVLB  5
....................             {strcpy(Menus.Letra,"Derivativo"); 
0AE46:  MOVLW  08
0AE48:  MOVWF  FEA
0AE4A:  MOVLW  46
0AE4C:  MOVWF  FE9
0AE4E:  MOVFF  FF2,866
0AE52:  BCF    FF2.7
0AE54:  MOVLW  00
0AE56:  MOVLB  0
0AE58:  CALL   1024
0AE5C:  TBLRD*-
0AE5E:  TBLRD*+
0AE60:  MOVF   FF5,W
0AE62:  MOVWF  FEE
0AE64:  IORLW  00
0AE66:  BNZ   AE5E
0AE68:  MOVLB  8
0AE6A:  BTFSC  x66.7
0AE6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
0AE6E:  MOVLW  08
0AE70:  MOVWF  x6E
0AE72:  MOVLW  46
0AE74:  MOVWF  x6D
0AE76:  CLRF   x6F
0AE78:  MOVLW  12
0AE7A:  MOVWF  x70
0AE7C:  CLRF   x71
0AE7E:  MOVLW  01
0AE80:  MOVWF  x72
0AE82:  MOVLB  0
0AE84:  CALL   1A52
....................           
....................          if(Opcion==4)    
0AE88:  MOVLB  5
0AE8A:  MOVF   xA2,W
0AE8C:  SUBLW  04
0AE8E:  BNZ   AED6
....................             {strcpy(Menus.Letra,"Tciclo"); 
0AE90:  MOVLW  08
0AE92:  MOVWF  FEA
0AE94:  MOVLW  46
0AE96:  MOVWF  FE9
0AE98:  MOVFF  FF2,866
0AE9C:  BCF    FF2.7
0AE9E:  MOVLW  00
0AEA0:  MOVLB  0
0AEA2:  CALL   104E
0AEA6:  TBLRD*-
0AEA8:  TBLRD*+
0AEAA:  MOVF   FF5,W
0AEAC:  MOVWF  FEE
0AEAE:  IORLW  00
0AEB0:  BNZ   AEA8
0AEB2:  MOVLB  8
0AEB4:  BTFSC  x66.7
0AEB6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
0AEB8:  MOVLW  08
0AEBA:  MOVWF  x6E
0AEBC:  MOVLW  46
0AEBE:  MOVWF  x6D
0AEC0:  CLRF   x6F
0AEC2:  MOVLW  1B
0AEC4:  MOVWF  x70
0AEC6:  MOVLW  01
0AEC8:  MOVWF  x71
0AECA:  MOVWF  x72
0AECC:  MOVLB  0
0AECE:  CALL   1A52
....................          else 
0AED2:  BRA    AF18
0AED4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
0AED6:  MOVLW  08
0AED8:  MOVWF  FEA
0AEDA:  MOVLW  46
0AEDC:  MOVWF  FE9
0AEDE:  MOVFF  FF2,866
0AEE2:  BCF    FF2.7
0AEE4:  MOVLW  00
0AEE6:  MOVLB  0
0AEE8:  CALL   104E
0AEEC:  TBLRD*-
0AEEE:  TBLRD*+
0AEF0:  MOVF   FF5,W
0AEF2:  MOVWF  FEE
0AEF4:  IORLW  00
0AEF6:  BNZ   AEEE
0AEF8:  MOVLB  8
0AEFA:  BTFSC  x66.7
0AEFC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);} 
0AEFE:  MOVLW  08
0AF00:  MOVWF  x6E
0AF02:  MOVLW  46
0AF04:  MOVWF  x6D
0AF06:  CLRF   x6F
0AF08:  MOVLW  1B
0AF0A:  MOVWF  x70
0AF0C:  CLRF   x71
0AF0E:  MOVLW  01
0AF10:  MOVWF  x72
0AF12:  MOVLB  0
0AF14:  CALL   1A52
....................              
....................          if(Opcion==5)    
0AF18:  MOVLB  5
0AF1A:  MOVF   xA2,W
0AF1C:  SUBLW  05
0AF1E:  BNZ   AF66
....................             {strcpy(Menus.Letra,"Ajuste +"); 
0AF20:  MOVLW  08
0AF22:  MOVWF  FEA
0AF24:  MOVLW  46
0AF26:  MOVWF  FE9
0AF28:  MOVFF  FF2,866
0AF2C:  BCF    FF2.7
0AF2E:  MOVLW  00
0AF30:  MOVLB  0
0AF32:  CALL   1074
0AF36:  TBLRD*-
0AF38:  TBLRD*+
0AF3A:  MOVF   FF5,W
0AF3C:  MOVWF  FEE
0AF3E:  IORLW  00
0AF40:  BNZ   AF38
0AF42:  MOVLB  8
0AF44:  BTFSC  x66.7
0AF46:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
0AF48:  MOVLW  08
0AF4A:  MOVWF  x6E
0AF4C:  MOVLW  46
0AF4E:  MOVWF  x6D
0AF50:  CLRF   x6F
0AF52:  MOVLW  24
0AF54:  MOVWF  x70
0AF56:  MOVLW  01
0AF58:  MOVWF  x71
0AF5A:  MOVWF  x72
0AF5C:  MOVLB  0
0AF5E:  CALL   1A52
....................          else 
0AF62:  BRA    AFA8
0AF64:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
0AF66:  MOVLW  08
0AF68:  MOVWF  FEA
0AF6A:  MOVLW  46
0AF6C:  MOVWF  FE9
0AF6E:  MOVFF  FF2,866
0AF72:  BCF    FF2.7
0AF74:  MOVLW  00
0AF76:  MOVLB  0
0AF78:  CALL   1074
0AF7C:  TBLRD*-
0AF7E:  TBLRD*+
0AF80:  MOVF   FF5,W
0AF82:  MOVWF  FEE
0AF84:  IORLW  00
0AF86:  BNZ   AF7E
0AF88:  MOVLB  8
0AF8A:  BTFSC  x66.7
0AF8C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}    
0AF8E:  MOVLW  08
0AF90:  MOVWF  x6E
0AF92:  MOVLW  46
0AF94:  MOVWF  x6D
0AF96:  CLRF   x6F
0AF98:  MOVLW  24
0AF9A:  MOVWF  x70
0AF9C:  CLRF   x71
0AF9E:  MOVLW  01
0AFA0:  MOVWF  x72
0AFA2:  MOVLB  0
0AFA4:  CALL   1A52
....................                          
....................          if(Opcion==6)    
0AFA8:  MOVLB  5
0AFAA:  MOVF   xA2,W
0AFAC:  SUBLW  06
0AFAE:  BNZ   AFF6
....................             {strcpy(Menus.Letra,"Ajuste -"); 
0AFB0:  MOVLW  08
0AFB2:  MOVWF  FEA
0AFB4:  MOVLW  46
0AFB6:  MOVWF  FE9
0AFB8:  MOVFF  FF2,866
0AFBC:  BCF    FF2.7
0AFBE:  MOVLW  00
0AFC0:  MOVLB  0
0AFC2:  CALL   109C
0AFC6:  TBLRD*-
0AFC8:  TBLRD*+
0AFCA:  MOVF   FF5,W
0AFCC:  MOVWF  FEE
0AFCE:  IORLW  00
0AFD0:  BNZ   AFC8
0AFD2:  MOVLB  8
0AFD4:  BTFSC  x66.7
0AFD6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
0AFD8:  MOVLW  08
0AFDA:  MOVWF  x6E
0AFDC:  MOVLW  46
0AFDE:  MOVWF  x6D
0AFE0:  CLRF   x6F
0AFE2:  MOVLW  2D
0AFE4:  MOVWF  x70
0AFE6:  MOVLW  01
0AFE8:  MOVWF  x71
0AFEA:  MOVWF  x72
0AFEC:  MOVLB  0
0AFEE:  CALL   1A52
....................          else 
0AFF2:  BRA    B038
0AFF4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
0AFF6:  MOVLW  08
0AFF8:  MOVWF  FEA
0AFFA:  MOVLW  46
0AFFC:  MOVWF  FE9
0AFFE:  MOVFF  FF2,866
0B002:  BCF    FF2.7
0B004:  MOVLW  00
0B006:  MOVLB  0
0B008:  CALL   109C
0B00C:  TBLRD*-
0B00E:  TBLRD*+
0B010:  MOVF   FF5,W
0B012:  MOVWF  FEE
0B014:  IORLW  00
0B016:  BNZ   B00E
0B018:  MOVLB  8
0B01A:  BTFSC  x66.7
0B01C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1);}      
0B01E:  MOVLW  08
0B020:  MOVWF  x6E
0B022:  MOVLW  46
0B024:  MOVWF  x6D
0B026:  CLRF   x6F
0B028:  MOVLW  2D
0B02A:  MOVWF  x70
0B02C:  CLRF   x71
0B02E:  MOVLW  01
0B030:  MOVWF  x72
0B032:  MOVLB  0
0B034:  CALL   1A52
....................       } 
....................       else{ 
0B038:  BRA    B3E2
0B03A:  MOVLB  5
....................          if(Opcion==7)    
0B03C:  MOVF   xA2,W
0B03E:  SUBLW  07
0B040:  BNZ   B086
....................             {strcpy(Menus.Letra,"Media Movil"); 
0B042:  MOVLW  08
0B044:  MOVWF  FEA
0B046:  MOVLW  46
0B048:  MOVWF  FE9
0B04A:  MOVFF  FF2,866
0B04E:  BCF    FF2.7
0B050:  MOVLW  00
0B052:  MOVLB  0
0B054:  CALL   10C4
0B058:  TBLRD*-
0B05A:  TBLRD*+
0B05C:  MOVF   FF5,W
0B05E:  MOVWF  FEE
0B060:  IORLW  00
0B062:  BNZ   B05A
0B064:  MOVLB  8
0B066:  BTFSC  x66.7
0B068:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
0B06A:  MOVLW  08
0B06C:  MOVWF  x6E
0B06E:  MOVLW  46
0B070:  MOVWF  x6D
0B072:  CLRF   x6F
0B074:  CLRF   x70
0B076:  MOVLW  01
0B078:  MOVWF  x71
0B07A:  MOVWF  x72
0B07C:  MOVLB  0
0B07E:  CALL   1A52
....................          else 
0B082:  BRA    B0C6
0B084:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
0B086:  MOVLW  08
0B088:  MOVWF  FEA
0B08A:  MOVLW  46
0B08C:  MOVWF  FE9
0B08E:  MOVFF  FF2,866
0B092:  BCF    FF2.7
0B094:  MOVLW  00
0B096:  MOVLB  0
0B098:  CALL   10C4
0B09C:  TBLRD*-
0B09E:  TBLRD*+
0B0A0:  MOVF   FF5,W
0B0A2:  MOVWF  FEE
0B0A4:  IORLW  00
0B0A6:  BNZ   B09E
0B0A8:  MOVLB  8
0B0AA:  BTFSC  x66.7
0B0AC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);}      
0B0AE:  MOVLW  08
0B0B0:  MOVWF  x6E
0B0B2:  MOVLW  46
0B0B4:  MOVWF  x6D
0B0B6:  CLRF   x6F
0B0B8:  CLRF   x70
0B0BA:  CLRF   x71
0B0BC:  MOVLW  01
0B0BE:  MOVWF  x72
0B0C0:  MOVLB  0
0B0C2:  CALL   1A52
....................              
....................          if(Opcion==8)    
0B0C6:  MOVLB  5
0B0C8:  MOVF   xA2,W
0B0CA:  SUBLW  08
0B0CC:  BNZ   B114
....................             {strcpy(Menus.Letra,"Coeficiente"); 
0B0CE:  MOVLW  08
0B0D0:  MOVWF  FEA
0B0D2:  MOVLW  46
0B0D4:  MOVWF  FE9
0B0D6:  MOVFF  FF2,866
0B0DA:  BCF    FF2.7
0B0DC:  MOVLW  00
0B0DE:  MOVLB  0
0B0E0:  CALL   10EE
0B0E4:  TBLRD*-
0B0E6:  TBLRD*+
0B0E8:  MOVF   FF5,W
0B0EA:  MOVWF  FEE
0B0EC:  IORLW  00
0B0EE:  BNZ   B0E6
0B0F0:  MOVLB  8
0B0F2:  BTFSC  x66.7
0B0F4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
0B0F6:  MOVLW  08
0B0F8:  MOVWF  x6E
0B0FA:  MOVLW  46
0B0FC:  MOVWF  x6D
0B0FE:  CLRF   x6F
0B100:  MOVLW  09
0B102:  MOVWF  x70
0B104:  MOVLW  01
0B106:  MOVWF  x71
0B108:  MOVWF  x72
0B10A:  MOVLB  0
0B10C:  CALL   1A52
....................          else 
0B110:  BRA    B156
0B112:  MOVLB  5
....................             {strcpy(Menus.Letra,"Coeficiente"); 
0B114:  MOVLW  08
0B116:  MOVWF  FEA
0B118:  MOVLW  46
0B11A:  MOVWF  FE9
0B11C:  MOVFF  FF2,866
0B120:  BCF    FF2.7
0B122:  MOVLW  00
0B124:  MOVLB  0
0B126:  CALL   10EE
0B12A:  TBLRD*-
0B12C:  TBLRD*+
0B12E:  MOVF   FF5,W
0B130:  MOVWF  FEE
0B132:  IORLW  00
0B134:  BNZ   B12C
0B136:  MOVLB  8
0B138:  BTFSC  x66.7
0B13A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);}   
0B13C:  MOVLW  08
0B13E:  MOVWF  x6E
0B140:  MOVLW  46
0B142:  MOVWF  x6D
0B144:  CLRF   x6F
0B146:  MOVLW  09
0B148:  MOVWF  x70
0B14A:  CLRF   x71
0B14C:  MOVLW  01
0B14E:  MOVWF  x72
0B150:  MOVLB  0
0B152:  CALL   1A52
....................              
....................          if(Opcion==9)    
0B156:  MOVLB  5
0B158:  MOVF   xA2,W
0B15A:  SUBLW  09
0B15C:  BNZ   B1A4
....................             {strcpy(Menus.Letra,"Alarma SobreT"); 
0B15E:  MOVLW  08
0B160:  MOVWF  FEA
0B162:  MOVLW  46
0B164:  MOVWF  FE9
0B166:  MOVFF  FF2,866
0B16A:  BCF    FF2.7
0B16C:  MOVLW  00
0B16E:  MOVLB  0
0B170:  CALL   1118
0B174:  TBLRD*-
0B176:  TBLRD*+
0B178:  MOVF   FF5,W
0B17A:  MOVWF  FEE
0B17C:  IORLW  00
0B17E:  BNZ   B176
0B180:  MOVLB  8
0B182:  BTFSC  x66.7
0B184:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
0B186:  MOVLW  08
0B188:  MOVWF  x6E
0B18A:  MOVLW  46
0B18C:  MOVWF  x6D
0B18E:  CLRF   x6F
0B190:  MOVLW  12
0B192:  MOVWF  x70
0B194:  MOVLW  01
0B196:  MOVWF  x71
0B198:  MOVWF  x72
0B19A:  MOVLB  0
0B19C:  CALL   1A52
....................          else 
0B1A0:  BRA    B1E6
0B1A2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Alarma SobreT"); 
0B1A4:  MOVLW  08
0B1A6:  MOVWF  FEA
0B1A8:  MOVLW  46
0B1AA:  MOVWF  FE9
0B1AC:  MOVFF  FF2,866
0B1B0:  BCF    FF2.7
0B1B2:  MOVLW  00
0B1B4:  MOVLB  0
0B1B6:  CALL   1118
0B1BA:  TBLRD*-
0B1BC:  TBLRD*+
0B1BE:  MOVF   FF5,W
0B1C0:  MOVWF  FEE
0B1C2:  IORLW  00
0B1C4:  BNZ   B1BC
0B1C6:  MOVLB  8
0B1C8:  BTFSC  x66.7
0B1CA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}      
0B1CC:  MOVLW  08
0B1CE:  MOVWF  x6E
0B1D0:  MOVLW  46
0B1D2:  MOVWF  x6D
0B1D4:  CLRF   x6F
0B1D6:  MOVLW  12
0B1D8:  MOVWF  x70
0B1DA:  CLRF   x71
0B1DC:  MOVLW  01
0B1DE:  MOVWF  x72
0B1E0:  MOVLB  0
0B1E2:  CALL   1A52
....................              
....................          if(Opcion==10)    
0B1E6:  MOVLB  5
0B1E8:  MOVF   xA2,W
0B1EA:  SUBLW  0A
0B1EC:  BNZ   B234
....................             {strcpy(Menus.Letra,"Resistencia"); 
0B1EE:  MOVLW  08
0B1F0:  MOVWF  FEA
0B1F2:  MOVLW  46
0B1F4:  MOVWF  FE9
0B1F6:  MOVFF  FF2,866
0B1FA:  BCF    FF2.7
0B1FC:  MOVLW  00
0B1FE:  MOVLB  0
0B200:  CALL   1144
0B204:  TBLRD*-
0B206:  TBLRD*+
0B208:  MOVF   FF5,W
0B20A:  MOVWF  FEE
0B20C:  IORLW  00
0B20E:  BNZ   B206
0B210:  MOVLB  8
0B212:  BTFSC  x66.7
0B214:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
0B216:  MOVLW  08
0B218:  MOVWF  x6E
0B21A:  MOVLW  46
0B21C:  MOVWF  x6D
0B21E:  CLRF   x6F
0B220:  MOVLW  1B
0B222:  MOVWF  x70
0B224:  MOVLW  01
0B226:  MOVWF  x71
0B228:  MOVWF  x72
0B22A:  MOVLB  0
0B22C:  CALL   1A52
....................          else 
0B230:  BRA    B276
0B232:  MOVLB  5
....................             {strcpy(Menus.Letra,"Resistencia"); 
0B234:  MOVLW  08
0B236:  MOVWF  FEA
0B238:  MOVLW  46
0B23A:  MOVWF  FE9
0B23C:  MOVFF  FF2,866
0B240:  BCF    FF2.7
0B242:  MOVLW  00
0B244:  MOVLB  0
0B246:  CALL   1144
0B24A:  TBLRD*-
0B24C:  TBLRD*+
0B24E:  MOVF   FF5,W
0B250:  MOVWF  FEE
0B252:  IORLW  00
0B254:  BNZ   B24C
0B256:  MOVLB  8
0B258:  BTFSC  x66.7
0B25A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
0B25C:  MOVLW  08
0B25E:  MOVWF  x6E
0B260:  MOVLW  46
0B262:  MOVWF  x6D
0B264:  CLRF   x6F
0B266:  MOVLW  1B
0B268:  MOVWF  x70
0B26A:  CLRF   x71
0B26C:  MOVLW  01
0B26E:  MOVWF  x72
0B270:  MOVLB  0
0B272:  CALL   1A52
....................              
....................          if(Opcion==11)    
0B276:  MOVLB  5
0B278:  MOVF   xA2,W
0B27A:  SUBLW  0B
0B27C:  BNZ   B2C4
....................             {strcpy(Menus.Letra,"m Mufla"); 
0B27E:  MOVLW  08
0B280:  MOVWF  FEA
0B282:  MOVLW  46
0B284:  MOVWF  FE9
0B286:  MOVFF  FF2,866
0B28A:  BCF    FF2.7
0B28C:  MOVLW  00
0B28E:  MOVLB  0
0B290:  CALL   116E
0B294:  TBLRD*-
0B296:  TBLRD*+
0B298:  MOVF   FF5,W
0B29A:  MOVWF  FEE
0B29C:  IORLW  00
0B29E:  BNZ   B296
0B2A0:  MOVLB  8
0B2A2:  BTFSC  x66.7
0B2A4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
0B2A6:  MOVLW  08
0B2A8:  MOVWF  x6E
0B2AA:  MOVLW  46
0B2AC:  MOVWF  x6D
0B2AE:  CLRF   x6F
0B2B0:  MOVLW  24
0B2B2:  MOVWF  x70
0B2B4:  MOVLW  01
0B2B6:  MOVWF  x71
0B2B8:  MOVWF  x72
0B2BA:  MOVLB  0
0B2BC:  CALL   1A52
....................          else 
0B2C0:  BRA    B306
0B2C2:  MOVLB  5
....................             {strcpy(Menus.Letra,"m Mufla"); 
0B2C4:  MOVLW  08
0B2C6:  MOVWF  FEA
0B2C8:  MOVLW  46
0B2CA:  MOVWF  FE9
0B2CC:  MOVFF  FF2,866
0B2D0:  BCF    FF2.7
0B2D2:  MOVLW  00
0B2D4:  MOVLB  0
0B2D6:  CALL   116E
0B2DA:  TBLRD*-
0B2DC:  TBLRD*+
0B2DE:  MOVF   FF5,W
0B2E0:  MOVWF  FEE
0B2E2:  IORLW  00
0B2E4:  BNZ   B2DC
0B2E6:  MOVLB  8
0B2E8:  BTFSC  x66.7
0B2EA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}      
0B2EC:  MOVLW  08
0B2EE:  MOVWF  x6E
0B2F0:  MOVLW  46
0B2F2:  MOVWF  x6D
0B2F4:  CLRF   x6F
0B2F6:  MOVLW  24
0B2F8:  MOVWF  x70
0B2FA:  CLRF   x71
0B2FC:  MOVLW  01
0B2FE:  MOVWF  x72
0B300:  MOVLB  0
0B302:  CALL   1A52
....................              
....................          if(Opcion==13)    
0B306:  MOVLB  5
0B308:  MOVF   xA2,W
0B30A:  SUBLW  0D
0B30C:  BNZ   B354
....................             {strcpy(Menus.Letra,"b"); 
0B30E:  MOVLW  08
0B310:  MOVWF  FEA
0B312:  MOVLW  46
0B314:  MOVWF  FE9
0B316:  MOVFF  FF2,866
0B31A:  BCF    FF2.7
0B31C:  MOVLW  00
0B31E:  MOVLB  0
0B320:  CALL   1194
0B324:  TBLRD*-
0B326:  TBLRD*+
0B328:  MOVF   FF5,W
0B32A:  MOVWF  FEE
0B32C:  IORLW  00
0B32E:  BNZ   B326
0B330:  MOVLB  8
0B332:  BTFSC  x66.7
0B334:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
0B336:  MOVLW  08
0B338:  MOVWF  x6E
0B33A:  MOVLW  46
0B33C:  MOVWF  x6D
0B33E:  CLRF   x6F
0B340:  MOVLW  2D
0B342:  MOVWF  x70
0B344:  MOVLW  01
0B346:  MOVWF  x71
0B348:  MOVWF  x72
0B34A:  MOVLB  0
0B34C:  CALL   1A52
....................          else{ 
0B350:  BRA    B3E2
0B352:  MOVLB  5
....................             if(Opcion==12) 
0B354:  MOVF   xA2,W
0B356:  SUBLW  0C
0B358:  BNZ   B3A0
....................                {strcpy(Menus.Letra,"m"); 
0B35A:  MOVLW  08
0B35C:  MOVWF  FEA
0B35E:  MOVLW  46
0B360:  MOVWF  FE9
0B362:  MOVFF  FF2,866
0B366:  BCF    FF2.7
0B368:  MOVLW  00
0B36A:  MOVLB  0
0B36C:  CALL   11B4
0B370:  TBLRD*-
0B372:  TBLRD*+
0B374:  MOVF   FF5,W
0B376:  MOVWF  FEE
0B378:  IORLW  00
0B37A:  BNZ   B372
0B37C:  MOVLB  8
0B37E:  BTFSC  x66.7
0B380:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,45,1,1);} 
0B382:  MOVLW  08
0B384:  MOVWF  x6E
0B386:  MOVLW  46
0B388:  MOVWF  x6D
0B38A:  CLRF   x6F
0B38C:  MOVLW  2D
0B38E:  MOVWF  x70
0B390:  MOVLW  01
0B392:  MOVWF  x71
0B394:  MOVWF  x72
0B396:  MOVLB  0
0B398:  CALL   1A52
....................             else 
0B39C:  BRA    B3E2
0B39E:  MOVLB  5
....................                {strcpy(Menus.Letra,"m"); 
0B3A0:  MOVLW  08
0B3A2:  MOVWF  FEA
0B3A4:  MOVLW  46
0B3A6:  MOVWF  FE9
0B3A8:  MOVFF  FF2,866
0B3AC:  BCF    FF2.7
0B3AE:  MOVLW  00
0B3B0:  MOVLB  0
0B3B2:  CALL   11B4
0B3B6:  TBLRD*-
0B3B8:  TBLRD*+
0B3BA:  MOVF   FF5,W
0B3BC:  MOVWF  FEE
0B3BE:  IORLW  00
0B3C0:  BNZ   B3B8
0B3C2:  MOVLB  8
0B3C4:  BTFSC  x66.7
0B3C6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,45,0,1);}        
0B3C8:  MOVLW  08
0B3CA:  MOVWF  x6E
0B3CC:  MOVLW  46
0B3CE:  MOVWF  x6D
0B3D0:  CLRF   x6F
0B3D2:  MOVLW  2D
0B3D4:  MOVWF  x70
0B3D6:  CLRF   x71
0B3D8:  MOVLW  01
0B3DA:  MOVWF  x72
0B3DC:  MOVLB  0
0B3DE:  CALL   1A52
....................          } 
....................       }    
....................        
....................          if(UP)//Si oprime hacia arriba 
0B3E2:  BSF    F92.5
0B3E4:  BTFSC  F80.5
0B3E6:  BRA    B418
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B3E8:  BSF    F8B.4
0B3EA:  BCF    F94.4
0B3EC:  MOVLW  0A
0B3EE:  MOVLB  8
0B3F0:  MOVWF  x6E
0B3F2:  MOVLB  0
0B3F4:  CALL   13A4
0B3F8:  BCF    F8B.4
0B3FA:  BCF    F94.4
....................             if(Flanco == 0) 
0B3FC:  MOVLB  5
0B3FE:  BTFSC  x87.4
0B400:  BRA    B416
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
0B402:  BSF    x87.4
0B404:  MOVLW  1E
0B406:  MOVLB  8
0B408:  MOVWF  x6E
0B40A:  MOVLB  0
0B40C:  CALL   13A4
0B410:  MOVLB  5
0B412:  DECF   xA2,F
0B414:  BSF    x87.7
....................                } 
....................          } 
....................             else 
0B416:  BRA    B41C
....................                {Flanco = 0;} 
0B418:  MOVLB  5
0B41A:  BCF    x87.4
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
0B41C:  BSF    F96.0
0B41E:  BTFSC  F84.0
0B420:  BRA    B452
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B422:  BSF    F8B.4
0B424:  BCF    F94.4
0B426:  MOVLW  0A
0B428:  MOVLB  8
0B42A:  MOVWF  x6E
0B42C:  MOVLB  0
0B42E:  CALL   13A4
0B432:  BCF    F8B.4
0B434:  BCF    F94.4
....................             if(Flanco2 == 0) 
0B436:  MOVLB  5
0B438:  BTFSC  x87.6
0B43A:  BRA    B450
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
0B43C:  BSF    x87.6
0B43E:  MOVLW  1E
0B440:  MOVLB  8
0B442:  MOVWF  x6E
0B444:  MOVLB  0
0B446:  CALL   13A4
0B44A:  MOVLB  5
0B44C:  INCF   xA2,F
0B44E:  BSF    x87.7
....................                }      
....................          } 
....................             else 
0B450:  BRA    B454
....................                {Flanco2 = 0;}   
0B452:  BCF    x87.6
....................                 
....................          if(RIGHT)//Si oprime SET 
0B454:  BSF    F96.1
0B456:  BTFSC  F84.1
0B458:  BRA    B49E
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B45A:  BSF    F8B.4
0B45C:  BCF    F94.4
0B45E:  MOVLW  0A
0B460:  MOVLB  8
0B462:  MOVWF  x6E
0B464:  MOVLB  0
0B466:  CALL   13A4
0B46A:  BCF    F8B.4
0B46C:  BCF    F94.4
....................             if(Flanco1 == 0) 
0B46E:  MOVLB  5
0B470:  BTFSC  x87.5
0B472:  BRA    B49C
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
0B474:  BSF    x87.5
0B476:  MOVLW  1E
0B478:  MOVLB  8
0B47A:  MOVWF  x6E
0B47C:  MOVLB  0
0B47E:  CALL   13A4
0B482:  MOVLW  64
0B484:  MOVLB  5
0B486:  ADDWF  xA2,W
0B488:  MOVWF  x9B
0B48A:  MOVLW  01
0B48C:  MOVWF  xA2
0B48E:  MOVLB  8
0B490:  CLRF   x6D
0B492:  MOVLB  0
0B494:  CALL   1424
0B498:  MOVLB  5
0B49A:  BSF    x87.7
....................                } 
....................          } 
....................             else 
0B49C:  BRA    B4A0
....................                {Flanco1 = 0;}  
0B49E:  BCF    x87.5
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
0B4A0:  BSF    F96.2
0B4A2:  BTFSC  F84.2
0B4A4:  BRA    B4E8
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B4A6:  BSF    F8B.4
0B4A8:  BCF    F94.4
0B4AA:  MOVLW  0A
0B4AC:  MOVLB  8
0B4AE:  MOVWF  x6E
0B4B0:  MOVLB  0
0B4B2:  CALL   13A4
0B4B6:  BCF    F8B.4
0B4B8:  BCF    F94.4
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1;             
0B4BA:  MOVLW  04
0B4BC:  MOVLB  8
0B4BE:  MOVWF  x66
0B4C0:  MOVLW  AF
0B4C2:  MOVWF  x6E
0B4C4:  MOVLB  0
0B4C6:  CALL   13A4
0B4CA:  MOVLB  8
0B4CC:  DECFSZ x66,F
0B4CE:  BRA    B4C0
0B4D0:  MOVLW  01
0B4D2:  MOVLB  5
0B4D4:  MOVWF  x9B
0B4D6:  MOVLB  8
0B4D8:  CLRF   x6D
0B4DA:  MOVLB  0
0B4DC:  CALL   1424
0B4E0:  MOVLW  01
0B4E2:  MOVLB  5
0B4E4:  MOVWF  xA2
0B4E6:  BSF    x87.7
....................          }       
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
0B4E8:  MOVF   x9B,W
0B4EA:  SUBLW  65
0B4EC:  BTFSS  FD8.2
0B4EE:  BRA    B798
....................        
....................       if(Ganancia>40) 
0B4F0:  MOVLB  8
0B4F2:  CLRF   x69
0B4F4:  CLRF   x68
0B4F6:  MOVLW  20
0B4F8:  MOVWF  x67
0B4FA:  MOVLW  84
0B4FC:  MOVWF  x66
0B4FE:  MOVFF  619,86D
0B502:  MOVFF  618,86C
0B506:  MOVFF  617,86B
0B50A:  MOVFF  616,86A
0B50E:  MOVLB  0
0B510:  CALL   1D90
0B514:  BNC   B522
....................       { 
....................          Ganancia=2; 
0B516:  MOVLB  6
0B518:  CLRF   x19
0B51A:  CLRF   x18
0B51C:  CLRF   x17
0B51E:  MOVLW  80
0B520:  MOVWF  x16
....................       } 
....................        
....................       if(visual==1) 
0B522:  MOVLB  5
0B524:  BTFSS  x87.7
0B526:  BRA    B5AE
....................       { 
....................          glcd_fillScreen(OFF); 
0B528:  MOVLB  8
0B52A:  CLRF   x6D
0B52C:  MOVLB  0
0B52E:  CALL   1424
....................          strcpy(Menus.Letra,"P"); 
0B532:  MOVLW  08
0B534:  MOVWF  FEA
0B536:  MOVLW  46
0B538:  MOVWF  FE9
0B53A:  MOVFF  FF2,866
0B53E:  BCF    FF2.7
0B540:  MOVLW  00
0B542:  CALL   11D4
0B546:  TBLRD*-
0B548:  TBLRD*+
0B54A:  MOVF   FF5,W
0B54C:  MOVWF  FEE
0B54E:  IORLW  00
0B550:  BNZ   B548
0B552:  MOVLB  8
0B554:  BTFSC  x66.7
0B556:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0B558:  MOVLW  08
0B55A:  MOVWF  x6E
0B55C:  MOVLW  46
0B55E:  MOVWF  x6D
0B560:  CLRF   x6F
0B562:  CLRF   x70
0B564:  MOVLW  01
0B566:  MOVWF  x71
0B568:  MOVLW  02
0B56A:  MOVWF  x72
0B56C:  MOVLB  0
0B56E:  CALL   1A52
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
0B572:  MOVFF  619,875
0B576:  MOVFF  618,874
0B57A:  MOVFF  617,873
0B57E:  MOVFF  616,872
0B582:  CALL   587C
0B586:  MOVFF  02,867
0B58A:  MOVFF  01,866
0B58E:  MOVFF  02,86C
0B592:  MOVFF  01,86B
0B596:  MOVLW  1E
0B598:  MOVLB  8
0B59A:  MOVWF  x6D
0B59C:  MOVWF  x6E
0B59E:  CLRF   x6F
0B5A0:  MOVLW  03
0B5A2:  MOVWF  x70
0B5A4:  MOVLB  0
0B5A6:  CALL   405C
....................           
....................          visual=0; 
0B5AA:  MOVLB  5
0B5AC:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0B5AE:  BSF    F92.5
0B5B0:  BTFSC  F80.5
0B5B2:  BRA    B654
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B5B4:  BSF    F8B.4
0B5B6:  BCF    F94.4
0B5B8:  MOVLW  0A
0B5BA:  MOVLB  8
0B5BC:  MOVWF  x6E
0B5BE:  MOVLB  0
0B5C0:  CALL   13A4
0B5C4:  BCF    F8B.4
0B5C6:  BCF    F94.4
....................             if(Ganancia>40) 
0B5C8:  MOVLB  8
0B5CA:  CLRF   x69
0B5CC:  CLRF   x68
0B5CE:  MOVLW  20
0B5D0:  MOVWF  x67
0B5D2:  MOVLW  84
0B5D4:  MOVWF  x66
0B5D6:  MOVFF  619,86D
0B5DA:  MOVFF  618,86C
0B5DE:  MOVFF  617,86B
0B5E2:  MOVFF  616,86A
0B5E6:  MOVLB  0
0B5E8:  CALL   1D90
0B5EC:  BNC   B610
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
0B5EE:  MOVLB  6
0B5F0:  CLRF   x19
0B5F2:  CLRF   x18
0B5F4:  MOVLW  20
0B5F6:  MOVWF  x17
0B5F8:  MOVLW  84
0B5FA:  MOVWF  x16
0B5FC:  MOVLW  64
0B5FE:  MOVLB  8
0B600:  MOVWF  x6E
0B602:  MOVLB  0
0B604:  CALL   13A4
0B608:  MOVLB  5
0B60A:  BSF    x87.7
....................             } 
....................             else 
0B60C:  BRA    B654
0B60E:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
0B610:  MOVLW  1E
0B612:  MOVLB  8
0B614:  MOVWF  x6E
0B616:  MOVLB  0
0B618:  CALL   13A4
0B61C:  BCF    FD8.1
0B61E:  MOVFF  619,875
0B622:  MOVFF  618,874
0B626:  MOVFF  617,873
0B62A:  MOVFF  616,872
0B62E:  MOVLB  8
0B630:  CLRF   x79
0B632:  CLRF   x78
0B634:  CLRF   x77
0B636:  MOVLW  7F
0B638:  MOVWF  x76
0B63A:  MOVLB  0
0B63C:  CALL   1F68
0B640:  MOVFF  03,619
0B644:  MOVFF  02,618
0B648:  MOVFF  01,617
0B64C:  MOVFF  00,616
0B650:  MOVLB  5
0B652:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0B654:  BSF    F96.0
0B656:  BTFSC  F84.0
0B658:  BRA    B6D6
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B65A:  BSF    F8B.4
0B65C:  BCF    F94.4
0B65E:  MOVLW  0A
0B660:  MOVLB  8
0B662:  MOVWF  x6E
0B664:  MOVLB  0
0B666:  CALL   13A4
0B66A:  BCF    F8B.4
0B66C:  BCF    F94.4
....................             if(Ganancia>1) 
0B66E:  MOVLB  8
0B670:  CLRF   x69
0B672:  CLRF   x68
0B674:  CLRF   x67
0B676:  MOVLW  7F
0B678:  MOVWF  x66
0B67A:  MOVFF  619,86D
0B67E:  MOVFF  618,86C
0B682:  MOVFF  617,86B
0B686:  MOVFF  616,86A
0B68A:  MOVLB  0
0B68C:  CALL   1D90
0B690:  BNC   B6D8
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
0B692:  MOVLW  1E
0B694:  MOVLB  8
0B696:  MOVWF  x6E
0B698:  MOVLB  0
0B69A:  CALL   13A4
0B69E:  BSF    FD8.1
0B6A0:  MOVFF  619,875
0B6A4:  MOVFF  618,874
0B6A8:  MOVFF  617,873
0B6AC:  MOVFF  616,872
0B6B0:  MOVLB  8
0B6B2:  CLRF   x79
0B6B4:  CLRF   x78
0B6B6:  CLRF   x77
0B6B8:  MOVLW  7F
0B6BA:  MOVWF  x76
0B6BC:  MOVLB  0
0B6BE:  CALL   1F68
0B6C2:  MOVFF  03,619
0B6C6:  MOVFF  02,618
0B6CA:  MOVFF  01,617
0B6CE:  MOVFF  00,616
0B6D2:  MOVLB  5
0B6D4:  BSF    x87.7
0B6D6:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0B6D8:  BSF    F96.1
0B6DA:  BTFSC  F84.1
0B6DC:  BRA    B704
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B6DE:  BSF    F8B.4
0B6E0:  BCF    F94.4
0B6E2:  MOVLW  0A
0B6E4:  MOVLB  8
0B6E6:  MOVWF  x6E
0B6E8:  MOVLB  0
0B6EA:  CALL   13A4
0B6EE:  BCF    F8B.4
0B6F0:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0B6F2:  MOVLW  1E
0B6F4:  MOVLB  8
0B6F6:  MOVWF  x6E
0B6F8:  MOVLB  0
0B6FA:  CALL   13A4
0B6FE:  MOVLB  5
0B700:  BSF    x87.7
0B702:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0B704:  BSF    F96.2
0B706:  BTFSC  F84.2
0B708:  BRA    B796
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B70A:  BSF    F8B.4
0B70C:  BCF    F94.4
0B70E:  MOVLW  0A
0B710:  MOVLB  8
0B712:  MOVWF  x6E
0B714:  MOVLB  0
0B716:  CALL   13A4
0B71A:  BCF    F8B.4
0B71C:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0B71E:  MOVLW  04
0B720:  MOVLB  8
0B722:  MOVWF  x66
0B724:  MOVLW  AF
0B726:  MOVWF  x6E
0B728:  MOVLB  0
0B72A:  CALL   13A4
0B72E:  MOVLB  8
0B730:  DECFSZ x66,F
0B732:  BRA    B724
0B734:  MOVLW  64
0B736:  MOVLB  5
0B738:  MOVWF  x9B
0B73A:  MOVLB  8
0B73C:  CLRF   x6D
0B73E:  MOVLB  0
0B740:  CALL   1424
0B744:  MOVLW  01
0B746:  MOVLB  5
0B748:  MOVWF  xA2
0B74A:  BSF    x87.7
....................             write_eeprom(450,(int8)Ganancia); 
0B74C:  MOVFF  619,875
0B750:  MOVFF  618,874
0B754:  MOVFF  617,873
0B758:  MOVFF  616,872
0B75C:  MOVLB  0
0B75E:  CALL   587C
0B762:  MOVFF  01,866
0B766:  MOVLW  01
0B768:  MOVWF  FAA
0B76A:  MOVLW  C2
0B76C:  MOVWF  FA9
0B76E:  MOVFF  866,FA8
0B772:  BCF    FA6.6
0B774:  BCF    FA6.7
0B776:  BSF    FA6.2
0B778:  MOVF   FF2,W
0B77A:  MOVWF  00
0B77C:  BCF    FF2.7
0B77E:  MOVLB  F
0B780:  MOVLW  55
0B782:  MOVWF  FA7
0B784:  MOVLW  AA
0B786:  MOVWF  FA7
0B788:  BSF    FA6.1
0B78A:  BTFSC  FA6.1
0B78C:  BRA    B78A
0B78E:  BCF    FA6.2
0B790:  MOVF   00,W
0B792:  IORWF  FF2,F
0B794:  MOVLB  0
0B796:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Integral 
0B798:  MOVF   x9B,W
0B79A:  SUBLW  66
0B79C:  BTFSS  FD8.2
0B79E:  BRA    BA48
....................        
....................       if(Integral>40) 
0B7A0:  MOVLB  8
0B7A2:  CLRF   x69
0B7A4:  CLRF   x68
0B7A6:  MOVLW  20
0B7A8:  MOVWF  x67
0B7AA:  MOVLW  84
0B7AC:  MOVWF  x66
0B7AE:  MOVFF  63D,86D
0B7B2:  MOVFF  63C,86C
0B7B6:  MOVFF  63B,86B
0B7BA:  MOVFF  63A,86A
0B7BE:  MOVLB  0
0B7C0:  CALL   1D90
0B7C4:  BNC   B7D2
....................       { 
....................          Integral=1; 
0B7C6:  MOVLB  6
0B7C8:  CLRF   x3D
0B7CA:  CLRF   x3C
0B7CC:  CLRF   x3B
0B7CE:  MOVLW  7F
0B7D0:  MOVWF  x3A
....................       } 
....................        
....................       if(visual==1) 
0B7D2:  MOVLB  5
0B7D4:  BTFSS  x87.7
0B7D6:  BRA    B85E
....................       { 
....................          glcd_fillScreen(OFF); 
0B7D8:  MOVLB  8
0B7DA:  CLRF   x6D
0B7DC:  MOVLB  0
0B7DE:  CALL   1424
....................          strcpy(Menus.Letra,"I"); 
0B7E2:  MOVLW  08
0B7E4:  MOVWF  FEA
0B7E6:  MOVLW  46
0B7E8:  MOVWF  FE9
0B7EA:  MOVFF  FF2,866
0B7EE:  BCF    FF2.7
0B7F0:  MOVLW  00
0B7F2:  CALL   11F4
0B7F6:  TBLRD*-
0B7F8:  TBLRD*+
0B7FA:  MOVF   FF5,W
0B7FC:  MOVWF  FEE
0B7FE:  IORLW  00
0B800:  BNZ   B7F8
0B802:  MOVLB  8
0B804:  BTFSC  x66.7
0B806:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0B808:  MOVLW  08
0B80A:  MOVWF  x6E
0B80C:  MOVLW  46
0B80E:  MOVWF  x6D
0B810:  CLRF   x6F
0B812:  CLRF   x70
0B814:  MOVLW  01
0B816:  MOVWF  x71
0B818:  MOVLW  02
0B81A:  MOVWF  x72
0B81C:  MOVLB  0
0B81E:  CALL   1A52
....................           
....................          displayTemperatura(Integral,30,30,0,3); 
0B822:  MOVFF  63D,875
0B826:  MOVFF  63C,874
0B82A:  MOVFF  63B,873
0B82E:  MOVFF  63A,872
0B832:  CALL   587C
0B836:  MOVFF  02,867
0B83A:  MOVFF  01,866
0B83E:  MOVFF  02,86C
0B842:  MOVFF  01,86B
0B846:  MOVLW  1E
0B848:  MOVLB  8
0B84A:  MOVWF  x6D
0B84C:  MOVWF  x6E
0B84E:  CLRF   x6F
0B850:  MOVLW  03
0B852:  MOVWF  x70
0B854:  MOVLB  0
0B856:  CALL   405C
....................           
....................          visual=0; 
0B85A:  MOVLB  5
0B85C:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0B85E:  BSF    F92.5
0B860:  BTFSC  F80.5
0B862:  BRA    B904
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B864:  BSF    F8B.4
0B866:  BCF    F94.4
0B868:  MOVLW  0A
0B86A:  MOVLB  8
0B86C:  MOVWF  x6E
0B86E:  MOVLB  0
0B870:  CALL   13A4
0B874:  BCF    F8B.4
0B876:  BCF    F94.4
....................             if(Integral>40) 
0B878:  MOVLB  8
0B87A:  CLRF   x69
0B87C:  CLRF   x68
0B87E:  MOVLW  20
0B880:  MOVWF  x67
0B882:  MOVLW  84
0B884:  MOVWF  x66
0B886:  MOVFF  63D,86D
0B88A:  MOVFF  63C,86C
0B88E:  MOVFF  63B,86B
0B892:  MOVFF  63A,86A
0B896:  MOVLB  0
0B898:  CALL   1D90
0B89C:  BNC   B8C0
....................             { 
....................                Integral=40;delay_ms(100);visual=1; 
0B89E:  MOVLB  6
0B8A0:  CLRF   x3D
0B8A2:  CLRF   x3C
0B8A4:  MOVLW  20
0B8A6:  MOVWF  x3B
0B8A8:  MOVLW  84
0B8AA:  MOVWF  x3A
0B8AC:  MOVLW  64
0B8AE:  MOVLB  8
0B8B0:  MOVWF  x6E
0B8B2:  MOVLB  0
0B8B4:  CALL   13A4
0B8B8:  MOVLB  5
0B8BA:  BSF    x87.7
....................             } 
....................             else 
0B8BC:  BRA    B904
0B8BE:  MOVLB  0
....................             { 
....................                delay_ms(30);Integral+=1.0;visual=1; 
0B8C0:  MOVLW  1E
0B8C2:  MOVLB  8
0B8C4:  MOVWF  x6E
0B8C6:  MOVLB  0
0B8C8:  CALL   13A4
0B8CC:  BCF    FD8.1
0B8CE:  MOVFF  63D,875
0B8D2:  MOVFF  63C,874
0B8D6:  MOVFF  63B,873
0B8DA:  MOVFF  63A,872
0B8DE:  MOVLB  8
0B8E0:  CLRF   x79
0B8E2:  CLRF   x78
0B8E4:  CLRF   x77
0B8E6:  MOVLW  7F
0B8E8:  MOVWF  x76
0B8EA:  MOVLB  0
0B8EC:  CALL   1F68
0B8F0:  MOVFF  03,63D
0B8F4:  MOVFF  02,63C
0B8F8:  MOVFF  01,63B
0B8FC:  MOVFF  00,63A
0B900:  MOVLB  5
0B902:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0B904:  BSF    F96.0
0B906:  BTFSC  F84.0
0B908:  BRA    B986
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B90A:  BSF    F8B.4
0B90C:  BCF    F94.4
0B90E:  MOVLW  0A
0B910:  MOVLB  8
0B912:  MOVWF  x6E
0B914:  MOVLB  0
0B916:  CALL   13A4
0B91A:  BCF    F8B.4
0B91C:  BCF    F94.4
....................             if(Integral>1) 
0B91E:  MOVLB  8
0B920:  CLRF   x69
0B922:  CLRF   x68
0B924:  CLRF   x67
0B926:  MOVLW  7F
0B928:  MOVWF  x66
0B92A:  MOVFF  63D,86D
0B92E:  MOVFF  63C,86C
0B932:  MOVFF  63B,86B
0B936:  MOVFF  63A,86A
0B93A:  MOVLB  0
0B93C:  CALL   1D90
0B940:  BNC   B988
....................             { 
....................                delay_ms(30);Integral-=1.0;visual=1;      
0B942:  MOVLW  1E
0B944:  MOVLB  8
0B946:  MOVWF  x6E
0B948:  MOVLB  0
0B94A:  CALL   13A4
0B94E:  BSF    FD8.1
0B950:  MOVFF  63D,875
0B954:  MOVFF  63C,874
0B958:  MOVFF  63B,873
0B95C:  MOVFF  63A,872
0B960:  MOVLB  8
0B962:  CLRF   x79
0B964:  CLRF   x78
0B966:  CLRF   x77
0B968:  MOVLW  7F
0B96A:  MOVWF  x76
0B96C:  MOVLB  0
0B96E:  CALL   1F68
0B972:  MOVFF  03,63D
0B976:  MOVFF  02,63C
0B97A:  MOVFF  01,63B
0B97E:  MOVFF  00,63A
0B982:  MOVLB  5
0B984:  BSF    x87.7
0B986:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0B988:  BSF    F96.1
0B98A:  BTFSC  F84.1
0B98C:  BRA    B9B4
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B98E:  BSF    F8B.4
0B990:  BCF    F94.4
0B992:  MOVLW  0A
0B994:  MOVLB  8
0B996:  MOVWF  x6E
0B998:  MOVLB  0
0B99A:  CALL   13A4
0B99E:  BCF    F8B.4
0B9A0:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0B9A2:  MOVLW  1E
0B9A4:  MOVLB  8
0B9A6:  MOVWF  x6E
0B9A8:  MOVLB  0
0B9AA:  CALL   13A4
0B9AE:  MOVLB  5
0B9B0:  BSF    x87.7
0B9B2:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0B9B4:  BSF    F96.2
0B9B6:  BTFSC  F84.2
0B9B8:  BRA    BA46
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0B9BA:  BSF    F8B.4
0B9BC:  BCF    F94.4
0B9BE:  MOVLW  0A
0B9C0:  MOVLB  8
0B9C2:  MOVWF  x6E
0B9C4:  MOVLB  0
0B9C6:  CALL   13A4
0B9CA:  BCF    F8B.4
0B9CC:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0B9CE:  MOVLW  04
0B9D0:  MOVLB  8
0B9D2:  MOVWF  x66
0B9D4:  MOVLW  AF
0B9D6:  MOVWF  x6E
0B9D8:  MOVLB  0
0B9DA:  CALL   13A4
0B9DE:  MOVLB  8
0B9E0:  DECFSZ x66,F
0B9E2:  BRA    B9D4
0B9E4:  MOVLW  64
0B9E6:  MOVLB  5
0B9E8:  MOVWF  x9B
0B9EA:  MOVLB  8
0B9EC:  CLRF   x6D
0B9EE:  MOVLB  0
0B9F0:  CALL   1424
0B9F4:  MOVLW  01
0B9F6:  MOVLB  5
0B9F8:  MOVWF  xA2
0B9FA:  BSF    x87.7
....................             write_eeprom(470,(int8)Integral); 
0B9FC:  MOVFF  63D,875
0BA00:  MOVFF  63C,874
0BA04:  MOVFF  63B,873
0BA08:  MOVFF  63A,872
0BA0C:  MOVLB  0
0BA0E:  CALL   587C
0BA12:  MOVFF  01,866
0BA16:  MOVLW  01
0BA18:  MOVWF  FAA
0BA1A:  MOVLW  D6
0BA1C:  MOVWF  FA9
0BA1E:  MOVFF  866,FA8
0BA22:  BCF    FA6.6
0BA24:  BCF    FA6.7
0BA26:  BSF    FA6.2
0BA28:  MOVF   FF2,W
0BA2A:  MOVWF  00
0BA2C:  BCF    FF2.7
0BA2E:  MOVLB  F
0BA30:  MOVLW  55
0BA32:  MOVWF  FA7
0BA34:  MOVLW  AA
0BA36:  MOVWF  FA7
0BA38:  BSF    FA6.1
0BA3A:  BTFSC  FA6.1
0BA3C:  BRA    BA3A
0BA3E:  BCF    FA6.2
0BA40:  MOVF   00,W
0BA42:  IORWF  FF2,F
0BA44:  MOVLB  0
0BA46:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Derivativo 
0BA48:  MOVF   x9B,W
0BA4A:  SUBLW  67
0BA4C:  BTFSS  FD8.2
0BA4E:  BRA    BCF8
....................        
....................       if(Derivativo>200) 
0BA50:  MOVLB  8
0BA52:  CLRF   x69
0BA54:  CLRF   x68
0BA56:  MOVLW  48
0BA58:  MOVWF  x67
0BA5A:  MOVLW  86
0BA5C:  MOVWF  x66
0BA5E:  MOVFF  641,86D
0BA62:  MOVFF  640,86C
0BA66:  MOVFF  63F,86B
0BA6A:  MOVFF  63E,86A
0BA6E:  MOVLB  0
0BA70:  CALL   1D90
0BA74:  BNC   BA82
....................       { 
....................          Derivativo=2; 
0BA76:  MOVLB  6
0BA78:  CLRF   x41
0BA7A:  CLRF   x40
0BA7C:  CLRF   x3F
0BA7E:  MOVLW  80
0BA80:  MOVWF  x3E
....................       } 
....................        
....................       if(visual==1) 
0BA82:  MOVLB  5
0BA84:  BTFSS  x87.7
0BA86:  BRA    BB0E
....................       { 
....................          glcd_fillScreen(OFF); 
0BA88:  MOVLB  8
0BA8A:  CLRF   x6D
0BA8C:  MOVLB  0
0BA8E:  CALL   1424
....................          strcpy(Menus.Letra,"D"); 
0BA92:  MOVLW  08
0BA94:  MOVWF  FEA
0BA96:  MOVLW  46
0BA98:  MOVWF  FE9
0BA9A:  MOVFF  FF2,866
0BA9E:  BCF    FF2.7
0BAA0:  MOVLW  00
0BAA2:  CALL   1214
0BAA6:  TBLRD*-
0BAA8:  TBLRD*+
0BAAA:  MOVF   FF5,W
0BAAC:  MOVWF  FEE
0BAAE:  IORLW  00
0BAB0:  BNZ   BAA8
0BAB2:  MOVLB  8
0BAB4:  BTFSC  x66.7
0BAB6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0BAB8:  MOVLW  08
0BABA:  MOVWF  x6E
0BABC:  MOVLW  46
0BABE:  MOVWF  x6D
0BAC0:  CLRF   x6F
0BAC2:  CLRF   x70
0BAC4:  MOVLW  01
0BAC6:  MOVWF  x71
0BAC8:  MOVLW  02
0BACA:  MOVWF  x72
0BACC:  MOVLB  0
0BACE:  CALL   1A52
....................           
....................          displayTemperatura(Derivativo,30,30,0,3); 
0BAD2:  MOVFF  641,875
0BAD6:  MOVFF  640,874
0BADA:  MOVFF  63F,873
0BADE:  MOVFF  63E,872
0BAE2:  CALL   587C
0BAE6:  MOVFF  02,867
0BAEA:  MOVFF  01,866
0BAEE:  MOVFF  02,86C
0BAF2:  MOVFF  01,86B
0BAF6:  MOVLW  1E
0BAF8:  MOVLB  8
0BAFA:  MOVWF  x6D
0BAFC:  MOVWF  x6E
0BAFE:  CLRF   x6F
0BB00:  MOVLW  03
0BB02:  MOVWF  x70
0BB04:  MOVLB  0
0BB06:  CALL   405C
....................           
....................          visual=0; 
0BB0A:  MOVLB  5
0BB0C:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0BB0E:  BSF    F92.5
0BB10:  BTFSC  F80.5
0BB12:  BRA    BBB4
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BB14:  BSF    F8B.4
0BB16:  BCF    F94.4
0BB18:  MOVLW  0A
0BB1A:  MOVLB  8
0BB1C:  MOVWF  x6E
0BB1E:  MOVLB  0
0BB20:  CALL   13A4
0BB24:  BCF    F8B.4
0BB26:  BCF    F94.4
....................             if(Derivativo>200) 
0BB28:  MOVLB  8
0BB2A:  CLRF   x69
0BB2C:  CLRF   x68
0BB2E:  MOVLW  48
0BB30:  MOVWF  x67
0BB32:  MOVLW  86
0BB34:  MOVWF  x66
0BB36:  MOVFF  641,86D
0BB3A:  MOVFF  640,86C
0BB3E:  MOVFF  63F,86B
0BB42:  MOVFF  63E,86A
0BB46:  MOVLB  0
0BB48:  CALL   1D90
0BB4C:  BNC   BB70
....................             { 
....................                Derivativo=200;delay_ms(100);visual=1; 
0BB4E:  MOVLB  6
0BB50:  CLRF   x41
0BB52:  CLRF   x40
0BB54:  MOVLW  48
0BB56:  MOVWF  x3F
0BB58:  MOVLW  86
0BB5A:  MOVWF  x3E
0BB5C:  MOVLW  64
0BB5E:  MOVLB  8
0BB60:  MOVWF  x6E
0BB62:  MOVLB  0
0BB64:  CALL   13A4
0BB68:  MOVLB  5
0BB6A:  BSF    x87.7
....................             } 
....................             else 
0BB6C:  BRA    BBB4
0BB6E:  MOVLB  0
....................             { 
....................                delay_ms(30);Derivativo+=1.0;visual=1; 
0BB70:  MOVLW  1E
0BB72:  MOVLB  8
0BB74:  MOVWF  x6E
0BB76:  MOVLB  0
0BB78:  CALL   13A4
0BB7C:  BCF    FD8.1
0BB7E:  MOVFF  641,875
0BB82:  MOVFF  640,874
0BB86:  MOVFF  63F,873
0BB8A:  MOVFF  63E,872
0BB8E:  MOVLB  8
0BB90:  CLRF   x79
0BB92:  CLRF   x78
0BB94:  CLRF   x77
0BB96:  MOVLW  7F
0BB98:  MOVWF  x76
0BB9A:  MOVLB  0
0BB9C:  CALL   1F68
0BBA0:  MOVFF  03,641
0BBA4:  MOVFF  02,640
0BBA8:  MOVFF  01,63F
0BBAC:  MOVFF  00,63E
0BBB0:  MOVLB  5
0BBB2:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0BBB4:  BSF    F96.0
0BBB6:  BTFSC  F84.0
0BBB8:  BRA    BC36
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BBBA:  BSF    F8B.4
0BBBC:  BCF    F94.4
0BBBE:  MOVLW  0A
0BBC0:  MOVLB  8
0BBC2:  MOVWF  x6E
0BBC4:  MOVLB  0
0BBC6:  CALL   13A4
0BBCA:  BCF    F8B.4
0BBCC:  BCF    F94.4
....................             if(Derivativo>1) 
0BBCE:  MOVLB  8
0BBD0:  CLRF   x69
0BBD2:  CLRF   x68
0BBD4:  CLRF   x67
0BBD6:  MOVLW  7F
0BBD8:  MOVWF  x66
0BBDA:  MOVFF  641,86D
0BBDE:  MOVFF  640,86C
0BBE2:  MOVFF  63F,86B
0BBE6:  MOVFF  63E,86A
0BBEA:  MOVLB  0
0BBEC:  CALL   1D90
0BBF0:  BNC   BC38
....................             { 
....................                delay_ms(30);Derivativo-=1.0;visual=1;      
0BBF2:  MOVLW  1E
0BBF4:  MOVLB  8
0BBF6:  MOVWF  x6E
0BBF8:  MOVLB  0
0BBFA:  CALL   13A4
0BBFE:  BSF    FD8.1
0BC00:  MOVFF  641,875
0BC04:  MOVFF  640,874
0BC08:  MOVFF  63F,873
0BC0C:  MOVFF  63E,872
0BC10:  MOVLB  8
0BC12:  CLRF   x79
0BC14:  CLRF   x78
0BC16:  CLRF   x77
0BC18:  MOVLW  7F
0BC1A:  MOVWF  x76
0BC1C:  MOVLB  0
0BC1E:  CALL   1F68
0BC22:  MOVFF  03,641
0BC26:  MOVFF  02,640
0BC2A:  MOVFF  01,63F
0BC2E:  MOVFF  00,63E
0BC32:  MOVLB  5
0BC34:  BSF    x87.7
0BC36:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0BC38:  BSF    F96.1
0BC3A:  BTFSC  F84.1
0BC3C:  BRA    BC64
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BC3E:  BSF    F8B.4
0BC40:  BCF    F94.4
0BC42:  MOVLW  0A
0BC44:  MOVLB  8
0BC46:  MOVWF  x6E
0BC48:  MOVLB  0
0BC4A:  CALL   13A4
0BC4E:  BCF    F8B.4
0BC50:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0BC52:  MOVLW  1E
0BC54:  MOVLB  8
0BC56:  MOVWF  x6E
0BC58:  MOVLB  0
0BC5A:  CALL   13A4
0BC5E:  MOVLB  5
0BC60:  BSF    x87.7
0BC62:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0BC64:  BSF    F96.2
0BC66:  BTFSC  F84.2
0BC68:  BRA    BCF6
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BC6A:  BSF    F8B.4
0BC6C:  BCF    F94.4
0BC6E:  MOVLW  0A
0BC70:  MOVLB  8
0BC72:  MOVWF  x6E
0BC74:  MOVLB  0
0BC76:  CALL   13A4
0BC7A:  BCF    F8B.4
0BC7C:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0BC7E:  MOVLW  04
0BC80:  MOVLB  8
0BC82:  MOVWF  x66
0BC84:  MOVLW  AF
0BC86:  MOVWF  x6E
0BC88:  MOVLB  0
0BC8A:  CALL   13A4
0BC8E:  MOVLB  8
0BC90:  DECFSZ x66,F
0BC92:  BRA    BC84
0BC94:  MOVLW  64
0BC96:  MOVLB  5
0BC98:  MOVWF  x9B
0BC9A:  MOVLB  8
0BC9C:  CLRF   x6D
0BC9E:  MOVLB  0
0BCA0:  CALL   1424
0BCA4:  MOVLW  01
0BCA6:  MOVLB  5
0BCA8:  MOVWF  xA2
0BCAA:  BSF    x87.7
....................             write_eeprom(471,(int8)Derivativo); 
0BCAC:  MOVFF  641,875
0BCB0:  MOVFF  640,874
0BCB4:  MOVFF  63F,873
0BCB8:  MOVFF  63E,872
0BCBC:  MOVLB  0
0BCBE:  CALL   587C
0BCC2:  MOVFF  01,866
0BCC6:  MOVLW  01
0BCC8:  MOVWF  FAA
0BCCA:  MOVLW  D7
0BCCC:  MOVWF  FA9
0BCCE:  MOVFF  866,FA8
0BCD2:  BCF    FA6.6
0BCD4:  BCF    FA6.7
0BCD6:  BSF    FA6.2
0BCD8:  MOVF   FF2,W
0BCDA:  MOVWF  00
0BCDC:  BCF    FF2.7
0BCDE:  MOVLB  F
0BCE0:  MOVLW  55
0BCE2:  MOVWF  FA7
0BCE4:  MOVLW  AA
0BCE6:  MOVWF  FA7
0BCE8:  BSF    FA6.1
0BCEA:  BTFSC  FA6.1
0BCEC:  BRA    BCEA
0BCEE:  BCF    FA6.2
0BCF0:  MOVF   00,W
0BCF2:  IORWF  FF2,F
0BCF4:  MOVLB  0
0BCF6:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ganancia2 
0BCF8:  MOVF   x9B,W
0BCFA:  SUBLW  68
0BCFC:  BTFSS  FD8.2
0BCFE:  BRA    BFAA
....................        
....................       if(Tciclo>40) 
0BD00:  MOVLB  8
0BD02:  CLRF   x69
0BD04:  CLRF   x68
0BD06:  MOVLW  20
0BD08:  MOVWF  x67
0BD0A:  MOVLW  84
0BD0C:  MOVWF  x66
0BD0E:  MOVFF  5FD,86D
0BD12:  MOVFF  5FC,86C
0BD16:  MOVFF  5FB,86B
0BD1A:  MOVFF  5FA,86A
0BD1E:  MOVLB  0
0BD20:  CALL   1D90
0BD24:  BNC   BD34
....................       { 
....................          Tciclo=40; 
0BD26:  MOVLB  5
0BD28:  CLRF   xFD
0BD2A:  CLRF   xFC
0BD2C:  MOVLW  20
0BD2E:  MOVWF  xFB
0BD30:  MOVLW  84
0BD32:  MOVWF  xFA
....................       } 
....................        
....................       if(visual==1) 
0BD34:  MOVLB  5
0BD36:  BTFSS  x87.7
0BD38:  BRA    BDC0
....................       { 
....................          glcd_fillScreen(OFF); 
0BD3A:  MOVLB  8
0BD3C:  CLRF   x6D
0BD3E:  MOVLB  0
0BD40:  CALL   1424
....................          strcpy(Menus.Letra,"Tciclo"); 
0BD44:  MOVLW  08
0BD46:  MOVWF  FEA
0BD48:  MOVLW  46
0BD4A:  MOVWF  FE9
0BD4C:  MOVFF  FF2,866
0BD50:  BCF    FF2.7
0BD52:  MOVLW  00
0BD54:  CALL   104E
0BD58:  TBLRD*-
0BD5A:  TBLRD*+
0BD5C:  MOVF   FF5,W
0BD5E:  MOVWF  FEE
0BD60:  IORLW  00
0BD62:  BNZ   BD5A
0BD64:  MOVLB  8
0BD66:  BTFSC  x66.7
0BD68:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0BD6A:  MOVLW  08
0BD6C:  MOVWF  x6E
0BD6E:  MOVLW  46
0BD70:  MOVWF  x6D
0BD72:  CLRF   x6F
0BD74:  CLRF   x70
0BD76:  MOVLW  01
0BD78:  MOVWF  x71
0BD7A:  MOVLW  02
0BD7C:  MOVWF  x72
0BD7E:  MOVLB  0
0BD80:  CALL   1A52
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
0BD84:  MOVFF  5FD,875
0BD88:  MOVFF  5FC,874
0BD8C:  MOVFF  5FB,873
0BD90:  MOVFF  5FA,872
0BD94:  CALL   587C
0BD98:  MOVFF  02,867
0BD9C:  MOVFF  01,866
0BDA0:  MOVFF  02,86C
0BDA4:  MOVFF  01,86B
0BDA8:  MOVLW  1E
0BDAA:  MOVLB  8
0BDAC:  MOVWF  x6D
0BDAE:  MOVWF  x6E
0BDB0:  CLRF   x6F
0BDB2:  MOVLW  03
0BDB4:  MOVWF  x70
0BDB6:  MOVLB  0
0BDB8:  CALL   405C
....................           
....................          visual=0; 
0BDBC:  MOVLB  5
0BDBE:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0BDC0:  BSF    F92.5
0BDC2:  BTFSC  F80.5
0BDC4:  BRA    BE66
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BDC6:  BSF    F8B.4
0BDC8:  BCF    F94.4
0BDCA:  MOVLW  0A
0BDCC:  MOVLB  8
0BDCE:  MOVWF  x6E
0BDD0:  MOVLB  0
0BDD2:  CALL   13A4
0BDD6:  BCF    F8B.4
0BDD8:  BCF    F94.4
....................             if(Tciclo>40) 
0BDDA:  MOVLB  8
0BDDC:  CLRF   x69
0BDDE:  CLRF   x68
0BDE0:  MOVLW  20
0BDE2:  MOVWF  x67
0BDE4:  MOVLW  84
0BDE6:  MOVWF  x66
0BDE8:  MOVFF  5FD,86D
0BDEC:  MOVFF  5FC,86C
0BDF0:  MOVFF  5FB,86B
0BDF4:  MOVFF  5FA,86A
0BDF8:  MOVLB  0
0BDFA:  CALL   1D90
0BDFE:  BNC   BE22
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
0BE00:  MOVLB  5
0BE02:  CLRF   xFD
0BE04:  CLRF   xFC
0BE06:  MOVLW  20
0BE08:  MOVWF  xFB
0BE0A:  MOVLW  84
0BE0C:  MOVWF  xFA
0BE0E:  MOVLW  64
0BE10:  MOVLB  8
0BE12:  MOVWF  x6E
0BE14:  MOVLB  0
0BE16:  CALL   13A4
0BE1A:  MOVLB  5
0BE1C:  BSF    x87.7
....................             } 
....................             else 
0BE1E:  BRA    BE66
0BE20:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
0BE22:  MOVLW  1E
0BE24:  MOVLB  8
0BE26:  MOVWF  x6E
0BE28:  MOVLB  0
0BE2A:  CALL   13A4
0BE2E:  BCF    FD8.1
0BE30:  MOVFF  5FD,875
0BE34:  MOVFF  5FC,874
0BE38:  MOVFF  5FB,873
0BE3C:  MOVFF  5FA,872
0BE40:  MOVLB  8
0BE42:  CLRF   x79
0BE44:  CLRF   x78
0BE46:  CLRF   x77
0BE48:  MOVLW  7F
0BE4A:  MOVWF  x76
0BE4C:  MOVLB  0
0BE4E:  CALL   1F68
0BE52:  MOVFF  03,5FD
0BE56:  MOVFF  02,5FC
0BE5A:  MOVFF  01,5FB
0BE5E:  MOVFF  00,5FA
0BE62:  MOVLB  5
0BE64:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0BE66:  BSF    F96.0
0BE68:  BTFSC  F84.0
0BE6A:  BRA    BEE8
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BE6C:  BSF    F8B.4
0BE6E:  BCF    F94.4
0BE70:  MOVLW  0A
0BE72:  MOVLB  8
0BE74:  MOVWF  x6E
0BE76:  MOVLB  0
0BE78:  CALL   13A4
0BE7C:  BCF    F8B.4
0BE7E:  BCF    F94.4
....................             if(Tciclo>1) 
0BE80:  MOVLB  8
0BE82:  CLRF   x69
0BE84:  CLRF   x68
0BE86:  CLRF   x67
0BE88:  MOVLW  7F
0BE8A:  MOVWF  x66
0BE8C:  MOVFF  5FD,86D
0BE90:  MOVFF  5FC,86C
0BE94:  MOVFF  5FB,86B
0BE98:  MOVFF  5FA,86A
0BE9C:  MOVLB  0
0BE9E:  CALL   1D90
0BEA2:  BNC   BEEA
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
0BEA4:  MOVLW  1E
0BEA6:  MOVLB  8
0BEA8:  MOVWF  x6E
0BEAA:  MOVLB  0
0BEAC:  CALL   13A4
0BEB0:  BSF    FD8.1
0BEB2:  MOVFF  5FD,875
0BEB6:  MOVFF  5FC,874
0BEBA:  MOVFF  5FB,873
0BEBE:  MOVFF  5FA,872
0BEC2:  MOVLB  8
0BEC4:  CLRF   x79
0BEC6:  CLRF   x78
0BEC8:  CLRF   x77
0BECA:  MOVLW  7F
0BECC:  MOVWF  x76
0BECE:  MOVLB  0
0BED0:  CALL   1F68
0BED4:  MOVFF  03,5FD
0BED8:  MOVFF  02,5FC
0BEDC:  MOVFF  01,5FB
0BEE0:  MOVFF  00,5FA
0BEE4:  MOVLB  5
0BEE6:  BSF    x87.7
0BEE8:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0BEEA:  BSF    F96.1
0BEEC:  BTFSC  F84.1
0BEEE:  BRA    BF16
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BEF0:  BSF    F8B.4
0BEF2:  BCF    F94.4
0BEF4:  MOVLW  0A
0BEF6:  MOVLB  8
0BEF8:  MOVWF  x6E
0BEFA:  MOVLB  0
0BEFC:  CALL   13A4
0BF00:  BCF    F8B.4
0BF02:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0BF04:  MOVLW  1E
0BF06:  MOVLB  8
0BF08:  MOVWF  x6E
0BF0A:  MOVLB  0
0BF0C:  CALL   13A4
0BF10:  MOVLB  5
0BF12:  BSF    x87.7
0BF14:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0BF16:  BSF    F96.2
0BF18:  BTFSC  F84.2
0BF1A:  BRA    BFA8
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0BF1C:  BSF    F8B.4
0BF1E:  BCF    F94.4
0BF20:  MOVLW  0A
0BF22:  MOVLB  8
0BF24:  MOVWF  x6E
0BF26:  MOVLB  0
0BF28:  CALL   13A4
0BF2C:  BCF    F8B.4
0BF2E:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0BF30:  MOVLW  04
0BF32:  MOVLB  8
0BF34:  MOVWF  x66
0BF36:  MOVLW  AF
0BF38:  MOVWF  x6E
0BF3A:  MOVLB  0
0BF3C:  CALL   13A4
0BF40:  MOVLB  8
0BF42:  DECFSZ x66,F
0BF44:  BRA    BF36
0BF46:  MOVLW  64
0BF48:  MOVLB  5
0BF4A:  MOVWF  x9B
0BF4C:  MOVLB  8
0BF4E:  CLRF   x6D
0BF50:  MOVLB  0
0BF52:  CALL   1424
0BF56:  MOVLW  01
0BF58:  MOVLB  5
0BF5A:  MOVWF  xA2
0BF5C:  BSF    x87.7
....................             write_eeprom(451,(int8)Tciclo); 
0BF5E:  MOVFF  5FD,875
0BF62:  MOVFF  5FC,874
0BF66:  MOVFF  5FB,873
0BF6A:  MOVFF  5FA,872
0BF6E:  MOVLB  0
0BF70:  CALL   587C
0BF74:  MOVFF  01,866
0BF78:  MOVLW  01
0BF7A:  MOVWF  FAA
0BF7C:  MOVLW  C3
0BF7E:  MOVWF  FA9
0BF80:  MOVFF  866,FA8
0BF84:  BCF    FA6.6
0BF86:  BCF    FA6.7
0BF88:  BSF    FA6.2
0BF8A:  MOVF   FF2,W
0BF8C:  MOVWF  00
0BF8E:  BCF    FF2.7
0BF90:  MOVLB  F
0BF92:  MOVLW  55
0BF94:  MOVWF  FA7
0BF96:  MOVLW  AA
0BF98:  MOVWF  FA7
0BF9A:  BSF    FA6.1
0BF9C:  BTFSC  FA6.1
0BF9E:  BRA    BF9C
0BFA0:  BCF    FA6.2
0BFA2:  MOVF   00,W
0BFA4:  IORWF  FF2,F
0BFA6:  MOVLB  0
0BFA8:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Ajuste 
0BFAA:  MOVF   x9B,W
0BFAC:  SUBLW  69
0BFAE:  BTFSS  FD8.2
0BFB0:  BRA    C1D0
....................        
....................       if(Ajuste>100) 
0BFB2:  MOVF   x8A,W
0BFB4:  SUBLW  64
0BFB6:  BC    BFBA
....................       { 
....................          Ajuste=0; 
0BFB8:  CLRF   x8A
....................       } 
....................        
....................       if(visual==1) 
0BFBA:  BTFSS  x87.7
0BFBC:  BRA    C026
....................       { 
....................          glcd_fillScreen(OFF); 
0BFBE:  MOVLB  8
0BFC0:  CLRF   x6D
0BFC2:  MOVLB  0
0BFC4:  CALL   1424
....................          strcpy(Menus.Letra,"Ajuste"); 
0BFC8:  MOVLW  08
0BFCA:  MOVWF  FEA
0BFCC:  MOVLW  46
0BFCE:  MOVWF  FE9
0BFD0:  MOVFF  FF2,866
0BFD4:  BCF    FF2.7
0BFD6:  MOVLW  00
0BFD8:  CALL   1234
0BFDC:  TBLRD*-
0BFDE:  TBLRD*+
0BFE0:  MOVF   FF5,W
0BFE2:  MOVWF  FEE
0BFE4:  IORLW  00
0BFE6:  BNZ   BFDE
0BFE8:  MOVLB  8
0BFEA:  BTFSC  x66.7
0BFEC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0BFEE:  MOVLW  08
0BFF0:  MOVWF  x6E
0BFF2:  MOVLW  46
0BFF4:  MOVWF  x6D
0BFF6:  CLRF   x6F
0BFF8:  CLRF   x70
0BFFA:  MOVLW  01
0BFFC:  MOVWF  x71
0BFFE:  MOVLW  02
0C000:  MOVWF  x72
0C002:  MOVLB  0
0C004:  CALL   1A52
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
0C008:  MOVLB  8
0C00A:  CLRF   x6C
0C00C:  MOVFF  58A,86B
0C010:  MOVLW  1E
0C012:  MOVWF  x6D
0C014:  MOVWF  x6E
0C016:  CLRF   x6F
0C018:  MOVLW  03
0C01A:  MOVWF  x70
0C01C:  MOVLB  0
0C01E:  CALL   405C
....................           
....................          visual=0; 
0C022:  MOVLB  5
0C024:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0C026:  BSF    F92.5
0C028:  BTFSC  F80.5
0C02A:  BRA    C0B6
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C02C:  BSF    F8B.4
0C02E:  BCF    F94.4
0C030:  MOVLW  0A
0C032:  MOVLB  8
0C034:  MOVWF  x6E
0C036:  MOVLB  0
0C038:  CALL   13A4
0C03C:  BCF    F8B.4
0C03E:  BCF    F94.4
....................             if(Ajuste>100) 
0C040:  MOVLB  5
0C042:  MOVF   x8A,W
0C044:  SUBLW  64
0C046:  BC    C05C
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
0C048:  MOVLW  64
0C04A:  MOVWF  x8A
0C04C:  MOVLB  8
0C04E:  MOVWF  x6E
0C050:  MOVLB  0
0C052:  CALL   13A4
0C056:  MOVLB  5
0C058:  BSF    x87.7
....................             } 
....................             else 
0C05A:  BRA    C0B6
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
0C05C:  MOVLW  1E
0C05E:  MOVLB  8
0C060:  MOVWF  x6E
0C062:  MOVLB  0
0C064:  CALL   13A4
0C068:  MOVLB  8
0C06A:  CLRF   x73
0C06C:  MOVFF  58A,872
0C070:  MOVLB  0
0C072:  CALL   1D5A
0C076:  BCF    FD8.1
0C078:  MOVFF  03,875
0C07C:  MOVFF  02,874
0C080:  MOVFF  01,873
0C084:  MOVFF  00,872
0C088:  MOVLB  8
0C08A:  CLRF   x79
0C08C:  CLRF   x78
0C08E:  CLRF   x77
0C090:  MOVLW  7F
0C092:  MOVWF  x76
0C094:  MOVLB  0
0C096:  CALL   1F68
0C09A:  MOVFF  03,875
0C09E:  MOVFF  02,874
0C0A2:  MOVFF  01,873
0C0A6:  MOVFF  00,872
0C0AA:  CALL   587C
0C0AE:  MOVFF  01,58A
0C0B2:  MOVLB  5
0C0B4:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0C0B6:  BSF    F96.0
0C0B8:  BTFSC  F84.0
0C0BA:  BRA    C130
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C0BC:  BSF    F8B.4
0C0BE:  BCF    F94.4
0C0C0:  MOVLW  0A
0C0C2:  MOVLB  8
0C0C4:  MOVWF  x6E
0C0C6:  MOVLB  0
0C0C8:  CALL   13A4
0C0CC:  BCF    F8B.4
0C0CE:  BCF    F94.4
....................             if(Ajuste>0) 
0C0D0:  MOVLB  5
0C0D2:  MOVF   x8A,F
0C0D4:  BZ    C130
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
0C0D6:  MOVLW  1E
0C0D8:  MOVLB  8
0C0DA:  MOVWF  x6E
0C0DC:  MOVLB  0
0C0DE:  CALL   13A4
0C0E2:  MOVLB  8
0C0E4:  CLRF   x73
0C0E6:  MOVFF  58A,872
0C0EA:  MOVLB  0
0C0EC:  CALL   1D5A
0C0F0:  BSF    FD8.1
0C0F2:  MOVFF  03,875
0C0F6:  MOVFF  02,874
0C0FA:  MOVFF  01,873
0C0FE:  MOVFF  00,872
0C102:  MOVLB  8
0C104:  CLRF   x79
0C106:  CLRF   x78
0C108:  CLRF   x77
0C10A:  MOVLW  7F
0C10C:  MOVWF  x76
0C10E:  MOVLB  0
0C110:  CALL   1F68
0C114:  MOVFF  03,875
0C118:  MOVFF  02,874
0C11C:  MOVFF  01,873
0C120:  MOVFF  00,872
0C124:  CALL   587C
0C128:  MOVFF  01,58A
0C12C:  MOVLB  5
0C12E:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0C130:  BSF    F96.1
0C132:  BTFSC  F84.1
0C134:  BRA    C15A
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C136:  BSF    F8B.4
0C138:  BCF    F94.4
0C13A:  MOVLW  0A
0C13C:  MOVLB  8
0C13E:  MOVWF  x6E
0C140:  MOVLB  0
0C142:  CALL   13A4
0C146:  BCF    F8B.4
0C148:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0C14A:  MOVLW  1E
0C14C:  MOVLB  8
0C14E:  MOVWF  x6E
0C150:  MOVLB  0
0C152:  CALL   13A4
0C156:  MOVLB  5
0C158:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0C15A:  BSF    F96.2
0C15C:  BTFSC  F84.2
0C15E:  BRA    C1D0
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C160:  BSF    F8B.4
0C162:  BCF    F94.4
0C164:  MOVLW  0A
0C166:  MOVLB  8
0C168:  MOVWF  x6E
0C16A:  MOVLB  0
0C16C:  CALL   13A4
0C170:  BCF    F8B.4
0C172:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0C174:  MOVLW  04
0C176:  MOVLB  8
0C178:  MOVWF  x66
0C17A:  MOVLW  AF
0C17C:  MOVWF  x6E
0C17E:  MOVLB  0
0C180:  CALL   13A4
0C184:  MOVLB  8
0C186:  DECFSZ x66,F
0C188:  BRA    C17A
0C18A:  MOVLW  64
0C18C:  MOVLB  5
0C18E:  MOVWF  x9B
0C190:  MOVLB  8
0C192:  CLRF   x6D
0C194:  MOVLB  0
0C196:  CALL   1424
0C19A:  MOVLW  01
0C19C:  MOVLB  5
0C19E:  MOVWF  xA2
0C1A0:  BSF    x87.7
....................             write_eeprom(452,Ajuste); 
0C1A2:  MOVWF  FAA
0C1A4:  MOVLW  C4
0C1A6:  MOVWF  FA9
0C1A8:  MOVFF  58A,FA8
0C1AC:  BCF    FA6.6
0C1AE:  BCF    FA6.7
0C1B0:  BSF    FA6.2
0C1B2:  MOVF   FF2,W
0C1B4:  MOVWF  00
0C1B6:  BCF    FF2.7
0C1B8:  MOVLB  F
0C1BA:  MOVLW  55
0C1BC:  MOVWF  FA7
0C1BE:  MOVLW  AA
0C1C0:  MOVWF  FA7
0C1C2:  BSF    FA6.1
0C1C4:  BTFSC  FA6.1
0C1C6:  BRA    C1C4
0C1C8:  BCF    FA6.2
0C1CA:  MOVF   00,W
0C1CC:  IORWF  FF2,F
0C1CE:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Ajusten 
0C1D0:  MOVF   x9B,W
0C1D2:  SUBLW  6A
0C1D4:  BTFSS  FD8.2
0C1D6:  BRA    C3F6
....................        
....................       if(Ajusten>100) 
0C1D8:  MOVF   x8B,W
0C1DA:  SUBLW  64
0C1DC:  BC    C1E0
....................       { 
....................          Ajusten=0; 
0C1DE:  CLRF   x8B
....................       } 
....................        
....................       if(visual==1) 
0C1E0:  BTFSS  x87.7
0C1E2:  BRA    C24C
....................       { 
....................          glcd_fillScreen(OFF); 
0C1E4:  MOVLB  8
0C1E6:  CLRF   x6D
0C1E8:  MOVLB  0
0C1EA:  CALL   1424
....................          strcpy(Menus.Letra,"Ajusten"); 
0C1EE:  MOVLW  08
0C1F0:  MOVWF  FEA
0C1F2:  MOVLW  46
0C1F4:  MOVWF  FE9
0C1F6:  MOVFF  FF2,866
0C1FA:  BCF    FF2.7
0C1FC:  MOVLW  00
0C1FE:  CALL   125A
0C202:  TBLRD*-
0C204:  TBLRD*+
0C206:  MOVF   FF5,W
0C208:  MOVWF  FEE
0C20A:  IORLW  00
0C20C:  BNZ   C204
0C20E:  MOVLB  8
0C210:  BTFSC  x66.7
0C212:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0C214:  MOVLW  08
0C216:  MOVWF  x6E
0C218:  MOVLW  46
0C21A:  MOVWF  x6D
0C21C:  CLRF   x6F
0C21E:  CLRF   x70
0C220:  MOVLW  01
0C222:  MOVWF  x71
0C224:  MOVLW  02
0C226:  MOVWF  x72
0C228:  MOVLB  0
0C22A:  CALL   1A52
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
0C22E:  MOVLB  8
0C230:  CLRF   x6C
0C232:  MOVFF  58B,86B
0C236:  MOVLW  1E
0C238:  MOVWF  x6D
0C23A:  MOVWF  x6E
0C23C:  CLRF   x6F
0C23E:  MOVLW  03
0C240:  MOVWF  x70
0C242:  MOVLB  0
0C244:  CALL   405C
....................           
....................          visual=0; 
0C248:  MOVLB  5
0C24A:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0C24C:  BSF    F92.5
0C24E:  BTFSC  F80.5
0C250:  BRA    C2DC
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C252:  BSF    F8B.4
0C254:  BCF    F94.4
0C256:  MOVLW  0A
0C258:  MOVLB  8
0C25A:  MOVWF  x6E
0C25C:  MOVLB  0
0C25E:  CALL   13A4
0C262:  BCF    F8B.4
0C264:  BCF    F94.4
....................             if(Ajusten>100) 
0C266:  MOVLB  5
0C268:  MOVF   x8B,W
0C26A:  SUBLW  64
0C26C:  BC    C282
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
0C26E:  MOVLW  64
0C270:  MOVWF  x8B
0C272:  MOVLB  8
0C274:  MOVWF  x6E
0C276:  MOVLB  0
0C278:  CALL   13A4
0C27C:  MOVLB  5
0C27E:  BSF    x87.7
....................             } 
....................             else 
0C280:  BRA    C2DC
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
0C282:  MOVLW  1E
0C284:  MOVLB  8
0C286:  MOVWF  x6E
0C288:  MOVLB  0
0C28A:  CALL   13A4
0C28E:  MOVLB  8
0C290:  CLRF   x73
0C292:  MOVFF  58B,872
0C296:  MOVLB  0
0C298:  CALL   1D5A
0C29C:  BCF    FD8.1
0C29E:  MOVFF  03,875
0C2A2:  MOVFF  02,874
0C2A6:  MOVFF  01,873
0C2AA:  MOVFF  00,872
0C2AE:  MOVLB  8
0C2B0:  CLRF   x79
0C2B2:  CLRF   x78
0C2B4:  CLRF   x77
0C2B6:  MOVLW  7F
0C2B8:  MOVWF  x76
0C2BA:  MOVLB  0
0C2BC:  CALL   1F68
0C2C0:  MOVFF  03,875
0C2C4:  MOVFF  02,874
0C2C8:  MOVFF  01,873
0C2CC:  MOVFF  00,872
0C2D0:  CALL   587C
0C2D4:  MOVFF  01,58B
0C2D8:  MOVLB  5
0C2DA:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0C2DC:  BSF    F96.0
0C2DE:  BTFSC  F84.0
0C2E0:  BRA    C356
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C2E2:  BSF    F8B.4
0C2E4:  BCF    F94.4
0C2E6:  MOVLW  0A
0C2E8:  MOVLB  8
0C2EA:  MOVWF  x6E
0C2EC:  MOVLB  0
0C2EE:  CALL   13A4
0C2F2:  BCF    F8B.4
0C2F4:  BCF    F94.4
....................             if(Ajusten>0) 
0C2F6:  MOVLB  5
0C2F8:  MOVF   x8B,F
0C2FA:  BZ    C356
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
0C2FC:  MOVLW  1E
0C2FE:  MOVLB  8
0C300:  MOVWF  x6E
0C302:  MOVLB  0
0C304:  CALL   13A4
0C308:  MOVLB  8
0C30A:  CLRF   x73
0C30C:  MOVFF  58B,872
0C310:  MOVLB  0
0C312:  CALL   1D5A
0C316:  BSF    FD8.1
0C318:  MOVFF  03,875
0C31C:  MOVFF  02,874
0C320:  MOVFF  01,873
0C324:  MOVFF  00,872
0C328:  MOVLB  8
0C32A:  CLRF   x79
0C32C:  CLRF   x78
0C32E:  CLRF   x77
0C330:  MOVLW  7F
0C332:  MOVWF  x76
0C334:  MOVLB  0
0C336:  CALL   1F68
0C33A:  MOVFF  03,875
0C33E:  MOVFF  02,874
0C342:  MOVFF  01,873
0C346:  MOVFF  00,872
0C34A:  CALL   587C
0C34E:  MOVFF  01,58B
0C352:  MOVLB  5
0C354:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0C356:  BSF    F96.1
0C358:  BTFSC  F84.1
0C35A:  BRA    C380
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C35C:  BSF    F8B.4
0C35E:  BCF    F94.4
0C360:  MOVLW  0A
0C362:  MOVLB  8
0C364:  MOVWF  x6E
0C366:  MOVLB  0
0C368:  CALL   13A4
0C36C:  BCF    F8B.4
0C36E:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0C370:  MOVLW  1E
0C372:  MOVLB  8
0C374:  MOVWF  x6E
0C376:  MOVLB  0
0C378:  CALL   13A4
0C37C:  MOVLB  5
0C37E:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0C380:  BSF    F96.2
0C382:  BTFSC  F84.2
0C384:  BRA    C3F6
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C386:  BSF    F8B.4
0C388:  BCF    F94.4
0C38A:  MOVLW  0A
0C38C:  MOVLB  8
0C38E:  MOVWF  x6E
0C390:  MOVLB  0
0C392:  CALL   13A4
0C396:  BCF    F8B.4
0C398:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0C39A:  MOVLW  04
0C39C:  MOVLB  8
0C39E:  MOVWF  x66
0C3A0:  MOVLW  AF
0C3A2:  MOVWF  x6E
0C3A4:  MOVLB  0
0C3A6:  CALL   13A4
0C3AA:  MOVLB  8
0C3AC:  DECFSZ x66,F
0C3AE:  BRA    C3A0
0C3B0:  MOVLW  64
0C3B2:  MOVLB  5
0C3B4:  MOVWF  x9B
0C3B6:  MOVLB  8
0C3B8:  CLRF   x6D
0C3BA:  MOVLB  0
0C3BC:  CALL   1424
0C3C0:  MOVLW  01
0C3C2:  MOVLB  5
0C3C4:  MOVWF  xA2
0C3C6:  BSF    x87.7
....................             write_eeprom(453,Ajusten); 
0C3C8:  MOVWF  FAA
0C3CA:  MOVLW  C5
0C3CC:  MOVWF  FA9
0C3CE:  MOVFF  58B,FA8
0C3D2:  BCF    FA6.6
0C3D4:  BCF    FA6.7
0C3D6:  BSF    FA6.2
0C3D8:  MOVF   FF2,W
0C3DA:  MOVWF  00
0C3DC:  BCF    FF2.7
0C3DE:  MOVLB  F
0C3E0:  MOVLW  55
0C3E2:  MOVWF  FA7
0C3E4:  MOVLW  AA
0C3E6:  MOVWF  FA7
0C3E8:  BSF    FA6.1
0C3EA:  BTFSC  FA6.1
0C3EC:  BRA    C3EA
0C3EE:  BCF    FA6.2
0C3F0:  MOVF   00,W
0C3F2:  IORWF  FF2,F
0C3F4:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==107){ // Menu de Ajuste de Media Movil 
0C3F6:  MOVF   x9B,W
0C3F8:  SUBLW  6B
0C3FA:  BTFSS  FD8.2
0C3FC:  BRA    C622
....................        
....................       if(MediaMovil>80) 
0C3FE:  MOVF   x8C,W
0C400:  SUBLW  50
0C402:  BC    C408
....................       { 
....................          MediaMovil=10; 
0C404:  MOVLW  0A
0C406:  MOVWF  x8C
....................       } 
....................        
....................       if(visual==1) 
0C408:  BTFSS  x87.7
0C40A:  BRA    C474
....................       { 
....................          glcd_fillScreen(OFF); 
0C40C:  MOVLB  8
0C40E:  CLRF   x6D
0C410:  MOVLB  0
0C412:  CALL   1424
....................          strcpy(Menus.Letra,"Media"); 
0C416:  MOVLW  08
0C418:  MOVWF  FEA
0C41A:  MOVLW  46
0C41C:  MOVWF  FE9
0C41E:  MOVFF  FF2,866
0C422:  BCF    FF2.7
0C424:  MOVLW  00
0C426:  CALL   1280
0C42A:  TBLRD*-
0C42C:  TBLRD*+
0C42E:  MOVF   FF5,W
0C430:  MOVWF  FEE
0C432:  IORLW  00
0C434:  BNZ   C42C
0C436:  MOVLB  8
0C438:  BTFSC  x66.7
0C43A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0C43C:  MOVLW  08
0C43E:  MOVWF  x6E
0C440:  MOVLW  46
0C442:  MOVWF  x6D
0C444:  CLRF   x6F
0C446:  CLRF   x70
0C448:  MOVLW  01
0C44A:  MOVWF  x71
0C44C:  MOVLW  02
0C44E:  MOVWF  x72
0C450:  MOVLB  0
0C452:  CALL   1A52
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
0C456:  MOVLB  8
0C458:  CLRF   x6C
0C45A:  MOVFF  58C,86B
0C45E:  MOVLW  1E
0C460:  MOVWF  x6D
0C462:  MOVWF  x6E
0C464:  CLRF   x6F
0C466:  MOVLW  03
0C468:  MOVWF  x70
0C46A:  MOVLB  0
0C46C:  CALL   405C
....................           
....................          visual=0; 
0C470:  MOVLB  5
0C472:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0C474:  BSF    F92.5
0C476:  BTFSC  F80.5
0C478:  BRA    C506
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C47A:  BSF    F8B.4
0C47C:  BCF    F94.4
0C47E:  MOVLW  0A
0C480:  MOVLB  8
0C482:  MOVWF  x6E
0C484:  MOVLB  0
0C486:  CALL   13A4
0C48A:  BCF    F8B.4
0C48C:  BCF    F94.4
....................             if(MediaMovil>79) 
0C48E:  MOVLB  5
0C490:  MOVF   x8C,W
0C492:  SUBLW  4F
0C494:  BC    C4AC
....................             { 
....................                MediaMovil=79;delay_ms(100);visual=1; 
0C496:  MOVLW  4F
0C498:  MOVWF  x8C
0C49A:  MOVLW  64
0C49C:  MOVLB  8
0C49E:  MOVWF  x6E
0C4A0:  MOVLB  0
0C4A2:  CALL   13A4
0C4A6:  MOVLB  5
0C4A8:  BSF    x87.7
....................             } 
....................             else 
0C4AA:  BRA    C506
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
0C4AC:  MOVLW  1E
0C4AE:  MOVLB  8
0C4B0:  MOVWF  x6E
0C4B2:  MOVLB  0
0C4B4:  CALL   13A4
0C4B8:  MOVLB  8
0C4BA:  CLRF   x73
0C4BC:  MOVFF  58C,872
0C4C0:  MOVLB  0
0C4C2:  CALL   1D5A
0C4C6:  BCF    FD8.1
0C4C8:  MOVFF  03,875
0C4CC:  MOVFF  02,874
0C4D0:  MOVFF  01,873
0C4D4:  MOVFF  00,872
0C4D8:  MOVLB  8
0C4DA:  CLRF   x79
0C4DC:  CLRF   x78
0C4DE:  CLRF   x77
0C4E0:  MOVLW  7F
0C4E2:  MOVWF  x76
0C4E4:  MOVLB  0
0C4E6:  CALL   1F68
0C4EA:  MOVFF  03,875
0C4EE:  MOVFF  02,874
0C4F2:  MOVFF  01,873
0C4F6:  MOVFF  00,872
0C4FA:  CALL   587C
0C4FE:  MOVFF  01,58C
0C502:  MOVLB  5
0C504:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0C506:  BSF    F96.0
0C508:  BTFSC  F84.0
0C50A:  BRA    C582
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C50C:  BSF    F8B.4
0C50E:  BCF    F94.4
0C510:  MOVLW  0A
0C512:  MOVLB  8
0C514:  MOVWF  x6E
0C516:  MOVLB  0
0C518:  CALL   13A4
0C51C:  BCF    F8B.4
0C51E:  BCF    F94.4
....................             if(MediaMovil>1) 
0C520:  MOVLB  5
0C522:  MOVF   x8C,W
0C524:  SUBLW  01
0C526:  BC    C582
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
0C528:  MOVLW  1E
0C52A:  MOVLB  8
0C52C:  MOVWF  x6E
0C52E:  MOVLB  0
0C530:  CALL   13A4
0C534:  MOVLB  8
0C536:  CLRF   x73
0C538:  MOVFF  58C,872
0C53C:  MOVLB  0
0C53E:  CALL   1D5A
0C542:  BSF    FD8.1
0C544:  MOVFF  03,875
0C548:  MOVFF  02,874
0C54C:  MOVFF  01,873
0C550:  MOVFF  00,872
0C554:  MOVLB  8
0C556:  CLRF   x79
0C558:  CLRF   x78
0C55A:  CLRF   x77
0C55C:  MOVLW  7F
0C55E:  MOVWF  x76
0C560:  MOVLB  0
0C562:  CALL   1F68
0C566:  MOVFF  03,875
0C56A:  MOVFF  02,874
0C56E:  MOVFF  01,873
0C572:  MOVFF  00,872
0C576:  CALL   587C
0C57A:  MOVFF  01,58C
0C57E:  MOVLB  5
0C580:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0C582:  BSF    F96.1
0C584:  BTFSC  F84.1
0C586:  BRA    C5AC
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C588:  BSF    F8B.4
0C58A:  BCF    F94.4
0C58C:  MOVLW  0A
0C58E:  MOVLB  8
0C590:  MOVWF  x6E
0C592:  MOVLB  0
0C594:  CALL   13A4
0C598:  BCF    F8B.4
0C59A:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0C59C:  MOVLW  1E
0C59E:  MOVLB  8
0C5A0:  MOVWF  x6E
0C5A2:  MOVLB  0
0C5A4:  CALL   13A4
0C5A8:  MOVLB  5
0C5AA:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0C5AC:  BSF    F96.2
0C5AE:  BTFSC  F84.2
0C5B0:  BRA    C622
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C5B2:  BSF    F8B.4
0C5B4:  BCF    F94.4
0C5B6:  MOVLW  0A
0C5B8:  MOVLB  8
0C5BA:  MOVWF  x6E
0C5BC:  MOVLB  0
0C5BE:  CALL   13A4
0C5C2:  BCF    F8B.4
0C5C4:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0C5C6:  MOVLW  04
0C5C8:  MOVLB  8
0C5CA:  MOVWF  x66
0C5CC:  MOVLW  AF
0C5CE:  MOVWF  x6E
0C5D0:  MOVLB  0
0C5D2:  CALL   13A4
0C5D6:  MOVLB  8
0C5D8:  DECFSZ x66,F
0C5DA:  BRA    C5CC
0C5DC:  MOVLW  64
0C5DE:  MOVLB  5
0C5E0:  MOVWF  x9B
0C5E2:  MOVLB  8
0C5E4:  CLRF   x6D
0C5E6:  MOVLB  0
0C5E8:  CALL   1424
0C5EC:  MOVLW  01
0C5EE:  MOVLB  5
0C5F0:  MOVWF  xA2
0C5F2:  BSF    x87.7
....................             write_eeprom(454,(int8)MediaMovil); 
0C5F4:  MOVWF  FAA
0C5F6:  MOVLW  C6
0C5F8:  MOVWF  FA9
0C5FA:  MOVFF  58C,FA8
0C5FE:  BCF    FA6.6
0C600:  BCF    FA6.7
0C602:  BSF    FA6.2
0C604:  MOVF   FF2,W
0C606:  MOVWF  00
0C608:  BCF    FF2.7
0C60A:  MOVLB  F
0C60C:  MOVLW  55
0C60E:  MOVWF  FA7
0C610:  MOVLW  AA
0C612:  MOVWF  FA7
0C614:  BSF    FA6.1
0C616:  BTFSC  FA6.1
0C618:  BRA    C616
0C61A:  BCF    FA6.2
0C61C:  MOVF   00,W
0C61E:  IORWF  FF2,F
0C620:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==108){ // Menu de Ajuste de Coeficiente Regulador 
0C622:  MOVF   x9B,W
0C624:  SUBLW  6C
0C626:  BTFSS  FD8.2
0C628:  BRA    C8D4
....................        
....................       if(Coeficiente>250) 
0C62A:  MOVLB  8
0C62C:  CLRF   x69
0C62E:  CLRF   x68
0C630:  MOVLW  7A
0C632:  MOVWF  x67
0C634:  MOVLW  86
0C636:  MOVWF  x66
0C638:  MOVFF  621,86D
0C63C:  MOVFF  620,86C
0C640:  MOVFF  61F,86B
0C644:  MOVFF  61E,86A
0C648:  MOVLB  0
0C64A:  CALL   1D90
0C64E:  BNC   C65E
....................       { 
....................          Coeficiente=100; 
0C650:  MOVLB  6
0C652:  CLRF   x21
0C654:  CLRF   x20
0C656:  MOVLW  48
0C658:  MOVWF  x1F
0C65A:  MOVLW  85
0C65C:  MOVWF  x1E
....................       } 
....................        
....................       if(visual==1) 
0C65E:  MOVLB  5
0C660:  BTFSS  x87.7
0C662:  BRA    C6EA
....................       { 
....................          glcd_fillScreen(OFF); 
0C664:  MOVLB  8
0C666:  CLRF   x6D
0C668:  MOVLB  0
0C66A:  CALL   1424
....................          strcpy(Menus.Letra,"Coeficiente"); 
0C66E:  MOVLW  08
0C670:  MOVWF  FEA
0C672:  MOVLW  46
0C674:  MOVWF  FE9
0C676:  MOVFF  FF2,866
0C67A:  BCF    FF2.7
0C67C:  MOVLW  00
0C67E:  CALL   10EE
0C682:  TBLRD*-
0C684:  TBLRD*+
0C686:  MOVF   FF5,W
0C688:  MOVWF  FEE
0C68A:  IORLW  00
0C68C:  BNZ   C684
0C68E:  MOVLB  8
0C690:  BTFSC  x66.7
0C692:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0C694:  MOVLW  08
0C696:  MOVWF  x6E
0C698:  MOVLW  46
0C69A:  MOVWF  x6D
0C69C:  CLRF   x6F
0C69E:  CLRF   x70
0C6A0:  MOVLW  01
0C6A2:  MOVWF  x71
0C6A4:  MOVLW  02
0C6A6:  MOVWF  x72
0C6A8:  MOVLB  0
0C6AA:  CALL   1A52
....................           
....................          displayTemperatura(Coeficiente,30,30,0,3); 
0C6AE:  MOVFF  621,875
0C6B2:  MOVFF  620,874
0C6B6:  MOVFF  61F,873
0C6BA:  MOVFF  61E,872
0C6BE:  CALL   587C
0C6C2:  MOVFF  02,867
0C6C6:  MOVFF  01,866
0C6CA:  MOVFF  02,86C
0C6CE:  MOVFF  01,86B
0C6D2:  MOVLW  1E
0C6D4:  MOVLB  8
0C6D6:  MOVWF  x6D
0C6D8:  MOVWF  x6E
0C6DA:  CLRF   x6F
0C6DC:  MOVLW  03
0C6DE:  MOVWF  x70
0C6E0:  MOVLB  0
0C6E2:  CALL   405C
....................           
....................          visual=0; 
0C6E6:  MOVLB  5
0C6E8:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0C6EA:  BSF    F92.5
0C6EC:  BTFSC  F80.5
0C6EE:  BRA    C790
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C6F0:  BSF    F8B.4
0C6F2:  BCF    F94.4
0C6F4:  MOVLW  0A
0C6F6:  MOVLB  8
0C6F8:  MOVWF  x6E
0C6FA:  MOVLB  0
0C6FC:  CALL   13A4
0C700:  BCF    F8B.4
0C702:  BCF    F94.4
....................             if(Coeficiente>250) 
0C704:  MOVLB  8
0C706:  CLRF   x69
0C708:  CLRF   x68
0C70A:  MOVLW  7A
0C70C:  MOVWF  x67
0C70E:  MOVLW  86
0C710:  MOVWF  x66
0C712:  MOVFF  621,86D
0C716:  MOVFF  620,86C
0C71A:  MOVFF  61F,86B
0C71E:  MOVFF  61E,86A
0C722:  MOVLB  0
0C724:  CALL   1D90
0C728:  BNC   C74C
....................             { 
....................                Coeficiente=250;delay_ms(100);visual=1; 
0C72A:  MOVLB  6
0C72C:  CLRF   x21
0C72E:  CLRF   x20
0C730:  MOVLW  7A
0C732:  MOVWF  x1F
0C734:  MOVLW  86
0C736:  MOVWF  x1E
0C738:  MOVLW  64
0C73A:  MOVLB  8
0C73C:  MOVWF  x6E
0C73E:  MOVLB  0
0C740:  CALL   13A4
0C744:  MOVLB  5
0C746:  BSF    x87.7
....................             } 
....................             else 
0C748:  BRA    C790
0C74A:  MOVLB  0
....................             { 
....................                delay_ms(30);Coeficiente+=1.0;visual=1; 
0C74C:  MOVLW  1E
0C74E:  MOVLB  8
0C750:  MOVWF  x6E
0C752:  MOVLB  0
0C754:  CALL   13A4
0C758:  BCF    FD8.1
0C75A:  MOVFF  621,875
0C75E:  MOVFF  620,874
0C762:  MOVFF  61F,873
0C766:  MOVFF  61E,872
0C76A:  MOVLB  8
0C76C:  CLRF   x79
0C76E:  CLRF   x78
0C770:  CLRF   x77
0C772:  MOVLW  7F
0C774:  MOVWF  x76
0C776:  MOVLB  0
0C778:  CALL   1F68
0C77C:  MOVFF  03,621
0C780:  MOVFF  02,620
0C784:  MOVFF  01,61F
0C788:  MOVFF  00,61E
0C78C:  MOVLB  5
0C78E:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0C790:  BSF    F96.0
0C792:  BTFSC  F84.0
0C794:  BRA    C812
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C796:  BSF    F8B.4
0C798:  BCF    F94.4
0C79A:  MOVLW  0A
0C79C:  MOVLB  8
0C79E:  MOVWF  x6E
0C7A0:  MOVLB  0
0C7A2:  CALL   13A4
0C7A6:  BCF    F8B.4
0C7A8:  BCF    F94.4
....................             if(Coeficiente>1) 
0C7AA:  MOVLB  8
0C7AC:  CLRF   x69
0C7AE:  CLRF   x68
0C7B0:  CLRF   x67
0C7B2:  MOVLW  7F
0C7B4:  MOVWF  x66
0C7B6:  MOVFF  621,86D
0C7BA:  MOVFF  620,86C
0C7BE:  MOVFF  61F,86B
0C7C2:  MOVFF  61E,86A
0C7C6:  MOVLB  0
0C7C8:  CALL   1D90
0C7CC:  BNC   C814
....................             { 
....................                delay_ms(30);Coeficiente-=1.0;visual=1;      
0C7CE:  MOVLW  1E
0C7D0:  MOVLB  8
0C7D2:  MOVWF  x6E
0C7D4:  MOVLB  0
0C7D6:  CALL   13A4
0C7DA:  BSF    FD8.1
0C7DC:  MOVFF  621,875
0C7E0:  MOVFF  620,874
0C7E4:  MOVFF  61F,873
0C7E8:  MOVFF  61E,872
0C7EC:  MOVLB  8
0C7EE:  CLRF   x79
0C7F0:  CLRF   x78
0C7F2:  CLRF   x77
0C7F4:  MOVLW  7F
0C7F6:  MOVWF  x76
0C7F8:  MOVLB  0
0C7FA:  CALL   1F68
0C7FE:  MOVFF  03,621
0C802:  MOVFF  02,620
0C806:  MOVFF  01,61F
0C80A:  MOVFF  00,61E
0C80E:  MOVLB  5
0C810:  BSF    x87.7
0C812:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0C814:  BSF    F96.1
0C816:  BTFSC  F84.1
0C818:  BRA    C840
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C81A:  BSF    F8B.4
0C81C:  BCF    F94.4
0C81E:  MOVLW  0A
0C820:  MOVLB  8
0C822:  MOVWF  x6E
0C824:  MOVLB  0
0C826:  CALL   13A4
0C82A:  BCF    F8B.4
0C82C:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0C82E:  MOVLW  1E
0C830:  MOVLB  8
0C832:  MOVWF  x6E
0C834:  MOVLB  0
0C836:  CALL   13A4
0C83A:  MOVLB  5
0C83C:  BSF    x87.7
0C83E:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0C840:  BSF    F96.2
0C842:  BTFSC  F84.2
0C844:  BRA    C8D2
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C846:  BSF    F8B.4
0C848:  BCF    F94.4
0C84A:  MOVLW  0A
0C84C:  MOVLB  8
0C84E:  MOVWF  x6E
0C850:  MOVLB  0
0C852:  CALL   13A4
0C856:  BCF    F8B.4
0C858:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0C85A:  MOVLW  04
0C85C:  MOVLB  8
0C85E:  MOVWF  x66
0C860:  MOVLW  AF
0C862:  MOVWF  x6E
0C864:  MOVLB  0
0C866:  CALL   13A4
0C86A:  MOVLB  8
0C86C:  DECFSZ x66,F
0C86E:  BRA    C860
0C870:  MOVLW  64
0C872:  MOVLB  5
0C874:  MOVWF  x9B
0C876:  MOVLB  8
0C878:  CLRF   x6D
0C87A:  MOVLB  0
0C87C:  CALL   1424
0C880:  MOVLW  01
0C882:  MOVLB  5
0C884:  MOVWF  xA2
0C886:  BSF    x87.7
....................             write_eeprom(455,(int8)Coeficiente); 
0C888:  MOVFF  621,875
0C88C:  MOVFF  620,874
0C890:  MOVFF  61F,873
0C894:  MOVFF  61E,872
0C898:  MOVLB  0
0C89A:  CALL   587C
0C89E:  MOVFF  01,866
0C8A2:  MOVLW  01
0C8A4:  MOVWF  FAA
0C8A6:  MOVLW  C7
0C8A8:  MOVWF  FA9
0C8AA:  MOVFF  866,FA8
0C8AE:  BCF    FA6.6
0C8B0:  BCF    FA6.7
0C8B2:  BSF    FA6.2
0C8B4:  MOVF   FF2,W
0C8B6:  MOVWF  00
0C8B8:  BCF    FF2.7
0C8BA:  MOVLB  F
0C8BC:  MOVLW  55
0C8BE:  MOVWF  FA7
0C8C0:  MOVLW  AA
0C8C2:  MOVWF  FA7
0C8C4:  BSF    FA6.1
0C8C6:  BTFSC  FA6.1
0C8C8:  BRA    C8C6
0C8CA:  BCF    FA6.2
0C8CC:  MOVF   00,W
0C8CE:  IORWF  FF2,F
0C8D0:  MOVLB  0
0C8D2:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==109){ // Menu de Alarma Sobretemperatura 
0C8D4:  MOVF   x9B,W
0C8D6:  SUBLW  6D
0C8D8:  BTFSS  FD8.2
0C8DA:  BRA    CB72
....................        
....................       if(AlTem>500) 
0C8DC:  MOVF   xBB,W
0C8DE:  SUBLW  00
0C8E0:  BC    C8F4
0C8E2:  XORLW  FF
0C8E4:  BNZ   C8EC
0C8E6:  MOVF   xBA,W
0C8E8:  SUBLW  F4
0C8EA:  BC    C8F4
....................          AlTem=500; 
0C8EC:  MOVLW  01
0C8EE:  MOVWF  xBB
0C8F0:  MOVLW  F4
0C8F2:  MOVWF  xBA
....................        
....................        
....................       if(visual==1) 
0C8F4:  BTFSS  x87.7
0C8F6:  BRA    C962
....................       { 
....................          glcd_fillScreen(OFF); 
0C8F8:  MOVLB  8
0C8FA:  CLRF   x6D
0C8FC:  MOVLB  0
0C8FE:  CALL   1424
....................          strcpy(Menus.Letra,"Alarma"); 
0C902:  MOVLW  08
0C904:  MOVWF  FEA
0C906:  MOVLW  46
0C908:  MOVWF  FE9
0C90A:  MOVFF  FF2,866
0C90E:  BCF    FF2.7
0C910:  MOVLW  00
0C912:  CALL   12A4
0C916:  TBLRD*-
0C918:  TBLRD*+
0C91A:  MOVF   FF5,W
0C91C:  MOVWF  FEE
0C91E:  IORLW  00
0C920:  BNZ   C918
0C922:  MOVLB  8
0C924:  BTFSC  x66.7
0C926:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0C928:  MOVLW  08
0C92A:  MOVWF  x6E
0C92C:  MOVLW  46
0C92E:  MOVWF  x6D
0C930:  CLRF   x6F
0C932:  CLRF   x70
0C934:  MOVLW  01
0C936:  MOVWF  x71
0C938:  MOVLW  02
0C93A:  MOVWF  x72
0C93C:  MOVLB  0
0C93E:  CALL   1A52
....................           
....................          displayTemperatura(AlTem,30,30,0,3); 
0C942:  MOVFF  5BB,86C
0C946:  MOVFF  5BA,86B
0C94A:  MOVLW  1E
0C94C:  MOVLB  8
0C94E:  MOVWF  x6D
0C950:  MOVWF  x6E
0C952:  CLRF   x6F
0C954:  MOVLW  03
0C956:  MOVWF  x70
0C958:  MOVLB  0
0C95A:  CALL   405C
....................           
....................          visual=0; 
0C95E:  MOVLB  5
0C960:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0C962:  BSF    F92.5
0C964:  BTFSC  F80.5
0C966:  BRA    CA04
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0C968:  BSF    F8B.4
0C96A:  BCF    F94.4
0C96C:  MOVLW  0A
0C96E:  MOVLB  8
0C970:  MOVWF  x6E
0C972:  MOVLB  0
0C974:  CALL   13A4
0C978:  BCF    F8B.4
0C97A:  BCF    F94.4
....................             if(AlTem>500) 
0C97C:  MOVLB  5
0C97E:  MOVF   xBB,W
0C980:  SUBLW  00
0C982:  BC    C9A8
0C984:  XORLW  FF
0C986:  BNZ   C98E
0C988:  MOVF   xBA,W
0C98A:  SUBLW  F4
0C98C:  BC    C9A8
....................             { 
....................                AlTem=500;delay_ms(100);visual=1; 
0C98E:  MOVLW  01
0C990:  MOVWF  xBB
0C992:  MOVLW  F4
0C994:  MOVWF  xBA
0C996:  MOVLW  64
0C998:  MOVLB  8
0C99A:  MOVWF  x6E
0C99C:  MOVLB  0
0C99E:  CALL   13A4
0C9A2:  MOVLB  5
0C9A4:  BSF    x87.7
....................             } 
....................             else 
0C9A6:  BRA    CA04
....................             { 
....................                delay_ms(30);AlTem+=1.0;visual=1; 
0C9A8:  MOVLW  1E
0C9AA:  MOVLB  8
0C9AC:  MOVWF  x6E
0C9AE:  MOVLB  0
0C9B0:  CALL   13A4
0C9B4:  MOVFF  5BB,873
0C9B8:  MOVFF  5BA,872
0C9BC:  CALL   1D5A
0C9C0:  BCF    FD8.1
0C9C2:  MOVFF  03,875
0C9C6:  MOVFF  02,874
0C9CA:  MOVFF  01,873
0C9CE:  MOVFF  00,872
0C9D2:  MOVLB  8
0C9D4:  CLRF   x79
0C9D6:  CLRF   x78
0C9D8:  CLRF   x77
0C9DA:  MOVLW  7F
0C9DC:  MOVWF  x76
0C9DE:  MOVLB  0
0C9E0:  CALL   1F68
0C9E4:  MOVFF  03,875
0C9E8:  MOVFF  02,874
0C9EC:  MOVFF  01,873
0C9F0:  MOVFF  00,872
0C9F4:  CALL   587C
0C9F8:  MOVFF  02,5BB
0C9FC:  MOVFF  01,5BA
0CA00:  MOVLB  5
0CA02:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0CA04:  BSF    F96.0
0CA06:  BTFSC  F84.0
0CA08:  BRA    CA84
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CA0A:  BSF    F8B.4
0CA0C:  BCF    F94.4
0CA0E:  MOVLW  0A
0CA10:  MOVLB  8
0CA12:  MOVWF  x6E
0CA14:  MOVLB  0
0CA16:  CALL   13A4
0CA1A:  BCF    F8B.4
0CA1C:  BCF    F94.4
....................             if(AlTem>0) 
0CA1E:  MOVLB  5
0CA20:  MOVF   xBA,F
0CA22:  BNZ   CA28
0CA24:  MOVF   xBB,F
0CA26:  BZ    CA84
....................             { 
....................                delay_ms(30);AlTem-=1.0;visual=1;      
0CA28:  MOVLW  1E
0CA2A:  MOVLB  8
0CA2C:  MOVWF  x6E
0CA2E:  MOVLB  0
0CA30:  CALL   13A4
0CA34:  MOVFF  5BB,873
0CA38:  MOVFF  5BA,872
0CA3C:  CALL   1D5A
0CA40:  BSF    FD8.1
0CA42:  MOVFF  03,875
0CA46:  MOVFF  02,874
0CA4A:  MOVFF  01,873
0CA4E:  MOVFF  00,872
0CA52:  MOVLB  8
0CA54:  CLRF   x79
0CA56:  CLRF   x78
0CA58:  CLRF   x77
0CA5A:  MOVLW  7F
0CA5C:  MOVWF  x76
0CA5E:  MOVLB  0
0CA60:  CALL   1F68
0CA64:  MOVFF  03,875
0CA68:  MOVFF  02,874
0CA6C:  MOVFF  01,873
0CA70:  MOVFF  00,872
0CA74:  CALL   587C
0CA78:  MOVFF  02,5BB
0CA7C:  MOVFF  01,5BA
0CA80:  MOVLB  5
0CA82:  BSF    x87.7
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0CA84:  BSF    F96.1
0CA86:  BTFSC  F84.1
0CA88:  BRA    CAAE
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CA8A:  BSF    F8B.4
0CA8C:  BCF    F94.4
0CA8E:  MOVLW  0A
0CA90:  MOVLB  8
0CA92:  MOVWF  x6E
0CA94:  MOVLB  0
0CA96:  CALL   13A4
0CA9A:  BCF    F8B.4
0CA9C:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0CA9E:  MOVLW  1E
0CAA0:  MOVLB  8
0CAA2:  MOVWF  x6E
0CAA4:  MOVLB  0
0CAA6:  CALL   13A4
0CAAA:  MOVLB  5
0CAAC:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0CAAE:  BSF    F96.2
0CAB0:  BTFSC  F84.2
0CAB2:  BRA    CB72
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CAB4:  BSF    F8B.4
0CAB6:  BCF    F94.4
0CAB8:  MOVLW  0A
0CABA:  MOVLB  8
0CABC:  MOVWF  x6E
0CABE:  MOVLB  0
0CAC0:  CALL   13A4
0CAC4:  BCF    F8B.4
0CAC6:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0CAC8:  MOVLW  04
0CACA:  MOVLB  8
0CACC:  MOVWF  x66
0CACE:  MOVLW  AF
0CAD0:  MOVWF  x6E
0CAD2:  MOVLB  0
0CAD4:  CALL   13A4
0CAD8:  MOVLB  8
0CADA:  DECFSZ x66,F
0CADC:  BRA    CACE
0CADE:  MOVLW  64
0CAE0:  MOVLB  5
0CAE2:  MOVWF  x9B
0CAE4:  MOVLB  8
0CAE6:  CLRF   x6D
0CAE8:  MOVLB  0
0CAEA:  CALL   1424
0CAEE:  MOVLW  01
0CAF0:  MOVLB  5
0CAF2:  MOVWF  xA2
0CAF4:  BSF    x87.7
....................             write_eeprom(472,make8(AlTem,0)); 
0CAF6:  MOVFF  5BA,866
0CAFA:  MOVWF  FAA
0CAFC:  MOVLW  D8
0CAFE:  MOVWF  FA9
0CB00:  MOVFF  866,FA8
0CB04:  BCF    FA6.6
0CB06:  BCF    FA6.7
0CB08:  BSF    FA6.2
0CB0A:  MOVF   FF2,W
0CB0C:  MOVWF  00
0CB0E:  BCF    FF2.7
0CB10:  MOVLB  F
0CB12:  MOVLW  55
0CB14:  MOVWF  FA7
0CB16:  MOVLW  AA
0CB18:  MOVWF  FA7
0CB1A:  BSF    FA6.1
0CB1C:  BTFSC  FA6.1
0CB1E:  BRA    CB1C
0CB20:  BCF    FA6.2
0CB22:  MOVF   00,W
0CB24:  IORWF  FF2,F
....................             delay_ms(10); 
0CB26:  MOVLW  0A
0CB28:  MOVLB  8
0CB2A:  MOVWF  x6E
0CB2C:  MOVLB  0
0CB2E:  CALL   13A4
....................             write_eeprom(473,make8(AlTem,1)); 
0CB32:  MOVFF  5BB,866
0CB36:  MOVLW  01
0CB38:  MOVWF  FAA
0CB3A:  MOVLW  D9
0CB3C:  MOVWF  FA9
0CB3E:  MOVFF  866,FA8
0CB42:  BCF    FA6.6
0CB44:  BCF    FA6.7
0CB46:  BSF    FA6.2
0CB48:  MOVF   FF2,W
0CB4A:  MOVWF  00
0CB4C:  BCF    FF2.7
0CB4E:  MOVLB  F
0CB50:  MOVLW  55
0CB52:  MOVWF  FA7
0CB54:  MOVLW  AA
0CB56:  MOVWF  FA7
0CB58:  BSF    FA6.1
0CB5A:  BTFSC  FA6.1
0CB5C:  BRA    CB5A
0CB5E:  BCF    FA6.2
0CB60:  MOVF   00,W
0CB62:  IORWF  FF2,F
....................             delay_ms(10); 
0CB64:  MOVLW  0A
0CB66:  MOVLB  8
0CB68:  MOVWF  x6E
0CB6A:  MOVLB  0
0CB6C:  CALL   13A4
0CB70:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==110){ // Menu de Resistencia conversora I/V 
0CB72:  MOVF   x9B,W
0CB74:  SUBLW  6E
0CB76:  BTFSS  FD8.2
0CB78:  BRA    D026
....................        
....................       if(resistencia>260)       
0CB7A:  MOVLB  8
0CB7C:  CLRF   x69
0CB7E:  CLRF   x68
0CB80:  MOVLW  02
0CB82:  MOVWF  x67
0CB84:  MOVLW  87
0CB86:  MOVWF  x66
0CB88:  MOVFF  625,86D
0CB8C:  MOVFF  624,86C
0CB90:  MOVFF  623,86B
0CB94:  MOVFF  622,86A
0CB98:  MOVLB  0
0CB9A:  CALL   1D90
0CB9E:  BNC   CBB0
....................          resistencia=240; 
0CBA0:  MOVLB  6
0CBA2:  CLRF   x25
0CBA4:  CLRF   x24
0CBA6:  MOVLW  70
0CBA8:  MOVWF  x23
0CBAA:  MOVLW  86
0CBAC:  MOVWF  x22
....................       else if(resistencia<230) 
0CBAE:  BRA    CBE4
0CBB0:  MOVFF  625,869
0CBB4:  MOVFF  624,868
0CBB8:  MOVFF  623,867
0CBBC:  MOVFF  622,866
0CBC0:  MOVLB  8
0CBC2:  CLRF   x6D
0CBC4:  CLRF   x6C
0CBC6:  MOVLW  66
0CBC8:  MOVWF  x6B
0CBCA:  MOVLW  86
0CBCC:  MOVWF  x6A
0CBCE:  MOVLB  0
0CBD0:  CALL   1D90
0CBD4:  BNC   CBE4
....................          resistencia=240; 
0CBD6:  MOVLB  6
0CBD8:  CLRF   x25
0CBDA:  CLRF   x24
0CBDC:  MOVLW  70
0CBDE:  MOVWF  x23
0CBE0:  MOVLW  86
0CBE2:  MOVWF  x22
....................        
....................       if(visual==1){ 
0CBE4:  MOVLB  5
0CBE6:  BTFSS  x87.7
0CBE8:  BRA    CC70
....................          glcd_fillScreen(OFF); 
0CBEA:  MOVLB  8
0CBEC:  CLRF   x6D
0CBEE:  MOVLB  0
0CBF0:  CALL   1424
....................          strcpy(Menus.Letra,"Resis."); 
0CBF4:  MOVLW  08
0CBF6:  MOVWF  FEA
0CBF8:  MOVLW  46
0CBFA:  MOVWF  FE9
0CBFC:  MOVFF  FF2,866
0CC00:  BCF    FF2.7
0CC02:  MOVLW  00
0CC04:  CALL   12CA
0CC08:  TBLRD*-
0CC0A:  TBLRD*+
0CC0C:  MOVF   FF5,W
0CC0E:  MOVWF  FEE
0CC10:  IORLW  00
0CC12:  BNZ   CC0A
0CC14:  MOVLB  8
0CC16:  BTFSC  x66.7
0CC18:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0CC1A:  MOVLW  08
0CC1C:  MOVWF  x6E
0CC1E:  MOVLW  46
0CC20:  MOVWF  x6D
0CC22:  CLRF   x6F
0CC24:  CLRF   x70
0CC26:  MOVLW  01
0CC28:  MOVWF  x71
0CC2A:  MOVLW  02
0CC2C:  MOVWF  x72
0CC2E:  MOVLB  0
0CC30:  CALL   1A52
....................           
....................          displayTemperatura(resistencia,30,30,0,3); 
0CC34:  MOVFF  625,875
0CC38:  MOVFF  624,874
0CC3C:  MOVFF  623,873
0CC40:  MOVFF  622,872
0CC44:  CALL   587C
0CC48:  MOVFF  02,867
0CC4C:  MOVFF  01,866
0CC50:  MOVFF  02,86C
0CC54:  MOVFF  01,86B
0CC58:  MOVLW  1E
0CC5A:  MOVLB  8
0CC5C:  MOVWF  x6D
0CC5E:  MOVWF  x6E
0CC60:  CLRF   x6F
0CC62:  MOVLW  03
0CC64:  MOVWF  x70
0CC66:  MOVLB  0
0CC68:  CALL   405C
....................           
....................          visual=0; 
0CC6C:  MOVLB  5
0CC6E:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0CC70:  BSF    F92.5
0CC72:  BTFSC  F80.5
0CC74:  BRA    CCD0
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CC76:  BSF    F8B.4
0CC78:  BCF    F94.4
0CC7A:  MOVLW  0A
0CC7C:  MOVLB  8
0CC7E:  MOVWF  x6E
0CC80:  MOVLB  0
0CC82:  CALL   13A4
0CC86:  BCF    F8B.4
0CC88:  BCF    F94.4
....................             visual=1; 
0CC8A:  MOVLB  5
0CC8C:  BSF    x87.7
....................             resistencia+=1.0; 
0CC8E:  BCF    FD8.1
0CC90:  MOVFF  625,875
0CC94:  MOVFF  624,874
0CC98:  MOVFF  623,873
0CC9C:  MOVFF  622,872
0CCA0:  MOVLB  8
0CCA2:  CLRF   x79
0CCA4:  CLRF   x78
0CCA6:  CLRF   x77
0CCA8:  MOVLW  7F
0CCAA:  MOVWF  x76
0CCAC:  MOVLB  0
0CCAE:  CALL   1F68
0CCB2:  MOVFF  03,625
0CCB6:  MOVFF  02,624
0CCBA:  MOVFF  01,623
0CCBE:  MOVFF  00,622
....................             delay_ms(30); 
0CCC2:  MOVLW  1E
0CCC4:  MOVLB  8
0CCC6:  MOVWF  x6E
0CCC8:  MOVLB  0
0CCCA:  CALL   13A4
0CCCE:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0CCD0:  BSF    F96.0
0CCD2:  BTFSC  F84.0
0CCD4:  BRA    CD30
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CCD6:  BSF    F8B.4
0CCD8:  BCF    F94.4
0CCDA:  MOVLW  0A
0CCDC:  MOVLB  8
0CCDE:  MOVWF  x6E
0CCE0:  MOVLB  0
0CCE2:  CALL   13A4
0CCE6:  BCF    F8B.4
0CCE8:  BCF    F94.4
....................             visual=1; 
0CCEA:  MOVLB  5
0CCEC:  BSF    x87.7
....................             resistencia-=1.0; 
0CCEE:  BSF    FD8.1
0CCF0:  MOVFF  625,875
0CCF4:  MOVFF  624,874
0CCF8:  MOVFF  623,873
0CCFC:  MOVFF  622,872
0CD00:  MOVLB  8
0CD02:  CLRF   x79
0CD04:  CLRF   x78
0CD06:  CLRF   x77
0CD08:  MOVLW  7F
0CD0A:  MOVWF  x76
0CD0C:  MOVLB  0
0CD0E:  CALL   1F68
0CD12:  MOVFF  03,625
0CD16:  MOVFF  02,624
0CD1A:  MOVFF  01,623
0CD1E:  MOVFF  00,622
....................             delay_ms(30); 
0CD22:  MOVLW  1E
0CD24:  MOVLB  8
0CD26:  MOVWF  x6E
0CD28:  MOVLB  0
0CD2A:  CALL   13A4
0CD2E:  MOVLB  5
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0CD30:  BSF    F96.1
0CD32:  BTFSC  F84.1
0CD34:  BRA    CD5A
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CD36:  BSF    F8B.4
0CD38:  BCF    F94.4
0CD3A:  MOVLW  0A
0CD3C:  MOVLB  8
0CD3E:  MOVWF  x6E
0CD40:  MOVLB  0
0CD42:  CALL   13A4
0CD46:  BCF    F8B.4
0CD48:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0CD4A:  MOVLW  1E
0CD4C:  MOVLB  8
0CD4E:  MOVWF  x6E
0CD50:  MOVLB  0
0CD52:  CALL   13A4
0CD56:  MOVLB  5
0CD58:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0CD5A:  BSF    F96.2
0CD5C:  BTFSC  F84.2
0CD5E:  BRA    D026
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0CD60:  BSF    F8B.4
0CD62:  BCF    F94.4
0CD64:  MOVLW  0A
0CD66:  MOVLB  8
0CD68:  MOVWF  x6E
0CD6A:  MOVLB  0
0CD6C:  CALL   13A4
0CD70:  BCF    F8B.4
0CD72:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0CD74:  MOVLW  04
0CD76:  MOVLB  8
0CD78:  MOVWF  x66
0CD7A:  MOVLW  AF
0CD7C:  MOVWF  x6E
0CD7E:  MOVLB  0
0CD80:  CALL   13A4
0CD84:  MOVLB  8
0CD86:  DECFSZ x66,F
0CD88:  BRA    CD7A
0CD8A:  MOVLW  64
0CD8C:  MOVLB  5
0CD8E:  MOVWF  x9B
0CD90:  MOVLB  8
0CD92:  CLRF   x6D
0CD94:  MOVLB  0
0CD96:  CALL   1424
0CD9A:  MOVLW  01
0CD9C:  MOVLB  5
0CD9E:  MOVWF  xA2
0CDA0:  BSF    x87.7
....................             write_eeprom(457,(int8)resistencia); 
0CDA2:  MOVFF  625,875
0CDA6:  MOVFF  624,874
0CDAA:  MOVFF  623,873
0CDAE:  MOVFF  622,872
0CDB2:  MOVLB  0
0CDB4:  CALL   587C
0CDB8:  MOVFF  01,866
0CDBC:  MOVLW  01
0CDBE:  MOVWF  FAA
0CDC0:  MOVLW  C9
0CDC2:  MOVWF  FA9
0CDC4:  MOVFF  866,FA8
0CDC8:  BCF    FA6.6
0CDCA:  BCF    FA6.7
0CDCC:  BSF    FA6.2
0CDCE:  MOVF   FF2,W
0CDD0:  MOVWF  00
0CDD2:  BCF    FF2.7
0CDD4:  MOVLB  F
0CDD6:  MOVLW  55
0CDD8:  MOVWF  FA7
0CDDA:  MOVLW  AA
0CDDC:  MOVWF  FA7
0CDDE:  BSF    FA6.1
0CDE0:  BTFSC  FA6.1
0CDE2:  BRA    CDE0
0CDE4:  BCF    FA6.2
0CDE6:  MOVF   00,W
0CDE8:  IORWF  FF2,F
....................             delay_ms(10); 
0CDEA:  MOVLW  0A
0CDEC:  MOVLB  8
0CDEE:  MOVWF  x6E
0CDF0:  MOVLB  0
0CDF2:  CALL   13A4
....................             adcInf=(0.004*resistencia*1023)/5.0; 
0CDF6:  MOVLW  6F
0CDF8:  MOVLB  8
0CDFA:  MOVWF  x8A
0CDFC:  MOVLW  12
0CDFE:  MOVWF  x89
0CE00:  MOVLW  03
0CE02:  MOVWF  x88
0CE04:  MOVLW  77
0CE06:  MOVWF  x87
0CE08:  MOVFF  625,88E
0CE0C:  MOVFF  624,88D
0CE10:  MOVFF  623,88C
0CE14:  MOVFF  622,88B
0CE18:  MOVLB  0
0CE1A:  CALL   32D2
0CE1E:  MOVFF  00,866
0CE22:  MOVFF  01,867
0CE26:  MOVFF  02,868
0CE2A:  MOVFF  03,869
0CE2E:  MOVFF  03,88A
0CE32:  MOVFF  02,889
0CE36:  MOVFF  01,888
0CE3A:  MOVFF  00,887
0CE3E:  MOVLB  8
0CE40:  CLRF   x8E
0CE42:  MOVLW  C0
0CE44:  MOVWF  x8D
0CE46:  MOVLW  7F
0CE48:  MOVWF  x8C
0CE4A:  MOVLW  88
0CE4C:  MOVWF  x8B
0CE4E:  MOVLB  0
0CE50:  CALL   32D2
0CE54:  MOVFF  00,866
0CE58:  MOVFF  01,867
0CE5C:  MOVFF  02,868
0CE60:  MOVFF  03,869
0CE64:  MOVFF  03,86D
0CE68:  MOVFF  02,86C
0CE6C:  MOVFF  01,86B
0CE70:  MOVFF  00,86A
0CE74:  MOVLB  8
0CE76:  CLRF   x71
0CE78:  CLRF   x70
0CE7A:  MOVLW  20
0CE7C:  MOVWF  x6F
0CE7E:  MOVLW  81
0CE80:  MOVWF  x6E
0CE82:  MOVLB  0
0CE84:  CALL   1E0A
0CE88:  MOVFF  03,651
0CE8C:  MOVFF  02,650
0CE90:  MOVFF  01,64F
0CE94:  MOVFF  00,64E
....................             adcSup=(0.02*resistencia*1023)/5.0; 
0CE98:  MOVLW  0A
0CE9A:  MOVLB  8
0CE9C:  MOVWF  x8A
0CE9E:  MOVLW  D7
0CEA0:  MOVWF  x89
0CEA2:  MOVLW  23
0CEA4:  MOVWF  x88
0CEA6:  MOVLW  79
0CEA8:  MOVWF  x87
0CEAA:  MOVFF  625,88E
0CEAE:  MOVFF  624,88D
0CEB2:  MOVFF  623,88C
0CEB6:  MOVFF  622,88B
0CEBA:  MOVLB  0
0CEBC:  CALL   32D2
0CEC0:  MOVFF  00,866
0CEC4:  MOVFF  01,867
0CEC8:  MOVFF  02,868
0CECC:  MOVFF  03,869
0CED0:  MOVFF  03,88A
0CED4:  MOVFF  02,889
0CED8:  MOVFF  01,888
0CEDC:  MOVFF  00,887
0CEE0:  MOVLB  8
0CEE2:  CLRF   x8E
0CEE4:  MOVLW  C0
0CEE6:  MOVWF  x8D
0CEE8:  MOVLW  7F
0CEEA:  MOVWF  x8C
0CEEC:  MOVLW  88
0CEEE:  MOVWF  x8B
0CEF0:  MOVLB  0
0CEF2:  CALL   32D2
0CEF6:  MOVFF  00,866
0CEFA:  MOVFF  01,867
0CEFE:  MOVFF  02,868
0CF02:  MOVFF  03,869
0CF06:  MOVFF  03,86D
0CF0A:  MOVFF  02,86C
0CF0E:  MOVFF  01,86B
0CF12:  MOVFF  00,86A
0CF16:  MOVLB  8
0CF18:  CLRF   x71
0CF1A:  CLRF   x70
0CF1C:  MOVLW  20
0CF1E:  MOVWF  x6F
0CF20:  MOVLW  81
0CF22:  MOVWF  x6E
0CF24:  MOVLB  0
0CF26:  CALL   1E0A
0CF2A:  MOVFF  03,64D
0CF2E:  MOVFF  02,64C
0CF32:  MOVFF  01,64B
0CF36:  MOVFF  00,64A
....................             m=(Tsup-Tinf)/(adcSup-adcInf); 
0CF3A:  BSF    FD8.1
0CF3C:  MOVFF  655,875
0CF40:  MOVFF  654,874
0CF44:  MOVFF  653,873
0CF48:  MOVFF  652,872
0CF4C:  MOVFF  659,879
0CF50:  MOVFF  658,878
0CF54:  MOVFF  657,877
0CF58:  MOVFF  656,876
0CF5C:  CALL   1F68
0CF60:  MOVFF  00,866
0CF64:  MOVFF  01,867
0CF68:  MOVFF  02,868
0CF6C:  MOVFF  03,869
0CF70:  BSF    FD8.1
0CF72:  MOVFF  64D,875
0CF76:  MOVFF  64C,874
0CF7A:  MOVFF  64B,873
0CF7E:  MOVFF  64A,872
0CF82:  MOVFF  651,879
0CF86:  MOVFF  650,878
0CF8A:  MOVFF  64F,877
0CF8E:  MOVFF  64E,876
0CF92:  CALL   1F68
0CF96:  MOVFF  869,86D
0CF9A:  MOVFF  868,86C
0CF9E:  MOVFF  867,86B
0CFA2:  MOVFF  866,86A
0CFA6:  MOVFF  03,871
0CFAA:  MOVFF  02,870
0CFAE:  MOVFF  01,86F
0CFB2:  MOVFF  00,86E
0CFB6:  CALL   1E0A
0CFBA:  MOVFF  03,645
0CFBE:  MOVFF  02,644
0CFC2:  MOVFF  01,643
0CFC6:  MOVFF  00,642
....................             b=Tsup-(m*adcSup); 
0CFCA:  MOVFF  645,88A
0CFCE:  MOVFF  644,889
0CFD2:  MOVFF  643,888
0CFD6:  MOVFF  642,887
0CFDA:  MOVFF  64D,88E
0CFDE:  MOVFF  64C,88D
0CFE2:  MOVFF  64B,88C
0CFE6:  MOVFF  64A,88B
0CFEA:  CALL   32D2
0CFEE:  BSF    FD8.1
0CFF0:  MOVFF  655,875
0CFF4:  MOVFF  654,874
0CFF8:  MOVFF  653,873
0CFFC:  MOVFF  652,872
0D000:  MOVFF  03,879
0D004:  MOVFF  02,878
0D008:  MOVFF  01,877
0D00C:  MOVFF  00,876
0D010:  CALL   1F68
0D014:  MOVFF  03,649
0D018:  MOVFF  02,648
0D01C:  MOVFF  01,647
0D020:  MOVFF  00,646
0D024:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==111){ // Menu de Pendiente de calentamiento de mufla 
0D026:  MOVF   x9B,W
0D028:  SUBLW  6F
0D02A:  BTFSS  FD8.2
0D02C:  BRA    D2A8
....................        
....................       if(penMufla>255)       
0D02E:  MOVLB  8
0D030:  CLRF   x69
0D032:  CLRF   x68
0D034:  MOVLW  7F
0D036:  MOVWF  x67
0D038:  MOVLW  86
0D03A:  MOVWF  x66
0D03C:  MOVFF  65D,86D
0D040:  MOVFF  65C,86C
0D044:  MOVFF  65B,86B
0D048:  MOVFF  65A,86A
0D04C:  MOVLB  0
0D04E:  CALL   1D90
0D052:  BNC   D062
....................          penMufla=1; 
0D054:  MOVLB  6
0D056:  CLRF   x5D
0D058:  CLRF   x5C
0D05A:  CLRF   x5B
0D05C:  MOVLW  7F
0D05E:  MOVWF  x5A
....................       else if(penMufla<1) 
0D060:  BRA    D094
0D062:  MOVFF  65D,869
0D066:  MOVFF  65C,868
0D06A:  MOVFF  65B,867
0D06E:  MOVFF  65A,866
0D072:  MOVLB  8
0D074:  CLRF   x6D
0D076:  CLRF   x6C
0D078:  CLRF   x6B
0D07A:  MOVLW  7F
0D07C:  MOVWF  x6A
0D07E:  MOVLB  0
0D080:  CALL   1D90
0D084:  BNC   D094
....................          penMufla=255; 
0D086:  MOVLB  6
0D088:  CLRF   x5D
0D08A:  CLRF   x5C
0D08C:  MOVLW  7F
0D08E:  MOVWF  x5B
0D090:  MOVLW  86
0D092:  MOVWF  x5A
....................        
....................       if(visual==1){ 
0D094:  MOVLB  5
0D096:  BTFSS  x87.7
0D098:  BRA    D120
....................          glcd_fillScreen(OFF); 
0D09A:  MOVLB  8
0D09C:  CLRF   x6D
0D09E:  MOVLB  0
0D0A0:  CALL   1424
....................          strcpy(Menus.Letra,"m Mufla"); 
0D0A4:  MOVLW  08
0D0A6:  MOVWF  FEA
0D0A8:  MOVLW  46
0D0AA:  MOVWF  FE9
0D0AC:  MOVFF  FF2,866
0D0B0:  BCF    FF2.7
0D0B2:  MOVLW  00
0D0B4:  CALL   116E
0D0B8:  TBLRD*-
0D0BA:  TBLRD*+
0D0BC:  MOVF   FF5,W
0D0BE:  MOVWF  FEE
0D0C0:  IORLW  00
0D0C2:  BNZ   D0BA
0D0C4:  MOVLB  8
0D0C6:  BTFSC  x66.7
0D0C8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0D0CA:  MOVLW  08
0D0CC:  MOVWF  x6E
0D0CE:  MOVLW  46
0D0D0:  MOVWF  x6D
0D0D2:  CLRF   x6F
0D0D4:  CLRF   x70
0D0D6:  MOVLW  01
0D0D8:  MOVWF  x71
0D0DA:  MOVLW  02
0D0DC:  MOVWF  x72
0D0DE:  MOVLB  0
0D0E0:  CALL   1A52
....................           
....................          displayTemperatura(penMufla,30,30,0,3); 
0D0E4:  MOVFF  65D,875
0D0E8:  MOVFF  65C,874
0D0EC:  MOVFF  65B,873
0D0F0:  MOVFF  65A,872
0D0F4:  CALL   587C
0D0F8:  MOVFF  02,867
0D0FC:  MOVFF  01,866
0D100:  MOVFF  02,86C
0D104:  MOVFF  01,86B
0D108:  MOVLW  1E
0D10A:  MOVLB  8
0D10C:  MOVWF  x6D
0D10E:  MOVWF  x6E
0D110:  CLRF   x6F
0D112:  MOVLW  03
0D114:  MOVWF  x70
0D116:  MOVLB  0
0D118:  CALL   405C
....................           
....................          visual=0; 
0D11C:  MOVLB  5
0D11E:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0D120:  BSF    F92.5
0D122:  BTFSC  F80.5
0D124:  BRA    D180
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D126:  BSF    F8B.4
0D128:  BCF    F94.4
0D12A:  MOVLW  0A
0D12C:  MOVLB  8
0D12E:  MOVWF  x6E
0D130:  MOVLB  0
0D132:  CALL   13A4
0D136:  BCF    F8B.4
0D138:  BCF    F94.4
....................             visual=1; 
0D13A:  MOVLB  5
0D13C:  BSF    x87.7
....................             penMufla+=1.0; 
0D13E:  BCF    FD8.1
0D140:  MOVFF  65D,875
0D144:  MOVFF  65C,874
0D148:  MOVFF  65B,873
0D14C:  MOVFF  65A,872
0D150:  MOVLB  8
0D152:  CLRF   x79
0D154:  CLRF   x78
0D156:  CLRF   x77
0D158:  MOVLW  7F
0D15A:  MOVWF  x76
0D15C:  MOVLB  0
0D15E:  CALL   1F68
0D162:  MOVFF  03,65D
0D166:  MOVFF  02,65C
0D16A:  MOVFF  01,65B
0D16E:  MOVFF  00,65A
....................             delay_ms(30); 
0D172:  MOVLW  1E
0D174:  MOVLB  8
0D176:  MOVWF  x6E
0D178:  MOVLB  0
0D17A:  CALL   13A4
0D17E:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0D180:  BSF    F96.0
0D182:  BTFSC  F84.0
0D184:  BRA    D1E0
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D186:  BSF    F8B.4
0D188:  BCF    F94.4
0D18A:  MOVLW  0A
0D18C:  MOVLB  8
0D18E:  MOVWF  x6E
0D190:  MOVLB  0
0D192:  CALL   13A4
0D196:  BCF    F8B.4
0D198:  BCF    F94.4
....................             visual=1; 
0D19A:  MOVLB  5
0D19C:  BSF    x87.7
....................             penMufla-=1.0; 
0D19E:  BSF    FD8.1
0D1A0:  MOVFF  65D,875
0D1A4:  MOVFF  65C,874
0D1A8:  MOVFF  65B,873
0D1AC:  MOVFF  65A,872
0D1B0:  MOVLB  8
0D1B2:  CLRF   x79
0D1B4:  CLRF   x78
0D1B6:  CLRF   x77
0D1B8:  MOVLW  7F
0D1BA:  MOVWF  x76
0D1BC:  MOVLB  0
0D1BE:  CALL   1F68
0D1C2:  MOVFF  03,65D
0D1C6:  MOVFF  02,65C
0D1CA:  MOVFF  01,65B
0D1CE:  MOVFF  00,65A
....................             delay_ms(30); 
0D1D2:  MOVLW  1E
0D1D4:  MOVLB  8
0D1D6:  MOVWF  x6E
0D1D8:  MOVLB  0
0D1DA:  CALL   13A4
0D1DE:  MOVLB  5
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0D1E0:  BSF    F96.1
0D1E2:  BTFSC  F84.1
0D1E4:  BRA    D20A
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D1E6:  BSF    F8B.4
0D1E8:  BCF    F94.4
0D1EA:  MOVLW  0A
0D1EC:  MOVLB  8
0D1EE:  MOVWF  x6E
0D1F0:  MOVLB  0
0D1F2:  CALL   13A4
0D1F6:  BCF    F8B.4
0D1F8:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0D1FA:  MOVLW  1E
0D1FC:  MOVLB  8
0D1FE:  MOVWF  x6E
0D200:  MOVLB  0
0D202:  CALL   13A4
0D206:  MOVLB  5
0D208:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0D20A:  BSF    F96.2
0D20C:  BTFSC  F84.2
0D20E:  BRA    D2A8
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D210:  BSF    F8B.4
0D212:  BCF    F94.4
0D214:  MOVLW  0A
0D216:  MOVLB  8
0D218:  MOVWF  x6E
0D21A:  MOVLB  0
0D21C:  CALL   13A4
0D220:  BCF    F8B.4
0D222:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0D224:  MOVLW  04
0D226:  MOVLB  8
0D228:  MOVWF  x66
0D22A:  MOVLW  AF
0D22C:  MOVWF  x6E
0D22E:  MOVLB  0
0D230:  CALL   13A4
0D234:  MOVLB  8
0D236:  DECFSZ x66,F
0D238:  BRA    D22A
0D23A:  MOVLW  64
0D23C:  MOVLB  5
0D23E:  MOVWF  x9B
0D240:  MOVLB  8
0D242:  CLRF   x6D
0D244:  MOVLB  0
0D246:  CALL   1424
0D24A:  MOVLW  01
0D24C:  MOVLB  5
0D24E:  MOVWF  xA2
0D250:  BSF    x87.7
....................             write_eeprom(458,(int8)penMufla); 
0D252:  MOVFF  65D,875
0D256:  MOVFF  65C,874
0D25A:  MOVFF  65B,873
0D25E:  MOVFF  65A,872
0D262:  MOVLB  0
0D264:  CALL   587C
0D268:  MOVFF  01,866
0D26C:  MOVLW  01
0D26E:  MOVWF  FAA
0D270:  MOVLW  CA
0D272:  MOVWF  FA9
0D274:  MOVFF  866,FA8
0D278:  BCF    FA6.6
0D27A:  BCF    FA6.7
0D27C:  BSF    FA6.2
0D27E:  MOVF   FF2,W
0D280:  MOVWF  00
0D282:  BCF    FF2.7
0D284:  MOVLB  F
0D286:  MOVLW  55
0D288:  MOVWF  FA7
0D28A:  MOVLW  AA
0D28C:  MOVWF  FA7
0D28E:  BSF    FA6.1
0D290:  BTFSC  FA6.1
0D292:  BRA    D290
0D294:  BCF    FA6.2
0D296:  MOVF   00,W
0D298:  IORWF  FF2,F
....................             delay_ms(10); 
0D29A:  MOVLW  0A
0D29C:  MOVLB  8
0D29E:  MOVWF  x6E
0D2A0:  MOVLB  0
0D2A2:  CALL   13A4
0D2A6:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==112){ // Menu de Pendiente de termocupla 
0D2A8:  MOVF   x9B,W
0D2AA:  SUBLW  70
0D2AC:  BTFSS  FD8.2
0D2AE:  BRA    D57A
....................        
....................       if(m>2.0)       
0D2B0:  MOVLB  8
0D2B2:  CLRF   x69
0D2B4:  CLRF   x68
0D2B6:  CLRF   x67
0D2B8:  MOVLW  80
0D2BA:  MOVWF  x66
0D2BC:  MOVFF  645,86D
0D2C0:  MOVFF  644,86C
0D2C4:  MOVFF  643,86B
0D2C8:  MOVFF  642,86A
0D2CC:  MOVLB  0
0D2CE:  CALL   1D90
0D2D2:  BNC   D2E8
....................          m=1.2; 
0D2D4:  MOVLW  9A
0D2D6:  MOVLB  6
0D2D8:  MOVWF  x45
0D2DA:  MOVLW  99
0D2DC:  MOVWF  x44
0D2DE:  MOVLW  19
0D2E0:  MOVWF  x43
0D2E2:  MOVLW  7F
0D2E4:  MOVWF  x42
....................       else if(m<1.2) 
0D2E6:  BRA    D31E
0D2E8:  MOVFF  645,869
0D2EC:  MOVFF  644,868
0D2F0:  MOVFF  643,867
0D2F4:  MOVFF  642,866
0D2F8:  MOVLW  9A
0D2FA:  MOVLB  8
0D2FC:  MOVWF  x6D
0D2FE:  MOVLW  99
0D300:  MOVWF  x6C
0D302:  MOVLW  19
0D304:  MOVWF  x6B
0D306:  MOVLW  7F
0D308:  MOVWF  x6A
0D30A:  MOVLB  0
0D30C:  CALL   1D90
0D310:  BNC   D31E
....................          m=2.0; 
0D312:  MOVLB  6
0D314:  CLRF   x45
0D316:  CLRF   x44
0D318:  CLRF   x43
0D31A:  MOVLW  80
0D31C:  MOVWF  x42
....................        
....................       if(visual==1){ 
0D31E:  MOVLB  5
0D320:  BTFSS  x87.7
0D322:  BRA    D394
....................          glcd_fillScreen(OFF); 
0D324:  MOVLB  8
0D326:  CLRF   x6D
0D328:  MOVLB  0
0D32A:  CALL   1424
....................          strcpy(Menus.Letra,"m"); 
0D32E:  MOVLW  08
0D330:  MOVWF  FEA
0D332:  MOVLW  46
0D334:  MOVWF  FE9
0D336:  MOVFF  FF2,866
0D33A:  BCF    FF2.7
0D33C:  MOVLW  00
0D33E:  CALL   11B4
0D342:  TBLRD*-
0D344:  TBLRD*+
0D346:  MOVF   FF5,W
0D348:  MOVWF  FEE
0D34A:  IORLW  00
0D34C:  BNZ   D344
0D34E:  MOVLB  8
0D350:  BTFSC  x66.7
0D352:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0D354:  MOVLW  08
0D356:  MOVWF  x6E
0D358:  MOVLW  46
0D35A:  MOVWF  x6D
0D35C:  CLRF   x6F
0D35E:  CLRF   x70
0D360:  MOVLW  01
0D362:  MOVWF  x71
0D364:  MOVLW  02
0D366:  MOVWF  x72
0D368:  MOVLB  0
0D36A:  CALL   1A52
....................           
....................          displayFloat(m,30,30,3); 
0D36E:  MOVFF  645,86D
0D372:  MOVFF  644,86C
0D376:  MOVFF  643,86B
0D37A:  MOVFF  642,86A
0D37E:  MOVLW  1E
0D380:  MOVLB  8
0D382:  MOVWF  x6E
0D384:  MOVWF  x6F
0D386:  MOVLW  03
0D388:  MOVWF  x70
0D38A:  MOVLB  0
0D38C:  CALL   6B98
....................           
....................          visual=0; 
0D390:  MOVLB  5
0D392:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0D394:  BSF    F92.5
0D396:  BTFSC  F80.5
0D398:  BRA    D3FA
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D39A:  BSF    F8B.4
0D39C:  BCF    F94.4
0D39E:  MOVLW  0A
0D3A0:  MOVLB  8
0D3A2:  MOVWF  x6E
0D3A4:  MOVLB  0
0D3A6:  CALL   13A4
0D3AA:  BCF    F8B.4
0D3AC:  BCF    F94.4
....................             visual=1; 
0D3AE:  MOVLB  5
0D3B0:  BSF    x87.7
....................             m+=0.01; 
0D3B2:  BCF    FD8.1
0D3B4:  MOVFF  645,875
0D3B8:  MOVFF  644,874
0D3BC:  MOVFF  643,873
0D3C0:  MOVFF  642,872
0D3C4:  MOVLW  0A
0D3C6:  MOVLB  8
0D3C8:  MOVWF  x79
0D3CA:  MOVLW  D7
0D3CC:  MOVWF  x78
0D3CE:  MOVLW  23
0D3D0:  MOVWF  x77
0D3D2:  MOVLW  78
0D3D4:  MOVWF  x76
0D3D6:  MOVLB  0
0D3D8:  CALL   1F68
0D3DC:  MOVFF  03,645
0D3E0:  MOVFF  02,644
0D3E4:  MOVFF  01,643
0D3E8:  MOVFF  00,642
....................             delay_ms(10); 
0D3EC:  MOVLW  0A
0D3EE:  MOVLB  8
0D3F0:  MOVWF  x6E
0D3F2:  MOVLB  0
0D3F4:  CALL   13A4
0D3F8:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0D3FA:  BSF    F96.0
0D3FC:  BTFSC  F84.0
0D3FE:  BRA    D460
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D400:  BSF    F8B.4
0D402:  BCF    F94.4
0D404:  MOVLW  0A
0D406:  MOVLB  8
0D408:  MOVWF  x6E
0D40A:  MOVLB  0
0D40C:  CALL   13A4
0D410:  BCF    F8B.4
0D412:  BCF    F94.4
....................             visual=1; 
0D414:  MOVLB  5
0D416:  BSF    x87.7
....................             m-=0.01; 
0D418:  BSF    FD8.1
0D41A:  MOVFF  645,875
0D41E:  MOVFF  644,874
0D422:  MOVFF  643,873
0D426:  MOVFF  642,872
0D42A:  MOVLW  0A
0D42C:  MOVLB  8
0D42E:  MOVWF  x79
0D430:  MOVLW  D7
0D432:  MOVWF  x78
0D434:  MOVLW  23
0D436:  MOVWF  x77
0D438:  MOVLW  78
0D43A:  MOVWF  x76
0D43C:  MOVLB  0
0D43E:  CALL   1F68
0D442:  MOVFF  03,645
0D446:  MOVFF  02,644
0D44A:  MOVFF  01,643
0D44E:  MOVFF  00,642
....................             delay_ms(10); 
0D452:  MOVLW  0A
0D454:  MOVLB  8
0D456:  MOVWF  x6E
0D458:  MOVLB  0
0D45A:  CALL   13A4
0D45E:  MOVLB  5
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0D460:  BSF    F96.1
0D462:  BTFSC  F84.1
0D464:  BRA    D48A
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D466:  BSF    F8B.4
0D468:  BCF    F94.4
0D46A:  MOVLW  0A
0D46C:  MOVLB  8
0D46E:  MOVWF  x6E
0D470:  MOVLB  0
0D472:  CALL   13A4
0D476:  BCF    F8B.4
0D478:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0D47A:  MOVLW  1E
0D47C:  MOVLB  8
0D47E:  MOVWF  x6E
0D480:  MOVLB  0
0D482:  CALL   13A4
0D486:  MOVLB  5
0D488:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0D48A:  BSF    F96.2
0D48C:  BTFSC  F84.2
0D48E:  BRA    D57A
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D490:  BSF    F8B.4
0D492:  BCF    F94.4
0D494:  MOVLW  0A
0D496:  MOVLB  8
0D498:  MOVWF  x6E
0D49A:  MOVLB  0
0D49C:  CALL   13A4
0D4A0:  BCF    F8B.4
0D4A2:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0D4A4:  MOVLW  04
0D4A6:  MOVLB  8
0D4A8:  MOVWF  x66
0D4AA:  MOVLW  AF
0D4AC:  MOVWF  x6E
0D4AE:  MOVLB  0
0D4B0:  CALL   13A4
0D4B4:  MOVLB  8
0D4B6:  DECFSZ x66,F
0D4B8:  BRA    D4AA
0D4BA:  MOVLW  64
0D4BC:  MOVLB  5
0D4BE:  MOVWF  x9B
0D4C0:  MOVLB  8
0D4C2:  CLRF   x6D
0D4C4:  MOVLB  0
0D4C6:  CALL   1424
0D4CA:  MOVLW  01
0D4CC:  MOVLB  5
0D4CE:  MOVWF  xA2
0D4D0:  BSF    x87.7
....................             write_eeprom(490,(int8)m); 
0D4D2:  MOVFF  645,875
0D4D6:  MOVFF  644,874
0D4DA:  MOVFF  643,873
0D4DE:  MOVFF  642,872
0D4E2:  MOVLB  0
0D4E4:  CALL   587C
0D4E8:  MOVFF  01,866
0D4EC:  MOVLW  01
0D4EE:  MOVWF  FAA
0D4F0:  MOVLW  EA
0D4F2:  MOVWF  FA9
0D4F4:  MOVFF  866,FA8
0D4F8:  BCF    FA6.6
0D4FA:  BCF    FA6.7
0D4FC:  BSF    FA6.2
0D4FE:  MOVF   FF2,W
0D500:  MOVWF  00
0D502:  BCF    FF2.7
0D504:  MOVLB  F
0D506:  MOVLW  55
0D508:  MOVWF  FA7
0D50A:  MOVLW  AA
0D50C:  MOVWF  FA7
0D50E:  BSF    FA6.1
0D510:  BTFSC  FA6.1
0D512:  BRA    D510
0D514:  BCF    FA6.2
0D516:  MOVF   00,W
0D518:  IORWF  FF2,F
....................             delay_ms(10); 
0D51A:  MOVLW  0A
0D51C:  MOVLB  8
0D51E:  MOVWF  x6E
0D520:  MOVLB  0
0D522:  CALL   13A4
....................             write_eeprom(491,extraeDecimal(m)); 
0D526:  MOVFF  645,869
0D52A:  MOVFF  644,868
0D52E:  MOVFF  643,867
0D532:  MOVFF  642,866
0D536:  CALL   6C10
0D53A:  MOVFF  01,866
0D53E:  MOVLW  01
0D540:  MOVWF  FAA
0D542:  MOVLW  EB
0D544:  MOVWF  FA9
0D546:  MOVFF  866,FA8
0D54A:  BCF    FA6.6
0D54C:  BCF    FA6.7
0D54E:  BSF    FA6.2
0D550:  MOVF   FF2,W
0D552:  MOVWF  00
0D554:  BCF    FF2.7
0D556:  MOVLB  F
0D558:  MOVLW  55
0D55A:  MOVWF  FA7
0D55C:  MOVLW  AA
0D55E:  MOVWF  FA7
0D560:  BSF    FA6.1
0D562:  BTFSC  FA6.1
0D564:  BRA    D562
0D566:  BCF    FA6.2
0D568:  MOVF   00,W
0D56A:  IORWF  FF2,F
....................             delay_ms(10); 
0D56C:  MOVLW  0A
0D56E:  MOVLB  8
0D570:  MOVWF  x6E
0D572:  MOVLB  0
0D574:  CALL   13A4
0D578:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==113){ // Menu de b de termocupla 
0D57A:  MOVF   x9B,W
0D57C:  SUBLW  71
0D57E:  BTFSS  FD8.2
0D580:  BRA    D88E
....................        
....................       if(b>400)       
0D582:  MOVLB  8
0D584:  CLRF   x69
0D586:  CLRF   x68
0D588:  MOVLW  48
0D58A:  MOVWF  x67
0D58C:  MOVLW  87
0D58E:  MOVWF  x66
0D590:  MOVFF  649,86D
0D594:  MOVFF  648,86C
0D598:  MOVFF  647,86B
0D59C:  MOVFF  646,86A
0D5A0:  MOVLB  0
0D5A2:  CALL   1D90
0D5A6:  BNC   D5B8
....................          b=300; 
0D5A8:  MOVLB  6
0D5AA:  CLRF   x49
0D5AC:  CLRF   x48
0D5AE:  MOVLW  16
0D5B0:  MOVWF  x47
0D5B2:  MOVLW  87
0D5B4:  MOVWF  x46
....................       else if(b<300) 
0D5B6:  BRA    D5EC
0D5B8:  MOVFF  649,869
0D5BC:  MOVFF  648,868
0D5C0:  MOVFF  647,867
0D5C4:  MOVFF  646,866
0D5C8:  MOVLB  8
0D5CA:  CLRF   x6D
0D5CC:  CLRF   x6C
0D5CE:  MOVLW  16
0D5D0:  MOVWF  x6B
0D5D2:  MOVLW  87
0D5D4:  MOVWF  x6A
0D5D6:  MOVLB  0
0D5D8:  CALL   1D90
0D5DC:  BNC   D5EC
....................          b=400; 
0D5DE:  MOVLB  6
0D5E0:  CLRF   x49
0D5E2:  CLRF   x48
0D5E4:  MOVLW  48
0D5E6:  MOVWF  x47
0D5E8:  MOVLW  87
0D5EA:  MOVWF  x46
....................        
....................       if(visual==1){ 
0D5EC:  MOVLB  5
0D5EE:  BTFSS  x87.7
0D5F0:  BRA    D662
....................          glcd_fillScreen(OFF); 
0D5F2:  MOVLB  8
0D5F4:  CLRF   x6D
0D5F6:  MOVLB  0
0D5F8:  CALL   1424
....................          strcpy(Menus.Letra,"b"); 
0D5FC:  MOVLW  08
0D5FE:  MOVWF  FEA
0D600:  MOVLW  46
0D602:  MOVWF  FE9
0D604:  MOVFF  FF2,866
0D608:  BCF    FF2.7
0D60A:  MOVLW  00
0D60C:  CALL   1194
0D610:  TBLRD*-
0D612:  TBLRD*+
0D614:  MOVF   FF5,W
0D616:  MOVWF  FEE
0D618:  IORLW  00
0D61A:  BNZ   D612
0D61C:  MOVLB  8
0D61E:  BTFSC  x66.7
0D620:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0D622:  MOVLW  08
0D624:  MOVWF  x6E
0D626:  MOVLW  46
0D628:  MOVWF  x6D
0D62A:  CLRF   x6F
0D62C:  CLRF   x70
0D62E:  MOVLW  01
0D630:  MOVWF  x71
0D632:  MOVLW  02
0D634:  MOVWF  x72
0D636:  MOVLB  0
0D638:  CALL   1A52
....................           
....................          displayFloat(b,30,30,3); 
0D63C:  MOVFF  649,86D
0D640:  MOVFF  648,86C
0D644:  MOVFF  647,86B
0D648:  MOVFF  646,86A
0D64C:  MOVLW  1E
0D64E:  MOVLB  8
0D650:  MOVWF  x6E
0D652:  MOVWF  x6F
0D654:  MOVLW  03
0D656:  MOVWF  x70
0D658:  MOVLB  0
0D65A:  CALL   6B98
....................           
....................          visual=0; 
0D65E:  MOVLB  5
0D660:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
0D662:  BSF    F92.5
0D664:  BTFSC  F80.5
0D666:  BRA    D6C8
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D668:  BSF    F8B.4
0D66A:  BCF    F94.4
0D66C:  MOVLW  0A
0D66E:  MOVLB  8
0D670:  MOVWF  x6E
0D672:  MOVLB  0
0D674:  CALL   13A4
0D678:  BCF    F8B.4
0D67A:  BCF    F94.4
....................             visual=1; 
0D67C:  MOVLB  5
0D67E:  BSF    x87.7
....................             b+=0.1; 
0D680:  BCF    FD8.1
0D682:  MOVFF  649,875
0D686:  MOVFF  648,874
0D68A:  MOVFF  647,873
0D68E:  MOVFF  646,872
0D692:  MOVLW  CD
0D694:  MOVLB  8
0D696:  MOVWF  x79
0D698:  MOVLW  CC
0D69A:  MOVWF  x78
0D69C:  MOVLW  4C
0D69E:  MOVWF  x77
0D6A0:  MOVLW  7B
0D6A2:  MOVWF  x76
0D6A4:  MOVLB  0
0D6A6:  CALL   1F68
0D6AA:  MOVFF  03,649
0D6AE:  MOVFF  02,648
0D6B2:  MOVFF  01,647
0D6B6:  MOVFF  00,646
....................             delay_ms(10); 
0D6BA:  MOVLW  0A
0D6BC:  MOVLB  8
0D6BE:  MOVWF  x6E
0D6C0:  MOVLB  0
0D6C2:  CALL   13A4
0D6C6:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0D6C8:  BSF    F96.0
0D6CA:  BTFSC  F84.0
0D6CC:  BRA    D72E
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D6CE:  BSF    F8B.4
0D6D0:  BCF    F94.4
0D6D2:  MOVLW  0A
0D6D4:  MOVLB  8
0D6D6:  MOVWF  x6E
0D6D8:  MOVLB  0
0D6DA:  CALL   13A4
0D6DE:  BCF    F8B.4
0D6E0:  BCF    F94.4
....................             visual=1; 
0D6E2:  MOVLB  5
0D6E4:  BSF    x87.7
....................             b-=0.1; 
0D6E6:  BSF    FD8.1
0D6E8:  MOVFF  649,875
0D6EC:  MOVFF  648,874
0D6F0:  MOVFF  647,873
0D6F4:  MOVFF  646,872
0D6F8:  MOVLW  CD
0D6FA:  MOVLB  8
0D6FC:  MOVWF  x79
0D6FE:  MOVLW  CC
0D700:  MOVWF  x78
0D702:  MOVLW  4C
0D704:  MOVWF  x77
0D706:  MOVLW  7B
0D708:  MOVWF  x76
0D70A:  MOVLB  0
0D70C:  CALL   1F68
0D710:  MOVFF  03,649
0D714:  MOVFF  02,648
0D718:  MOVFF  01,647
0D71C:  MOVFF  00,646
....................             delay_ms(10); 
0D720:  MOVLW  0A
0D722:  MOVLB  8
0D724:  MOVWF  x6E
0D726:  MOVLB  0
0D728:  CALL   13A4
0D72C:  MOVLB  5
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0D72E:  BSF    F96.1
0D730:  BTFSC  F84.1
0D732:  BRA    D758
....................          {   
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D734:  BSF    F8B.4
0D736:  BCF    F94.4
0D738:  MOVLW  0A
0D73A:  MOVLB  8
0D73C:  MOVWF  x6E
0D73E:  MOVLB  0
0D740:  CALL   13A4
0D744:  BCF    F8B.4
0D746:  BCF    F94.4
....................             delay_ms(30);visual=1; 
0D748:  MOVLW  1E
0D74A:  MOVLB  8
0D74C:  MOVWF  x6E
0D74E:  MOVLB  0
0D750:  CALL   13A4
0D754:  MOVLB  5
0D756:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0D758:  BSF    F96.2
0D75A:  BTFSC  F84.2
0D75C:  BRA    D88E
....................          { 
....................             Buzz_on;delay_ms(10);Buzz_off; 
0D75E:  BSF    F8B.4
0D760:  BCF    F94.4
0D762:  MOVLW  0A
0D764:  MOVLB  8
0D766:  MOVWF  x6E
0D768:  MOVLB  0
0D76A:  CALL   13A4
0D76E:  BCF    F8B.4
0D770:  BCF    F94.4
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0D772:  MOVLW  04
0D774:  MOVLB  8
0D776:  MOVWF  x66
0D778:  MOVLW  AF
0D77A:  MOVWF  x6E
0D77C:  MOVLB  0
0D77E:  CALL   13A4
0D782:  MOVLB  8
0D784:  DECFSZ x66,F
0D786:  BRA    D778
0D788:  MOVLW  64
0D78A:  MOVLB  5
0D78C:  MOVWF  x9B
0D78E:  MOVLB  8
0D790:  CLRF   x6D
0D792:  MOVLB  0
0D794:  CALL   1424
0D798:  MOVLW  01
0D79A:  MOVLB  5
0D79C:  MOVWF  xA2
0D79E:  BSF    x87.7
....................             b16=(int16)b; 
0D7A0:  MOVFF  649,875
0D7A4:  MOVFF  648,874
0D7A8:  MOVFF  647,873
0D7AC:  MOVFF  646,872
0D7B0:  MOVLB  0
0D7B2:  CALL   587C
0D7B6:  MOVFF  02,5BD
0D7BA:  MOVFF  01,5BC
....................             write_eeprom(492,make8(b16,0)); 
0D7BE:  MOVFF  5BC,866
0D7C2:  MOVLW  01
0D7C4:  MOVWF  FAA
0D7C6:  MOVLW  EC
0D7C8:  MOVWF  FA9
0D7CA:  MOVFF  866,FA8
0D7CE:  BCF    FA6.6
0D7D0:  BCF    FA6.7
0D7D2:  BSF    FA6.2
0D7D4:  MOVF   FF2,W
0D7D6:  MOVWF  00
0D7D8:  BCF    FF2.7
0D7DA:  MOVLB  F
0D7DC:  MOVLW  55
0D7DE:  MOVWF  FA7
0D7E0:  MOVLW  AA
0D7E2:  MOVWF  FA7
0D7E4:  BSF    FA6.1
0D7E6:  BTFSC  FA6.1
0D7E8:  BRA    D7E6
0D7EA:  BCF    FA6.2
0D7EC:  MOVF   00,W
0D7EE:  IORWF  FF2,F
....................             delay_ms(10); 
0D7F0:  MOVLW  0A
0D7F2:  MOVLB  8
0D7F4:  MOVWF  x6E
0D7F6:  MOVLB  0
0D7F8:  CALL   13A4
....................             write_eeprom(493,make8(b16,1)); 
0D7FC:  MOVFF  5BD,866
0D800:  MOVLW  01
0D802:  MOVWF  FAA
0D804:  MOVLW  ED
0D806:  MOVWF  FA9
0D808:  MOVFF  866,FA8
0D80C:  BCF    FA6.6
0D80E:  BCF    FA6.7
0D810:  BSF    FA6.2
0D812:  MOVF   FF2,W
0D814:  MOVWF  00
0D816:  BCF    FF2.7
0D818:  MOVLB  F
0D81A:  MOVLW  55
0D81C:  MOVWF  FA7
0D81E:  MOVLW  AA
0D820:  MOVWF  FA7
0D822:  BSF    FA6.1
0D824:  BTFSC  FA6.1
0D826:  BRA    D824
0D828:  BCF    FA6.2
0D82A:  MOVF   00,W
0D82C:  IORWF  FF2,F
....................             delay_ms(10); 
0D82E:  MOVLW  0A
0D830:  MOVLB  8
0D832:  MOVWF  x6E
0D834:  MOVLB  0
0D836:  CALL   13A4
....................             write_eeprom(494,extraeDecimal(b)); 
0D83A:  MOVFF  649,869
0D83E:  MOVFF  648,868
0D842:  MOVFF  647,867
0D846:  MOVFF  646,866
0D84A:  CALL   6C10
0D84E:  MOVFF  01,866
0D852:  MOVLW  01
0D854:  MOVWF  FAA
0D856:  MOVLW  EE
0D858:  MOVWF  FA9
0D85A:  MOVFF  866,FA8
0D85E:  BCF    FA6.6
0D860:  BCF    FA6.7
0D862:  BSF    FA6.2
0D864:  MOVF   FF2,W
0D866:  MOVWF  00
0D868:  BCF    FF2.7
0D86A:  MOVLB  F
0D86C:  MOVLW  55
0D86E:  MOVWF  FA7
0D870:  MOVLW  AA
0D872:  MOVWF  FA7
0D874:  BSF    FA6.1
0D876:  BTFSC  FA6.1
0D878:  BRA    D876
0D87A:  BCF    FA6.2
0D87C:  MOVF   00,W
0D87E:  IORWF  FF2,F
....................             delay_ms(10); 
0D880:  MOVLW  0A
0D882:  MOVLB  8
0D884:  MOVWF  x6E
0D886:  MOVLB  0
0D888:  CALL   13A4
0D88C:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................       if(Lectura2==1) 
0D88E:  DECFSZ x8F,W
0D890:  BRA    D8B0
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
0D892:  MOVFF  58C,866
0D896:  MOVLB  0
0D898:  CALL   33C8
0D89C:  MOVFF  03,62D
0D8A0:  MOVFF  02,62C
0D8A4:  MOVFF  01,62B
0D8A8:  MOVFF  00,62A
....................          Lectura2=0; 
0D8AC:  MOVLB  5
0D8AE:  CLRF   x8F
....................       }  
....................  
....................       if(tiemporeset>=60) 
0D8B0:  MOVF   x97,W
0D8B2:  SUBLW  3B
0D8B4:  BC    D8D0
....................       { 
....................          if(Menu!=0 && Menu<100){ 
0D8B6:  MOVF   x9B,F
0D8B8:  BZ    D8D0
0D8BA:  MOVF   x9B,W
0D8BC:  SUBLW  63
0D8BE:  BNC   D8D0
....................             glcd_init(ON); 
0D8C0:  MOVLW  01
0D8C2:  MOVLB  8
0D8C4:  MOVWF  x66
0D8C6:  MOVLB  0
0D8C8:  CALL   1536
....................             tiemporeset=0; 
0D8CC:  MOVLB  5
0D8CE:  CLRF   x97
....................          } 
....................       }  
....................  
....................  
....................    } 
0D8D0:  GOTO   73F0
.................... } 
0D8D4:  SLEEP 

Configuration Fuses:
   Word  1: 0200   HS NOIESO NOFCMEN
   Word  2: 1E1F   BROWNOUT NOWDT BORV20 NOPUT WDT32768
   Word  3: 0000   NOPBADEN NOLPT1OSC NOMCLR
   Word  4: 00B0   NOSTVREN NODEBUG NOLVP NOXINST BBSIZ4K
   Word  5: C03F   NOPROTECT NOCPD NOCPB
   Word  6: E03F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 403F   NOEBTR NOEBTRB
